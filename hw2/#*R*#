
R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.1.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> > options(STERM='iESS', str.dendrogram.last="'", editor='emacsclient', show.error.locations=TRUE)
> library(RUnit)
> errMsg <- function(err) print(err)
> load('ex2-tests.rda')
> simple.norm.sim.t
[[1]]
 [1] 26.99470 25.71114 25.18541 24.71823 25.10878 23.91426 24.01452 25.01513
 [9] 24.74795 23.53425 24.07754 25.03960 25.49382 23.17177 25.09147 25.67078
[17] 24.91892 26.26424 24.29661 24.95942 23.43384 25.24915 24.65958 25.41719
[25] 24.67353 24.10971 23.39184 22.67763 23.03278 25.02753 25.48360 25.14434
[33] 23.79956 25.88523 25.88694 25.00069 24.30676 25.26084 25.50669 25.56430
[41] 25.06116 24.89144 24.84530 25.95048 24.51230 24.07976 25.89798 24.64370
[49] 26.03190 25.66430

[[2]]
 [1] 50.96975 51.67562 51.98824 49.01294 48.16997 51.00814 49.13090 49.48480
 [9] 49.49978 49.72742 50.03838 50.06893 51.74017 51.30628 49.85507 51.56235
[17] 51.24215 51.46129 49.01416 50.92561 51.21749 50.73145 51.13399 52.18792
[25] 50.22120 49.06098 50.83844 50.52920 48.91169 49.20441 50.96832 50.18510
[33] 49.58743 49.16707 50.95488 47.96390 50.07445 49.08547 50.15602 50.02935
[41] 51.13688 50.00451 51.34171 48.63458 50.92604 49.50263 49.13982 49.93918
[49] 51.41028 50.00394

[[3]]
 [1] 74.85749 74.53453 74.57537 75.74732 75.65943 75.19883 74.93895 76.49203
 [9] 76.66074 75.77116 74.85250 75.50782 75.33651 75.60474 76.46995 74.04190
[17] 75.09222 74.19976 76.39596 74.52577 74.54877 72.83545 75.05589 75.32133
[25] 74.42044 74.35945 76.98710 76.32627 74.73665 73.94449 75.87395 76.50510
[33] 74.69076 76.22141 75.01253 74.50294 73.74450 74.58115 75.22685 76.11429
[41] 75.51192 75.03492 75.90916 74.45483 75.17074 75.09581 74.98074 74.14126
[49] 76.55032 74.62918

> ?rnorm
> rnorm(50, 50, 1)
 [1] 50.43246 52.00934 48.65754 49.74676 50.85615 48.49400 50.31469 50.25072
 [9] 50.33815 50.43083 50.31585 49.10687 50.73346 49.24863 48.08117 53.06072
[17] 49.20016 50.74136 53.05880 49.65248 49.75616 48.65970 47.83242 49.91316
[25] 50.55979 50.82619 51.95166 50.30827 48.83127 47.31806 47.61534 50.65867
[33] 49.17707 48.25541 48.41787 49.09576 49.46495 50.08771 49.71326 50.95133
[41] 48.72343 52.29235 51.77724 49.64793 48.87088 50.50774 49.51342 49.72087
[49] 49.43354 49.68566
> means = c(25, 50, 75)
> lapply(means, rnorm, n=50, sd=1)
Error in FUN(c(25, 50, 75)[[1L]], ...) : object 'sim.size' not found
> lapply(means, rnorm, n=50, sd=1)
[[1]]
 [1] 23.50144 24.12746 25.76728 25.04912 24.07596 24.81844 23.60341 25.33281
 [9] 24.26752 25.42048 25.09018 25.26581 26.06281 25.27065 26.27106 26.16048
[17] 25.34993 23.32381 27.76431 24.47413 26.07192 26.04103 25.79564 25.13076
[25] 22.80490 26.26323 23.97121 24.26404 25.39035 25.79646 24.45083 25.06526
[33] 25.30595 23.59378 24.84953 24.27514 25.25549 25.58035 23.30308 26.35431
[41] 23.79100 25.89705 26.79284 24.37695 22.63620 24.30737 26.43242 22.93870
[49] 24.83156 25.38660

[[2]]
 [1] 51.50472 50.91077 48.74882 50.58274 51.86257 49.75373 51.05220 48.61538
 [9] 50.84385 49.64245 50.00454 51.79194 50.22405 51.03407 49.07308 51.43144
[17] 47.19972 48.22004 50.00653 50.18702 50.06395 49.52697 49.52427 50.23555
[25] 50.70657 50.30962 48.83381 51.48064 49.05770 49.53648 48.53063 49.76834
[33] 50.31976 50.35056 49.98679 50.42368 49.36889 49.14880 50.48924 50.62110
[41] 50.15964 47.82559 51.72021 48.93635 48.81123 48.83289 49.52199 49.82775
[49] 48.16891 48.88551

[[3]]
 [1] 75.59148 76.28003 76.45064 75.12064 73.71640 74.34826 74.90351 73.61697
 [9] 76.00942 75.06082 75.44609 75.09253 73.43306 75.32280 74.80492 76.35980
[17] 75.42996 74.86514 76.19451 76.60092 73.42864 76.32992 76.66687 73.00728
[25] 74.79396 74.82606 73.54482 74.84342 74.58901 74.52274 75.39338 75.90611
[33] 75.30570 75.65069 75.95908 73.28077 75.33810 76.07223 73.72178 74.54640
[41] 75.57213 74.10080 73.42259 72.61964 76.28487 74.75849 73.97068 76.08074
[49] 75.95457 74.23188

> 
+ + + + 
> simpleNormSim <- function(means, sim.size=50, var=1) {
+     rv.sd = sqrt(var)
+     simulation <- lapply(means, rnorm, n=sim.size, sd=rv.sd)
+     return(simulation)
+ }
> set.seed(47)
> tryCatch(checkIdentical(simple.norm.sim.t, simpleNormSim(c(25, 50, 75))),
+          error=function(err) errMsg(err))
[1] TRUE
> sizes.t <- c(25, 50, 25, 50)
> means.t <- c(0, 5, 5, 0)
> vars.t <- c(1, 2, 1, 2)
> advanced.norm.sim.t
[[1]]
 [1]  1.99469634  0.71114251  0.18540528 -0.28176501  0.10877555 -1.08573747
 [7] -0.98548216  0.01513086 -0.25204590 -1.46575030 -0.92245624  0.03960243
[13]  0.49382018 -1.82822917  0.09147291  0.67077922 -0.08107805  1.26424109
[19] -0.70338819 -0.04057817 -1.56616208  0.24914817 -0.34041599  0.41719084
[25] -0.32646679

[[2]]
 [1] 3.740934 2.725718 1.715670 2.217932 5.038929 5.683919 5.204124 3.302321
 [9] 6.251905 6.254316 5.000971 4.019614 5.368878 5.716564 5.798043 5.086497
[17] 4.846466 4.781228 6.344188 4.310293 3.698581 6.269929 4.496123 6.459327
[25] 5.939463 6.371429 7.369691 7.811801 3.604089 2.411946 6.425728 3.770901
[33] 4.271400 4.292587 4.614517 5.054281 5.097488 7.460972 6.847354 4.795032
[41] 7.209493 6.756671 7.066580 3.605817 6.309017 6.721787 6.034427 6.603710
[49] 8.094183 5.312829

[[3]]
 [1] 4.060978 5.838443 5.529197 3.911691 4.204413 5.968324 5.185104 4.587430
 [9] 4.167072 5.954883 2.963902 5.074454 4.085469 5.156024 5.029347 6.136878
[17] 5.004507 6.341705 3.634576 5.926038 4.502632 4.139816 4.939175 6.410276
[25] 5.003945

[[4]]
 [1] -0.20154597 -0.65827833 -0.60051651  1.05687088  0.93257344  0.28118730
 [7] -0.08633255  2.11005192  2.34863453  1.09057861 -0.20859096  0.71816863
[13]  0.47589288  0.85523112  2.07882359 -1.35495809  0.13041976 -1.13170346
[19]  1.97418012 -0.67065545 -0.63813849 -3.06113682  0.07904602  0.45442983
[25] -0.81961482 -0.90587550  2.81018780  1.87563099 -0.37243441 -1.49270980
[31]  1.23595454  2.12852664 -0.43733272  1.72733398  0.01771562 -0.70295179
[37] -1.77553877 -0.59234217  0.32081452  1.57584747  0.72396773  0.04939137
[43]  1.28574907 -0.77098390  0.24146620  0.13549558 -0.02723141 -1.21444677
[49]  2.19248041 -0.52442339

> lapply(means, simpleNormSim, sim.size=sizes.t, var=vars.t)
Error in FUN(c(25, 50, 75)[[1L]], ...) (from ex2.r!30474O1O#2) : object 'vars' not found
> lapply(means, simpleNormSim, sim.size=sizes.t, var=vars.t)
[[1]]
[[1]][[1]]
[1] 27.14616 26.32262 23.65075 24.84312


[[2]]
[[2]][[1]]
[1] 51.26050 51.44839 50.92547 52.73305


[[3]]
[[3]][[1]]
[1] 76.28451 75.82901 75.22013 76.87475


> length(sizes.t)
[1] 4
> seq(1::length(sizes.t))
Error: unexpected symbol in "seq(1..length"
> seq(1:length(sizes.t))
Error: unexpected '::' in "seq(1::"
> seq(1:length(sizes.t))
[1] 1 2 3 4
> means.t[1]
[1] 0
>     lapply(idcs, function(x) { return(simpleNormSim(means[x], sizes.t[x], vars.t[x])) })

    lapply(idcs, function(x) { return(simpleNormSim(means[x], sizes.t[x], vars.t[x])) })
Error in lapply(idcs, function(x) { : object 'idcs' not found
> idcs = seq(1:length(sizes.t))
Error in seq(1:length(size.t)) : object 'size.t' not found
> idcs = seq(1:length(sizes.t))
> idcs
[1] 1 2 3 4
>     lapply(idcs, function(x) { return(simpleNormSim(means[x], sizes.t[x], vars.t[x])) })
[[1]]
[[1]][[1]]
 [1] 23.30680 25.85203 26.09566 24.34204 27.29674 23.72021 25.52347 26.59843
 [9] 23.97765 23.29190 26.71174 25.53048 25.13502 25.21394 24.32354 25.94535
[17] 23.86347 25.11053 25.02270 26.01656 25.31882 27.30546 23.58561 24.79536
[25] 24.97596


[[2]]
[[2]][[1]]
 [1] 50.05107 50.62219 51.22358 49.02056 50.71994 50.97448 50.08372 50.15256
 [9] 48.72519 47.71973 47.22390 50.89212 48.24681 52.55442 52.83493 48.80013
[17] 47.14918 52.38515 51.11034 51.67201 50.36083 50.43152 50.60703 50.06635
[25] 52.91141 51.23254 49.51157 49.78611 51.11469 50.05039 49.64407 47.06885
[33] 49.79824 47.86513 50.57069 46.68983 51.80263 48.63309 48.77699 49.48694
[41] 50.73701 50.51490 49.99729 51.77380 48.24791 50.16408 49.86152 50.32274
[49] 49.72075 50.38218


[[3]]
[[3]][[1]]
 [1] 74.55705 75.95778 76.17971 75.32196 74.28757 75.15303 76.00776 77.05195
 [9] 74.12777 73.56614 74.32137 75.68431 76.19069 74.14053 75.88675 76.82709
[17] 76.08636 75.53886 75.15864 74.51313 75.58406 74.08854 74.99008 76.39526
[25] 76.05565


[[4]]
[[4]][[1]]
 [1] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN
[20] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN
[39] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN


Warning message:
In FUN(NA_real_[[1L]], ...) : NAs produced
> advanced.norm.sim.t
[[1]]
 [1]  1.99469634  0.71114251  0.18540528 -0.28176501  0.10877555 -1.08573747
 [7] -0.98548216  0.01513086 -0.25204590 -1.46575030 -0.92245624  0.03960243
[13]  0.49382018 -1.82822917  0.09147291  0.67077922 -0.08107805  1.26424109
[19] -0.70338819 -0.04057817 -1.56616208  0.24914817 -0.34041599  0.41719084
[25] -0.32646679

[[2]]
 [1] 3.740934 2.725718 1.715670 2.217932 5.038929 5.683919 5.204124 3.302321
 [9] 6.251905 6.254316 5.000971 4.019614 5.368878 5.716564 5.798043 5.086497
[17] 4.846466 4.781228 6.344188 4.310293 3.698581 6.269929 4.496123 6.459327
[25] 5.939463 6.371429 7.369691 7.811801 3.604089 2.411946 6.425728 3.770901
[33] 4.271400 4.292587 4.614517 5.054281 5.097488 7.460972 6.847354 4.795032
[41] 7.209493 6.756671 7.066580 3.605817 6.309017 6.721787 6.034427 6.603710
[49] 8.094183 5.312829

[[3]]
 [1] 4.060978 5.838443 5.529197 3.911691 4.204413 5.968324 5.185104 4.587430
 [9] 4.167072 5.954883 2.963902 5.074454 4.085469 5.156024 5.029347 6.136878
[17] 5.004507 6.341705 3.634576 5.926038 4.502632 4.139816 4.939175 6.410276
[25] 5.003945

[[4]]
 [1] -0.20154597 -0.65827833 -0.60051651  1.05687088  0.93257344  0.28118730
 [7] -0.08633255  2.11005192  2.34863453  1.09057861 -0.20859096  0.71816863
[13]  0.47589288  0.85523112  2.07882359 -1.35495809  0.13041976 -1.13170346
[19]  1.97418012 -0.67065545 -0.63813849 -3.06113682  0.07904602  0.45442983
[25] -0.81961482 -0.90587550  2.81018780  1.87563099 -0.37243441 -1.49270980
[31]  1.23595454  2.12852664 -0.43733272  1.72733398  0.01771562 -0.70295179
[37] -1.77553877 -0.59234217  0.32081452  1.57584747  0.72396773  0.04939137
[43]  1.28574907 -0.77098390  0.24146620  0.13549558 -0.02723141 -1.21444677
[49]  2.19248041 -0.52442339

> means.t
[1] 0 5 5 0
> sizes.t
[1] 25 50 25 50
> }   
Error: unexpected '}' in "}"
>     lapply(idcs, function(x) { return(simpleNormSim(means[x], size=sizes.t[x], var=vars.t[x])) })
Error in simpleNormSim(means[x], size = sizes.t[x], var = vars.t[x]) (from #1) : 
  unused argument (size = sizes.t[x])
>     lapply(idcs, function(x) { return(simpleNormSim(means[x], sim.size=sizes.t[x], var=vars.t[x])) })
[[1]]
[[1]][[1]]
 [1] 24.43380 25.84367 25.23593 22.94398 23.83721 26.11548 25.96982 24.45568
 [9] 24.89545 24.39440 24.15382 24.92222 24.32659 24.77118 27.44494 25.74075
[17] 23.84119 24.24774 25.62187 23.09827 24.59761 24.99649 26.03357 26.84649
[25] 26.33363


[[2]]
[[2]][[1]]
 [1] 49.05699 49.34563 47.24419 51.04191 51.76752 50.71257 48.04766 50.45792
 [9] 50.89596 51.13861 51.90025 50.61672 49.76771 51.99747 50.04205 50.75968
[17] 49.68127 52.04841 52.50259 51.70480 47.97770 50.38313 49.11209 52.09313
[25] 49.44837 49.53541 50.24396 49.21032 50.25599 47.13823 51.71011 48.69868
[33] 47.80557 50.33125 50.16697 49.88565 48.35096 50.59621 46.98888 52.49156
[41] 51.30907 49.53231 48.99772 50.70818 47.53736 52.21003 49.96375 50.83850
[49] 49.40377 50.07078


[[3]]
[[3]][[1]]
 [1] 76.34650 74.32041 74.45180 75.25031 74.87667 76.02561 77.33118 74.98703
 [9] 74.42935 73.48738 75.74686 77.07473 74.15634 74.13773 73.42940 74.17650
[17] 74.38091 76.54224 73.72312 74.54984 73.67874 74.44007 74.53607 75.38717
[25] 75.54389


[[4]]
[[4]][[1]]
 [1] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN
[20] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN
[39] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN


Warning message:
In FUN(NA_real_[[1L]], ...) : NAs produced
>     lapply(idcs, function(x) { return(rnorm(n=sizes.t[x], mean=means.t[x], sd=sqrt(vars.t[x]))) }
+ )
Error in rnorm(n = sim.sizes[x], mean = means[x], sd = sqrt(vars[x])) (from #1) : 
  object 'sim.sizes' not found
>     lapply(idcs, function(x) { return(rnorm(n=sizes.t[x], mean=means.t[x], sd=sqrt(vars.t[x]))) }
)
    lapply(idcs, function(x) { return(rnorm(n=sizes.t[x], mean=means.t[x], sd=sqrt(vars.t[x]))) }
+ )
[[1]]
 [1]  0.75488860  2.51914720  1.75528738  1.58500787 -0.43492112  0.79913579
 [7]  1.45264220 -1.41227832 -0.37821988 -0.87696754 -0.21409437 -1.12454747
[13] -1.27758468 -0.02589765  0.58256661  0.91146968 -0.62793901 -0.43138477
[19]  1.02498704 -0.47879450 -1.35143330  0.12063053  0.32530404  0.52622255
[25] -2.93420086

[[2]]
 [1] 2.670536 6.436875 5.853335 5.284487 5.306783 8.251067 3.809345 5.170575
 [9] 3.512554 5.463772 1.129348 3.160705 6.085140 5.197215 5.490882 5.994660
[17] 7.548109 5.103559 4.121012 6.135940 6.760788 4.919562 3.749879 4.976473
[25] 5.028983 6.453763 2.985961 2.613387 4.976510 1.982866 5.292972 5.039321
[33] 4.353688 2.964580 5.475064 4.388654 2.599387 6.205199 4.975311 4.759757
[41] 4.003793 5.832210 6.111016 4.333713 4.911650 3.609989 4.965434 3.123788
[49] 4.945416 4.932784

[[3]]
 [1] 4.244610 4.322917 6.036312 5.001082 5.265722 4.395648 5.858913 5.128965
 [9] 5.347994 5.867140 5.832748 5.486498 6.899325 4.557247 6.565519 5.626110
[17] 4.009885 4.198710 3.578909 3.658402 3.950411 4.569666 5.140934 5.669043
[25] 5.562929

[[4]]
 [1] -0.30180399  0.87974528 -0.37791163 -1.37274955  1.31235759  0.82652702
 [7]  1.94490955 -4.25398043 -0.67531973  0.02050828 -0.03119530 -0.75337943
[13]  2.48052638  0.44114590 -0.67539730  2.75226045  2.88149674 -1.95253476
[19] -0.43127996 -0.93354658 -1.12698002  1.45080421 -0.15250576  0.58790363
[25]  1.78979537 -0.20923564  1.72361540 -0.11686540 -2.15780463 -2.41779673
[31]  0.60642307  0.98871693  1.37487045  1.31900742  1.40275970 -1.54493454
[37]  1.55427672  2.78015888  0.85296282  1.03744415 -2.09329838 -3.00147472
[43]  1.05340815  2.73511063  0.51748159 -2.80659802 -0.57713420  0.62279709
[49] -0.84490286 -1.44191175

> 
+ . + 
> advancedNormSim <- function(sim.sizes, means, vars) {
+ 
+     stopifnot(all.equal(length(sim.sizes), length(means), length(vars)))
+ 
+     idcs = seq(1:length(sim.sizes))
+     lapply(idcs, function(x) { return(rnorm(n=sim.sizes[x], mean=means[x], sd=sqrt(vars[x]))) } )
+ }
> sizes.t <- c(25, 50, 25, 50)
> means.t <- c(0, 5, 5, 0)
> vars.t <- c(1, 2, 1, 2)
> 
> set.seed(47)
> tryCatch(checkIdentical(advanced.norm.sim.t, advancedNormSim(sizes.t, means.t,
+                                                              vars.t)),
+          error=function(err) errMsg(err))
[1] TRUE
> 
> + Sourced file '/Users/Joel/stat133/src/stat133/hw2/ex2.r'
> q()
Save workspace image? [y/n/c]: n

Process R finished at Wed Jul  2 11:46:26 2014


R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.1.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> > options(STERM='iESS', str.dendrogram.last="'", editor='emacsclient', show.error.locations=TRUE)
> ls()
character(0)
> character(0)
character(0)
> library(RUnit)
> errMsg <- function(err) print(err)
> load('ex3-tests.rda')
> q()
Save workspace image? [y/n/c]: n

Process R finished at Wed Jul  2 11:47:15 2014


R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.1.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> > options(STERM='iESS', str.dendrogram.last="'", editor='emacsclient', show.error.locations=TRUE)
> library(RUnit)
> errMsg <- function(err) print(err)
> load('ex1-tests.rda')
> 
+ . + 
> outlierCutoff <- function(data) {
+     # your code here
+     data.medians = apply(data, 2, median)
+     data.IQRs = apply(data, 2, IQR)
+     data.lowers = data.medians - 1.5 * data.IQRs
+     data.uppers = data.medians + 1.5 * data.IQRs
+     outlier.cutoffs = rbind(data.lowers, data.uppers)
+ .... [TRUNCATED] 
> tryCatch(checkIdentical(outlier.cutoff.t, outlierCutoff(ex1.test)),
+          error=function(err) errMsg(err))
[1] TRUE
> ls()
[1] "errMsg"           "ex1.test"         "outlier.cutoff.t" "outlierCutoff"   
[5] "remove.outlier.t"
> data = ex1.test
> head(data, 4)
          V1          V2        V3         V4         V5
1 -0.7851630  0.39087901 1.4535353 -1.0253637  1.3312963
2 -0.5572134  0.01174227 1.2175729 -2.7231538 -0.4223854
3  0.6836717 -0.21168892 0.9239929  0.1602121  0.8443970
4 -1.5790590 -0.37353879 0.9364962  0.8670081 -1.0164160
> length(data)
[1] 5
> dim(data)
[1] 100   5
> dim(data)[1]
[1] 100
> data[95]
Error in `[.data.frame`(data, 95) : undefined columns selected
> data.outlier.bounds = outlierCutoff(data)
>     data.lower.bounds = data.outlier.bounds[1, ]
>     data.upper.bounds = data.outlier.bounds[2, ]
> data.lower.bounds
       V1        V2        V3        V4        V5 
-1.978939 -1.473726 -2.353397 -2.693186 -2.248531 
> data.upper.bounds
      V1       V2       V3       V4       V5 
1.753000 2.108025 2.270689 2.572128 2.251644 
>     idcs = seq(1:dim(data)[2])
> idcs
[1] 1 2 3 4 5
> row = c(23, 14, 2, 12)
> lower = c(13, 13, 13, 13)
> row < lower
[1] FALSE FALSE  TRUE  TRUE
>     data.outliers = apply(data, 1, checkEachRow)
Error in match.fun(FUN) : object 'checkEachRow' not found
> 
+ . + Error in ss(file, echo = echo, local = local, print.eval = print.eval,  : 
  /var/folders/nq/xsk7jf6n70vccm4hw_s669ww0000gn/T/ex1.r!304741Th:2:33: unexpected '<'
1: checkEachRow <- function(row) {
2:         too.small = sapply(row, <
                                   ^
> 
+ . + 
> checkEachRow <- function(row) {
+         too.small = sapply(row, '<', data.lower.bounds)
+         too.big = sapply(row, '>', data.upper.bounds)
+         num = sum(too.small) + sum(too.big)
+         return(num)
+     }
>     data.outliers = apply(data, 1, checkEachRow)
> data.outliers
  [1]  0  5  0  1  2  0  0  0  2  0  0  0  0  2  2  4  0  2  5  0  4  0  1  0 25
 [26]  0  1  2  1  0  1  0  0  0  0  4  0  0  0  0  1  0  0  0  0  0  0  0  1 25
 [51]  0  0  0  5  0  2  0  0  0  3  0  0  0  0  5  0  5  0  3  0  0  0  0  1 25
 [76]  4  3  2  0  0  1  1  0  0  0  0  1  0  0  0  1  1  1  0  0  0  0  1  0  0
> head(data, 4)
          V1          V2        V3         V4         V5
1 -0.7851630  0.39087901 1.4535353 -1.0253637  1.3312963
2 -0.5572134  0.01174227 1.2175729 -2.7231538 -0.4223854
3  0.6836717 -0.21168892 0.9239929  0.1602121  0.8443970
4 -1.5790590 -0.37353879 0.9364962  0.8670081 -1.0164160
> row = data[1, ]
> row
         V1       V2       V3        V4       V5
1 -0.785163 0.390879 1.453535 -1.025364 1.331296
> sapply(row, '<', data.lower.bounds)
      V1    V2    V3    V4    V5
V1 FALSE FALSE FALSE FALSE FALSE
V2 FALSE FALSE FALSE FALSE FALSE
V3 FALSE FALSE FALSE FALSE FALSE
V4 FALSE FALSE FALSE FALSE FALSE
V5 FALSE FALSE FALSE FALSE FALSE
>         too.small = sapply(idcs, function(x) { return(row[x] < data.lower.bounds[x]) })
> too.small
[1] FALSE FALSE FALSE FALSE FALSE
> 
+ . + 
> checkEachRow <- function(row, idcs) {
+         too.small = sapply(idcs, function(x) { return(row[x] < data.lower.bounds[x]) })
+         too.big = sapply(idcs, function(x) { return(row[x] > data.upper.bounds[x]) })
+         num = sum(too.small) + sum(too.big)
+         return(num)
+     }
>     data.outliers = apply(data, 1, checkEachRow, idcs=idcs)
> data.outliers
  [1] 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 0 0 5 0 0 0 0 0 0 0 0 0 0 1 0
 [38] 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 1 0 0 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0
 [75] 5 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0
> 
+ . + 
> removeOutliers <- function(data, max.outlier.rate) {
+ 
+     stopifnot(max.outlier.rate>=0 & max.outlier.rate<=1)
+     
+     data.outlier.bounds = outlierCutoff(data)
+     data.lower.bounds = data.outlier.bounds[1, ]
+     data.upper.bounds = data.outlier.bounds[2, ]
+ 
+     checkEachRow <- f .... [TRUNCATED] 
> tryCatch(checkIdentical(remove.outlier.t, removeOutliers(ex1.test, 0.25)),
         error=function(err) errMsg(err))
+ [1] TRUE
> q()
Save workspace image? [y/n/c]: n

Process R finished at Wed Jul  2 12:02:43 2014


R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.1.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> > options(STERM='iESS', str.dendrogram.last="'", editor='emacsclient', show.error.locations=TRUE)
> library(RUnit)
> errMsg <- function(err) print(err)
> load('ex3-tests.rda')
> mean.by.level.t
           Sepal.Length Sepal.Width Petal.Length Petal.Width
setosa            5.006       3.428        1.462       0.246
versicolor        5.936       2.770        4.260       1.326
virginica         6.588       2.974        5.552       2.026
> iris
    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species
1            5.1         3.5          1.4         0.2     setosa
2            4.9         3.0          1.4         0.2     setosa
3            4.7         3.2          1.3         0.2     setosa
4            4.6         3.1          1.5         0.2     setosa
5            5.0         3.6          1.4         0.2     setosa
6            5.4         3.9          1.7         0.4     setosa
7            4.6         3.4          1.4         0.3     setosa
8            5.0         3.4          1.5         0.2     setosa
9            4.4         2.9          1.4         0.2     setosa
10           4.9         3.1          1.5         0.1     setosa
11           5.4         3.7          1.5         0.2     setosa
12           4.8         3.4          1.6         0.2     setosa
13           4.8         3.0          1.4         0.1     setosa
14           4.3         3.0          1.1         0.1     setosa
15           5.8         4.0          1.2         0.2     setosa
16           5.7         4.4          1.5         0.4     setosa
17           5.4         3.9          1.3         0.4     setosa
18           5.1         3.5          1.4         0.3     setosa
19           5.7         3.8          1.7         0.3     setosa
20           5.1         3.8          1.5         0.3     setosa
21           5.4         3.4          1.7         0.2     setosa
22           5.1         3.7          1.5         0.4     setosa
23           4.6         3.6          1.0         0.2     setosa
24           5.1         3.3          1.7         0.5     setosa
25           4.8         3.4          1.9         0.2     setosa
26           5.0         3.0          1.6         0.2     setosa
27           5.0         3.4          1.6         0.4     setosa
28           5.2         3.5          1.5         0.2     setosa
29           5.2         3.4          1.4         0.2     setosa
30           4.7         3.2          1.6         0.2     setosa
31           4.8         3.1          1.6         0.2     setosa
32           5.4         3.4          1.5         0.4     setosa
33           5.2         4.1          1.5         0.1     setosa
34           5.5         4.2          1.4         0.2     setosa
35           4.9         3.1          1.5         0.2     setosa
36           5.0         3.2          1.2         0.2     setosa
37           5.5         3.5          1.3         0.2     setosa
38           4.9         3.6          1.4         0.1     setosa
39           4.4         3.0          1.3         0.2     setosa
40           5.1         3.4          1.5         0.2     setosa
41           5.0         3.5          1.3         0.3     setosa
42           4.5         2.3          1.3         0.3     setosa
43           4.4         3.2          1.3         0.2     setosa
44           5.0         3.5          1.6         0.6     setosa
45           5.1         3.8          1.9         0.4     setosa
46           4.8         3.0          1.4         0.3     setosa
47           5.1         3.8          1.6         0.2     setosa
48           4.6         3.2          1.4         0.2     setosa
49           5.3         3.7          1.5         0.2     setosa
50           5.0         3.3          1.4         0.2     setosa
51           7.0         3.2          4.7         1.4 versicolor
52           6.4         3.2          4.5         1.5 versicolor
53           6.9         3.1          4.9         1.5 versicolor
54           5.5         2.3          4.0         1.3 versicolor
55           6.5         2.8          4.6         1.5 versicolor
56           5.7         2.8          4.5         1.3 versicolor
57           6.3         3.3          4.7         1.6 versicolor
58           4.9         2.4          3.3         1.0 versicolor
59           6.6         2.9          4.6         1.3 versicolor
60           5.2         2.7          3.9         1.4 versicolor
61           5.0         2.0          3.5         1.0 versicolor
62           5.9         3.0          4.2         1.5 versicolor
63           6.0         2.2          4.0         1.0 versicolor
64           6.1         2.9          4.7         1.4 versicolor
65           5.6         2.9          3.6         1.3 versicolor
66           6.7         3.1          4.4         1.4 versicolor
67           5.6         3.0          4.5         1.5 versicolor
68           5.8         2.7          4.1         1.0 versicolor
69           6.2         2.2          4.5         1.5 versicolor
70           5.6         2.5          3.9         1.1 versicolor
71           5.9         3.2          4.8         1.8 versicolor
72           6.1         2.8          4.0         1.3 versicolor
73           6.3         2.5          4.9         1.5 versicolor
74           6.1         2.8          4.7         1.2 versicolor
75           6.4         2.9          4.3         1.3 versicolor
76           6.6         3.0          4.4         1.4 versicolor
77           6.8         2.8          4.8         1.4 versicolor
78           6.7         3.0          5.0         1.7 versicolor
79           6.0         2.9          4.5         1.5 versicolor
80           5.7         2.6          3.5         1.0 versicolor
81           5.5         2.4          3.8         1.1 versicolor
82           5.5         2.4          3.7         1.0 versicolor
83           5.8         2.7          3.9         1.2 versicolor
84           6.0         2.7          5.1         1.6 versicolor
85           5.4         3.0          4.5         1.5 versicolor
86           6.0         3.4          4.5         1.6 versicolor
87           6.7         3.1          4.7         1.5 versicolor
88           6.3         2.3          4.4         1.3 versicolor
89           5.6         3.0          4.1         1.3 versicolor
90           5.5         2.5          4.0         1.3 versicolor
91           5.5         2.6          4.4         1.2 versicolor
92           6.1         3.0          4.6         1.4 versicolor
93           5.8         2.6          4.0         1.2 versicolor
94           5.0         2.3          3.3         1.0 versicolor
95           5.6         2.7          4.2         1.3 versicolor
96           5.7         3.0          4.2         1.2 versicolor
97           5.7         2.9          4.2         1.3 versicolor
98           6.2         2.9          4.3         1.3 versicolor
99           5.1         2.5          3.0         1.1 versicolor
100          5.7         2.8          4.1         1.3 versicolor
101          6.3         3.3          6.0         2.5  virginica
102          5.8         2.7          5.1         1.9  virginica
103          7.1         3.0          5.9         2.1  virginica
104          6.3         2.9          5.6         1.8  virginica
105          6.5         3.0          5.8         2.2  virginica
106          7.6         3.0          6.6         2.1  virginica
107          4.9         2.5          4.5         1.7  virginica
108          7.3         2.9          6.3         1.8  virginica
109          6.7         2.5          5.8         1.8  virginica
110          7.2         3.6          6.1         2.5  virginica
111          6.5         3.2          5.1         2.0  virginica
112          6.4         2.7          5.3         1.9  virginica
113          6.8         3.0          5.5         2.1  virginica
114          5.7         2.5          5.0         2.0  virginica
115          5.8         2.8          5.1         2.4  virginica
116          6.4         3.2          5.3         2.3  virginica
117          6.5         3.0          5.5         1.8  virginica
118          7.7         3.8          6.7         2.2  virginica
119          7.7         2.6          6.9         2.3  virginica
120          6.0         2.2          5.0         1.5  virginica
121          6.9         3.2          5.7         2.3  virginica
122          5.6         2.8          4.9         2.0  virginica
123          7.7         2.8          6.7         2.0  virginica
124          6.3         2.7          4.9         1.8  virginica
125          6.7         3.3          5.7         2.1  virginica
126          7.2         3.2          6.0         1.8  virginica
127          6.2         2.8          4.8         1.8  virginica
128          6.1         3.0          4.9         1.8  virginica
129          6.4         2.8          5.6         2.1  virginica
130          7.2         3.0          5.8         1.6  virginica
131          7.4         2.8          6.1         1.9  virginica
132          7.9         3.8          6.4         2.0  virginica
133          6.4         2.8          5.6         2.2  virginica
134          6.3         2.8          5.1         1.5  virginica
135          6.1         2.6          5.6         1.4  virginica
136          7.7         3.0          6.1         2.3  virginica
137          6.3         3.4          5.6         2.4  virginica
138          6.4         3.1          5.5         1.8  virginica
139          6.0         3.0          4.8         1.8  virginica
140          6.9         3.1          5.4         2.1  virginica
141          6.7         3.1          5.6         2.4  virginica
142          6.9         3.1          5.1         2.3  virginica
143          5.8         2.7          5.1         1.9  virginica
144          6.8         3.2          5.9         2.3  virginica
145          6.7         3.3          5.7         2.5  virginica
146          6.7         3.0          5.2         2.3  virginica
147          6.3         2.5          5.0         1.9  virginica
148          6.5         3.0          5.2         2.0  virginica
149          6.2         3.4          5.4         2.3  virginica
150          5.9         3.0          5.1         1.8  virginica
> iris = data
> data
function (..., list = character(), package = NULL, lib.loc = NULL, 
    verbose = getOption("verbose"), envir = .GlobalEnv) 
{
    fileExt <- function(x) {
        db <- grepl("\\.[^.]+\\.(gz|bz2|xz)$", x)
        ans <- sub(".*\\.", "", x)
        ans[db] <- sub(".*\\.([^.]+\\.)(gz|bz2|xz)$", "\\1\\2", 
            x[db])
        ans
    }
    names <- c(as.character(substitute(list(...))[-1L]), list)
    if (!is.null(package)) {
        if (!is.character(package)) 
            stop("'package' must be a character string or NULL")
        if (any(package %in% "base")) 
            warning("datasets have been moved from package 'base' to package 'datasets'")
        if (any(package %in% "stats")) 
            warning("datasets have been moved from package 'stats' to package 'datasets'")
        package[package %in% c("base", "stats")] <- "datasets"
    }
    paths <- find.package(package, lib.loc, verbose = verbose)
    if (is.null(lib.loc)) 
        paths <- c(path.package(package, TRUE), if (!length(package)) getwd(), 
            paths)
    paths <- unique(paths[file.exists(paths)])
    paths <- paths[file_test("-d", file.path(paths, "data"))]
    dataExts <- tools:::.make_file_exts("data")
    if (length(names) == 0L) {
        db <- matrix(character(), nrow = 0L, ncol = 4L)
        for (path in paths) {
            entries <- NULL
            packageName <- if (file_test("-f", file.path(path, 
                "DESCRIPTION"))) 
                basename(path)
            else "."
            if (file_test("-f", INDEX <- file.path(path, "Meta", 
                "data.rds"))) {
                entries <- readRDS(INDEX)
            }
            else {
                dataDir <- file.path(path, "data")
                entries <- tools::list_files_with_type(dataDir, 
                  "data")
                if (length(entries)) {
                  entries <- unique(tools::file_path_sans_ext(basename(entries)))
                  entries <- cbind(entries, "")
                }
            }
            if (NROW(entries)) {
                if (is.matrix(entries) && ncol(entries) == 2L) 
                  db <- rbind(db, cbind(packageName, dirname(path), 
                    entries))
                else warning(gettextf("data index for package %s is invalid and will be ignored", 
                  sQuote(packageName)), domain = NA, call. = FALSE)
            }
        }
        colnames(db) <- c("Package", "LibPath", "Item", "Title")
        footer <- if (missing(package)) 
            paste0("Use ", sQuote(paste("data(package =", ".packages(all.available = TRUE))")), 
                "\n", "to list the data sets in all *available* packages.")
        else NULL
        y <- list(title = "Data sets", header = NULL, results = db, 
            footer = footer)
        class(y) <- "packageIQR"
        return(y)
    }
    paths <- file.path(paths, "data")
    for (name in names) {
        found <- FALSE
        for (p in paths) {
            if (file_test("-f", file.path(p, "Rdata.rds"))) {
                rds <- readRDS(file.path(p, "Rdata.rds"))
                if (name %in% names(rds)) {
                  found <- TRUE
                  if (verbose) 
                    message(sprintf("name=%s:\t found in Rdata.rds", 
                      name), domain = NA)
                  thispkg <- sub(".*/([^/]*)/data$", "\\1", p)
                  thispkg <- sub("_.*$", "", thispkg)
                  thispkg <- paste0("package:", thispkg)
                  objs <- rds[[name]]
                  lazyLoad(file.path(p, "Rdata"), envir = envir, 
                    filter = function(x) x %in% objs)
                  break
                }
                else if (verbose) 
                  message(sprintf("name=%s:\t NOT found in names() of Rdata.rds, i.e.,\n\t%s\n", 
                    name, paste(names(rds), collapse = ",")), 
                    domain = NA)
            }
            if (file_test("-f", file.path(p, "Rdata.zip"))) {
                warning("zipped data found for package ", sQuote(basename(dirname(p))), 
                  ".\nThat is defunct, so please re-install the package.", 
                  domain = NA)
                if (file_test("-f", fp <- file.path(p, "filelist"))) 
                  files <- file.path(p, scan(fp, what = "", quiet = TRUE))
                else {
                  warning(gettextf("file 'filelist' is missing for directory %s", 
                    sQuote(p)), domain = NA)
                  next
                }
            }
            else {
                files <- list.files(p, full.names = TRUE)
            }
            files <- files[grep(name, files, fixed = TRUE)]
            if (length(files) > 1L) {
                o <- match(fileExt(files), dataExts, nomatch = 100L)
                paths0 <- dirname(files)
                paths0 <- factor(paths0, levels = unique(paths0))
                files <- files[order(paths0, o)]
            }
            if (length(files)) {
                for (file in files) {
                  if (verbose) 
                    message("name=", name, ":\t file= ...", .Platform$file.sep, 
                      basename(file), "::\t", appendLF = FALSE, 
                      domain = NA)
                  ext <- fileExt(file)
                  if (basename(file) != paste0(name, ".", ext)) 
                    found <- FALSE
                  else {
                    found <- TRUE
                    zfile <- file
                    zipname <- file.path(dirname(file), "Rdata.zip")
                    if (file.exists(zipname)) {
                      Rdatadir <- tempfile("Rdata")
                      dir.create(Rdatadir, showWarnings = FALSE)
                      topic <- basename(file)
                      rc <- .External(C_unzip, zipname, topic, 
                        Rdatadir, FALSE, TRUE, FALSE, FALSE)
                      if (rc == 0L) 
                        zfile <- file.path(Rdatadir, topic)
                    }
                    if (zfile != file) 
                      on.exit(unlink(zfile))
                    switch(ext, R = , r = {
                      library("utils")
                      sys.source(zfile, chdir = TRUE, envir = envir)
                    }, RData = , rdata = , rda = load(zfile, 
                      envir = envir), TXT = , txt = , tab = , 
                      tab.gz = , tab.bz2 = , tab.xz = , txt.gz = , 
                      txt.bz2 = , txt.xz = assign(name, read.table(zfile, 
                        header = TRUE, as.is = FALSE), envir = envir), 
                      CSV = , csv = , csv.gz = , csv.bz2 = , 
                      csv.xz = assign(name, read.table(zfile, 
                        header = TRUE, sep = ";", as.is = FALSE), 
                        envir = envir), found <- FALSE)
                  }
                  if (found) 
                    break
                }
                if (verbose) 
                  message(if (!found) 
                    "*NOT* ", "found", domain = NA)
            }
            if (found) 
                break
        }
        if (!found) 
            warning(gettextf("data set %s not found", sQuote(name)), 
                domain = NA)
    }
    invisible(names)
}
<bytecode: 0x7fa9db08f9c8>
<environment: namespace:utils>
> iris
function (..., list = character(), package = NULL, lib.loc = NULL, 
    verbose = getOption("verbose"), envir = .GlobalEnv) 
{
    fileExt <- function(x) {
        db <- grepl("\\.[^.]+\\.(gz|bz2|xz)$", x)
        ans <- sub(".*\\.", "", x)
        ans[db] <- sub(".*\\.([^.]+\\.)(gz|bz2|xz)$", "\\1\\2", 
            x[db])
        ans
    }
    names <- c(as.character(substitute(list(...))[-1L]), list)
    if (!is.null(package)) {
        if (!is.character(package)) 
            stop("'package' must be a character string or NULL")
        if (any(package %in% "base")) 
            warning("datasets have been moved from package 'base' to package 'datasets'")
        if (any(package %in% "stats")) 
            warning("datasets have been moved from package 'stats' to package 'datasets'")
        package[package %in% c("base", "stats")] <- "datasets"
    }
    paths <- find.package(package, lib.loc, verbose = verbose)
    if (is.null(lib.loc)) 
        paths <- c(path.package(package, TRUE), if (!length(package)) getwd(), 
            paths)
    paths <- unique(paths[file.exists(paths)])
    paths <- paths[file_test("-d", file.path(paths, "data"))]
    dataExts <- tools:::.make_file_exts("data")
    if (length(names) == 0L) {
        db <- matrix(character(), nrow = 0L, ncol = 4L)
        for (path in paths) {
            entries <- NULL
            packageName <- if (file_test("-f", file.path(path, 
                "DESCRIPTION"))) 
                basename(path)
            else "."
            if (file_test("-f", INDEX <- file.path(path, "Meta", 
                "data.rds"))) {
                entries <- readRDS(INDEX)
            }
            else {
                dataDir <- file.path(path, "data")
                entries <- tools::list_files_with_type(dataDir, 
                  "data")
                if (length(entries)) {
                  entries <- unique(tools::file_path_sans_ext(basename(entries)))
                  entries <- cbind(entries, "")
                }
            }
            if (NROW(entries)) {
                if (is.matrix(entries) && ncol(entries) == 2L) 
                  db <- rbind(db, cbind(packageName, dirname(path), 
                    entries))
                else warning(gettextf("data index for package %s is invalid and will be ignored", 
                  sQuote(packageName)), domain = NA, call. = FALSE)
            }
        }
        colnames(db) <- c("Package", "LibPath", "Item", "Title")
        footer <- if (missing(package)) 
            paste0("Use ", sQuote(paste("data(package =", ".packages(all.available = TRUE))")), 
                "\n", "to list the data sets in all *available* packages.")
        else NULL
        y <- list(title = "Data sets", header = NULL, results = db, 
            footer = footer)
        class(y) <- "packageIQR"
        return(y)
    }
    paths <- file.path(paths, "data")
    for (name in names) {
        found <- FALSE
        for (p in paths) {
            if (file_test("-f", file.path(p, "Rdata.rds"))) {
                rds <- readRDS(file.path(p, "Rdata.rds"))
                if (name %in% names(rds)) {
                  found <- TRUE
                  if (verbose) 
                    message(sprintf("name=%s:\t found in Rdata.rds", 
                      name), domain = NA)
                  thispkg <- sub(".*/([^/]*)/data$", "\\1", p)
                  thispkg <- sub("_.*$", "", thispkg)
                  thispkg <- paste0("package:", thispkg)
                  objs <- rds[[name]]
                  lazyLoad(file.path(p, "Rdata"), envir = envir, 
                    filter = function(x) x %in% objs)
                  break
                }
                else if (verbose) 
                  message(sprintf("name=%s:\t NOT found in names() of Rdata.rds, i.e.,\n\t%s\n", 
                    name, paste(names(rds), collapse = ",")), 
                    domain = NA)
            }
            if (file_test("-f", file.path(p, "Rdata.zip"))) {
                warning("zipped data found for package ", sQuote(basename(dirname(p))), 
                  ".\nThat is defunct, so please re-install the package.", 
                  domain = NA)
                if (file_test("-f", fp <- file.path(p, "filelist"))) 
                  files <- file.path(p, scan(fp, what = "", quiet = TRUE))
                else {
                  warning(gettextf("file 'filelist' is missing for directory %s", 
                    sQuote(p)), domain = NA)
                  next
                }
            }
            else {
                files <- list.files(p, full.names = TRUE)
            }
            files <- files[grep(name, files, fixed = TRUE)]
            if (length(files) > 1L) {
                o <- match(fileExt(files), dataExts, nomatch = 100L)
                paths0 <- dirname(files)
                paths0 <- factor(paths0, levels = unique(paths0))
                files <- files[order(paths0, o)]
            }
            if (length(files)) {
                for (file in files) {
                  if (verbose) 
                    message("name=", name, ":\t file= ...", .Platform$file.sep, 
                      basename(file), "::\t", appendLF = FALSE, 
                      domain = NA)
                  ext <- fileExt(file)
                  if (basename(file) != paste0(name, ".", ext)) 
                    found <- FALSE
                  else {
                    found <- TRUE
                    zfile <- file
                    zipname <- file.path(dirname(file), "Rdata.zip")
                    if (file.exists(zipname)) {
                      Rdatadir <- tempfile("Rdata")
                      dir.create(Rdatadir, showWarnings = FALSE)
                      topic <- basename(file)
                      rc <- .External(C_unzip, zipname, topic, 
                        Rdatadir, FALSE, TRUE, FALSE, FALSE)
                      if (rc == 0L) 
                        zfile <- file.path(Rdatadir, topic)
                    }
                    if (zfile != file) 
                      on.exit(unlink(zfile))
                    switch(ext, R = , r = {
                      library("utils")
                      sys.source(zfile, chdir = TRUE, envir = envir)
                    }, RData = , rdata = , rda = load(zfile, 
                      envir = envir), TXT = , txt = , tab = , 
                      tab.gz = , tab.bz2 = , tab.xz = , txt.gz = , 
                      txt.bz2 = , txt.xz = assign(name, read.table(zfile, 
                        header = TRUE, as.is = FALSE), envir = envir), 
                      CSV = , csv = , csv.gz = , csv.bz2 = , 
                      csv.xz = assign(name, read.table(zfile, 
                        header = TRUE, sep = ";", as.is = FALSE), 
                        envir = envir), found <- FALSE)
                  }
                  if (found) 
                    break
                }
                if (verbose) 
                  message(if (!found) 
                    "*NOT* ", "found", domain = NA)
            }
            if (found) 
                break
        }
        if (!found) 
            warning(gettextf("data set %s not found", sQuote(name)), 
                domain = NA)
    }
    invisible(names)
}
<bytecode: 0x7fa9db08f9c8>
<environment: namespace:utils>
> ls()
[1] "errMsg"           "iris"             "mean.by.level.t"  "std.level.diff.t"
> iris
function (..., list = character(), package = NULL, lib.loc = NULL, 
    verbose = getOption("verbose"), envir = .GlobalEnv) 
{
    fileExt <- function(x) {
        db <- grepl("\\.[^.]+\\.(gz|bz2|xz)$", x)
        ans <- sub(".*\\.", "", x)
        ans[db] <- sub(".*\\.([^.]+\\.)(gz|bz2|xz)$", "\\1\\2", 
            x[db])
        ans
    }
    names <- c(as.character(substitute(list(...))[-1L]), list)
    if (!is.null(package)) {
        if (!is.character(package)) 
            stop("'package' must be a character string or NULL")
        if (any(package %in% "base")) 
            warning("datasets have been moved from package 'base' to package 'datasets'")
        if (any(package %in% "stats")) 
            warning("datasets have been moved from package 'stats' to package 'datasets'")
        package[package %in% c("base", "stats")] <- "datasets"
    }
    paths <- find.package(package, lib.loc, verbose = verbose)
    if (is.null(lib.loc)) 
        paths <- c(path.package(package, TRUE), if (!length(package)) getwd(), 
            paths)
    paths <- unique(paths[file.exists(paths)])
    paths <- paths[file_test("-d", file.path(paths, "data"))]
    dataExts <- tools:::.make_file_exts("data")
    if (length(names) == 0L) {
        db <- matrix(character(), nrow = 0L, ncol = 4L)
        for (path in paths) {
            entries <- NULL
            packageName <- if (file_test("-f", file.path(path, 
                "DESCRIPTION"))) 
                basename(path)
            else "."
            if (file_test("-f", INDEX <- file.path(path, "Meta", 
                "data.rds"))) {
                entries <- readRDS(INDEX)
            }
            else {
                dataDir <- file.path(path, "data")
                entries <- tools::list_files_with_type(dataDir, 
                  "data")
                if (length(entries)) {
                  entries <- unique(tools::file_path_sans_ext(basename(entries)))
                  entries <- cbind(entries, "")
                }
            }
            if (NROW(entries)) {
                if (is.matrix(entries) && ncol(entries) == 2L) 
                  db <- rbind(db, cbind(packageName, dirname(path), 
                    entries))
                else warning(gettextf("data index for package %s is invalid and will be ignored", 
                  sQuote(packageName)), domain = NA, call. = FALSE)
            }
        }
        colnames(db) <- c("Package", "LibPath", "Item", "Title")
        footer <- if (missing(package)) 
            paste0("Use ", sQuote(paste("data(package =", ".packages(all.available = TRUE))")), 
                "\n", "to list the data sets in all *available* packages.")
        else NULL
        y <- list(title = "Data sets", header = NULL, results = db, 
            footer = footer)
        class(y) <- "packageIQR"
        return(y)
    }
    paths <- file.path(paths, "data")
    for (name in names) {
        found <- FALSE
        for (p in paths) {
            if (file_test("-f", file.path(p, "Rdata.rds"))) {
                rds <- readRDS(file.path(p, "Rdata.rds"))
                if (name %in% names(rds)) {
                  found <- TRUE
                  if (verbose) 
                    message(sprintf("name=%s:\t found in Rdata.rds", 
                      name), domain = NA)
                  thispkg <- sub(".*/([^/]*)/data$", "\\1", p)
                  thispkg <- sub("_.*$", "", thispkg)
                  thispkg <- paste0("package:", thispkg)
                  objs <- rds[[name]]
                  lazyLoad(file.path(p, "Rdata"), envir = envir, 
                    filter = function(x) x %in% objs)
                  break
                }
                else if (verbose) 
                  message(sprintf("name=%s:\t NOT found in names() of Rdata.rds, i.e.,\n\t%s\n", 
                    name, paste(names(rds), collapse = ",")), 
                    domain = NA)
            }
            if (file_test("-f", file.path(p, "Rdata.zip"))) {
                warning("zipped data found for package ", sQuote(basename(dirname(p))), 
                  ".\nThat is defunct, so please re-install the package.", 
                  domain = NA)
                if (file_test("-f", fp <- file.path(p, "filelist"))) 
                  files <- file.path(p, scan(fp, what = "", quiet = TRUE))
                else {
                  warning(gettextf("file 'filelist' is missing for directory %s", 
                    sQuote(p)), domain = NA)
                  next
                }
            }
            else {
                files <- list.files(p, full.names = TRUE)
            }
            files <- files[grep(name, files, fixed = TRUE)]
            if (length(files) > 1L) {
                o <- match(fileExt(files), dataExts, nomatch = 100L)
                paths0 <- dirname(files)
                paths0 <- factor(paths0, levels = unique(paths0))
                files <- files[order(paths0, o)]
            }
            if (length(files)) {
                for (file in files) {
                  if (verbose) 
                    message("name=", name, ":\t file= ...", .Platform$file.sep, 
                      basename(file), "::\t", appendLF = FALSE, 
                      domain = NA)
                  ext <- fileExt(file)
                  if (basename(file) != paste0(name, ".", ext)) 
                    found <- FALSE
                  else {
                    found <- TRUE
                    zfile <- file
                    zipname <- file.path(dirname(file), "Rdata.zip")
                    if (file.exists(zipname)) {
                      Rdatadir <- tempfile("Rdata")
                      dir.create(Rdatadir, showWarnings = FALSE)
                      topic <- basename(file)
                      rc <- .External(C_unzip, zipname, topic, 
                        Rdatadir, FALSE, TRUE, FALSE, FALSE)
                      if (rc == 0L) 
                        zfile <- file.path(Rdatadir, topic)
                    }
                    if (zfile != file) 
                      on.exit(unlink(zfile))
                    switch(ext, R = , r = {
                      library("utils")
                      sys.source(zfile, chdir = TRUE, envir = envir)
                    }, RData = , rdata = , rda = load(zfile, 
                      envir = envir), TXT = , txt = , tab = , 
                      tab.gz = , tab.bz2 = , tab.xz = , txt.gz = , 
                      txt.bz2 = , txt.xz = assign(name, read.table(zfile, 
                        header = TRUE, as.is = FALSE), envir = envir), 
                      CSV = , csv = , csv.gz = , csv.bz2 = , 
                      csv.xz = assign(name, read.table(zfile, 
                        header = TRUE, sep = ";", as.is = FALSE), 
                        envir = envir), found <- FALSE)
                  }
                  if (found) 
                    break
                }
                if (verbose) 
                  message(if (!found) 
                    "*NOT* ", "found", domain = NA)
            }
            if (found) 
                break
        }
        if (!found) 
            warning(gettextf("data set %s not found", sQuote(name)), 
                domain = NA)
    }
    invisible(names)
}
<bytecode: 0x7fa9db08f9c8>
<environment: namespace:utils>
> library(RUnit)
> errMsg <- function(err) print(err)
> load('ex3-tests.rda')
> iris
function (..., list = character(), package = NULL, lib.loc = NULL, 
    verbose = getOption("verbose"), envir = .GlobalEnv) 
{
    fileExt <- function(x) {
        db <- grepl("\\.[^.]+\\.(gz|bz2|xz)$", x)
        ans <- sub(".*\\.", "", x)
        ans[db] <- sub(".*\\.([^.]+\\.)(gz|bz2|xz)$", "\\1\\2", 
            x[db])
        ans
    }
    names <- c(as.character(substitute(list(...))[-1L]), list)
    if (!is.null(package)) {
        if (!is.character(package)) 
            stop("'package' must be a character string or NULL")
        if (any(package %in% "base")) 
            warning("datasets have been moved from package 'base' to package 'datasets'")
        if (any(package %in% "stats")) 
            warning("datasets have been moved from package 'stats' to package 'datasets'")
        package[package %in% c("base", "stats")] <- "datasets"
    }
    paths <- find.package(package, lib.loc, verbose = verbose)
    if (is.null(lib.loc)) 
        paths <- c(path.package(package, TRUE), if (!length(package)) getwd(), 
            paths)
    paths <- unique(paths[file.exists(paths)])
    paths <- paths[file_test("-d", file.path(paths, "data"))]
    dataExts <- tools:::.make_file_exts("data")
    if (length(names) == 0L) {
        db <- matrix(character(), nrow = 0L, ncol = 4L)
        for (path in paths) {
            entries <- NULL
            packageName <- if (file_test("-f", file.path(path, 
                "DESCRIPTION"))) 
                basename(path)
            else "."
            if (file_test("-f", INDEX <- file.path(path, "Meta", 
                "data.rds"))) {
                entries <- readRDS(INDEX)
            }
            else {
                dataDir <- file.path(path, "data")
                entries <- tools::list_files_with_type(dataDir, 
                  "data")
                if (length(entries)) {
                  entries <- unique(tools::file_path_sans_ext(basename(entries)))
                  entries <- cbind(entries, "")
                }
            }
            if (NROW(entries)) {
                if (is.matrix(entries) && ncol(entries) == 2L) 
                  db <- rbind(db, cbind(packageName, dirname(path), 
                    entries))
                else warning(gettextf("data index for package %s is invalid and will be ignored", 
                  sQuote(packageName)), domain = NA, call. = FALSE)
            }
        }
        colnames(db) <- c("Package", "LibPath", "Item", "Title")
        footer <- if (missing(package)) 
            paste0("Use ", sQuote(paste("data(package =", ".packages(all.available = TRUE))")), 
                "\n", "to list the data sets in all *available* packages.")
        else NULL
        y <- list(title = "Data sets", header = NULL, results = db, 
            footer = footer)
        class(y) <- "packageIQR"
        return(y)
    }
    paths <- file.path(paths, "data")
    for (name in names) {
        found <- FALSE
        for (p in paths) {
            if (file_test("-f", file.path(p, "Rdata.rds"))) {
                rds <- readRDS(file.path(p, "Rdata.rds"))
                if (name %in% names(rds)) {
                  found <- TRUE
                  if (verbose) 
                    message(sprintf("name=%s:\t found in Rdata.rds", 
                      name), domain = NA)
                  thispkg <- sub(".*/([^/]*)/data$", "\\1", p)
                  thispkg <- sub("_.*$", "", thispkg)
                  thispkg <- paste0("package:", thispkg)
                  objs <- rds[[name]]
                  lazyLoad(file.path(p, "Rdata"), envir = envir, 
                    filter = function(x) x %in% objs)
                  break
                }
                else if (verbose) 
                  message(sprintf("name=%s:\t NOT found in names() of Rdata.rds, i.e.,\n\t%s\n", 
                    name, paste(names(rds), collapse = ",")), 
                    domain = NA)
            }
            if (file_test("-f", file.path(p, "Rdata.zip"))) {
                warning("zipped data found for package ", sQuote(basename(dirname(p))), 
                  ".\nThat is defunct, so please re-install the package.", 
                  domain = NA)
                if (file_test("-f", fp <- file.path(p, "filelist"))) 
                  files <- file.path(p, scan(fp, what = "", quiet = TRUE))
                else {
                  warning(gettextf("file 'filelist' is missing for directory %s", 
                    sQuote(p)), domain = NA)
                  next
                }
            }
            else {
                files <- list.files(p, full.names = TRUE)
            }
            files <- files[grep(name, files, fixed = TRUE)]
            if (length(files) > 1L) {
                o <- match(fileExt(files), dataExts, nomatch = 100L)
                paths0 <- dirname(files)
                paths0 <- factor(paths0, levels = unique(paths0))
                files <- files[order(paths0, o)]
            }
            if (length(files)) {
                for (file in files) {
                  if (verbose) 
                    message("name=", name, ":\t file= ...", .Platform$file.sep, 
                      basename(file), "::\t", appendLF = FALSE, 
                      domain = NA)
                  ext <- fileExt(file)
                  if (basename(file) != paste0(name, ".", ext)) 
                    found <- FALSE
                  else {
                    found <- TRUE
                    zfile <- file
                    zipname <- file.path(dirname(file), "Rdata.zip")
                    if (file.exists(zipname)) {
                      Rdatadir <- tempfile("Rdata")
                      dir.create(Rdatadir, showWarnings = FALSE)
                      topic <- basename(file)
                      rc <- .External(C_unzip, zipname, topic, 
                        Rdatadir, FALSE, TRUE, FALSE, FALSE)
                      if (rc == 0L) 
                        zfile <- file.path(Rdatadir, topic)
                    }
                    if (zfile != file) 
                      on.exit(unlink(zfile))
                    switch(ext, R = , r = {
                      library("utils")
                      sys.source(zfile, chdir = TRUE, envir = envir)
                    }, RData = , rdata = , rda = load(zfile, 
                      envir = envir), TXT = , txt = , tab = , 
                      tab.gz = , tab.bz2 = , tab.xz = , txt.gz = , 
                      txt.bz2 = , txt.xz = assign(name, read.table(zfile, 
                        header = TRUE, as.is = FALSE), envir = envir), 
                      CSV = , csv = , csv.gz = , csv.bz2 = , 
                      csv.xz = assign(name, read.table(zfile, 
                        header = TRUE, sep = ";", as.is = FALSE), 
                        envir = envir), found <- FALSE)
                  }
                  if (found) 
                    break
                }
                if (verbose) 
                  message(if (!found) 
                    "*NOT* ", "found", domain = NA)
            }
            if (found) 
                break
        }
        if (!found) 
            warning(gettextf("data set %s not found", sQuote(name)), 
                domain = NA)
    }
    invisible(names)
}
<bytecode: 0x7fa9db08f9c8>
<environment: namespace:utils>
> ls()
[1] "errMsg"           "iris"             "mean.by.level.t"  "std.level.diff.t"
> class(iris)
[1] "function"
> load('ex3-test.rda')
Error in readChar(con, 5L, useBytes = TRUE) : cannot open the connection
In addition: Warning message:
In readChar(con, 5L, useBytes = TRUE) :
  cannot open compressed file 'ex3-test.rda', probable reason 'No such file or directory'
> load('ex3-tests.rda')
> ls()
[1] "errMsg"           "iris"             "mean.by.level.t"  "std.level.diff.t"
> class(iris)
[1] "function"
> q()
Save workspace image? [y/n/c]: n

Process R finished at Wed Jul  2 12:22:21 2014


R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.1.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> > options(STERM='iESS', str.dendrogram.last="'", editor='emacsclient', show.error.locations=TRUE)
> class(iris)
[1] "data.frame"
> iris
    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species
1            5.1         3.5          1.4         0.2     setosa
2            4.9         3.0          1.4         0.2     setosa
3            4.7         3.2          1.3         0.2     setosa
4            4.6         3.1          1.5         0.2     setosa
5            5.0         3.6          1.4         0.2     setosa
6            5.4         3.9          1.7         0.4     setosa
7            4.6         3.4          1.4         0.3     setosa
8            5.0         3.4          1.5         0.2     setosa
9            4.4         2.9          1.4         0.2     setosa
10           4.9         3.1          1.5         0.1     setosa
11           5.4         3.7          1.5         0.2     setosa
12           4.8         3.4          1.6         0.2     setosa
13           4.8         3.0          1.4         0.1     setosa
14           4.3         3.0          1.1         0.1     setosa
15           5.8         4.0          1.2         0.2     setosa
16           5.7         4.4          1.5         0.4     setosa
17           5.4         3.9          1.3         0.4     setosa
18           5.1         3.5          1.4         0.3     setosa
19           5.7         3.8          1.7         0.3     setosa
20           5.1         3.8          1.5         0.3     setosa
21           5.4         3.4          1.7         0.2     setosa
22           5.1         3.7          1.5         0.4     setosa
23           4.6         3.6          1.0         0.2     setosa
24           5.1         3.3          1.7         0.5     setosa
25           4.8         3.4          1.9         0.2     setosa
26           5.0         3.0          1.6         0.2     setosa
27           5.0         3.4          1.6         0.4     setosa
28           5.2         3.5          1.5         0.2     setosa
29           5.2         3.4          1.4         0.2     setosa
30           4.7         3.2          1.6         0.2     setosa
31           4.8         3.1          1.6         0.2     setosa
32           5.4         3.4          1.5         0.4     setosa
33           5.2         4.1          1.5         0.1     setosa
34           5.5         4.2          1.4         0.2     setosa
35           4.9         3.1          1.5         0.2     setosa
36           5.0         3.2          1.2         0.2     setosa
37           5.5         3.5          1.3         0.2     setosa
38           4.9         3.6          1.4         0.1     setosa
39           4.4         3.0          1.3         0.2     setosa
40           5.1         3.4          1.5         0.2     setosa
41           5.0         3.5          1.3         0.3     setosa
42           4.5         2.3          1.3         0.3     setosa
43           4.4         3.2          1.3         0.2     setosa
44           5.0         3.5          1.6         0.6     setosa
45           5.1         3.8          1.9         0.4     setosa
46           4.8         3.0          1.4         0.3     setosa
47           5.1         3.8          1.6         0.2     setosa
48           4.6         3.2          1.4         0.2     setosa
49           5.3         3.7          1.5         0.2     setosa
50           5.0         3.3          1.4         0.2     setosa
51           7.0         3.2          4.7         1.4 versicolor
52           6.4         3.2          4.5         1.5 versicolor
53           6.9         3.1          4.9         1.5 versicolor
54           5.5         2.3          4.0         1.3 versicolor
55           6.5         2.8          4.6         1.5 versicolor
56           5.7         2.8          4.5         1.3 versicolor
57           6.3         3.3          4.7         1.6 versicolor
58           4.9         2.4          3.3         1.0 versicolor
59           6.6         2.9          4.6         1.3 versicolor
60           5.2         2.7          3.9         1.4 versicolor
61           5.0         2.0          3.5         1.0 versicolor
62           5.9         3.0          4.2         1.5 versicolor
63           6.0         2.2          4.0         1.0 versicolor
64           6.1         2.9          4.7         1.4 versicolor
65           5.6         2.9          3.6         1.3 versicolor
66           6.7         3.1          4.4         1.4 versicolor
67           5.6         3.0          4.5         1.5 versicolor
68           5.8         2.7          4.1         1.0 versicolor
69           6.2         2.2          4.5         1.5 versicolor
70           5.6         2.5          3.9         1.1 versicolor
71           5.9         3.2          4.8         1.8 versicolor
72           6.1         2.8          4.0         1.3 versicolor
73           6.3         2.5          4.9         1.5 versicolor
74           6.1         2.8          4.7         1.2 versicolor
75           6.4         2.9          4.3         1.3 versicolor
76           6.6         3.0          4.4         1.4 versicolor
77           6.8         2.8          4.8         1.4 versicolor
78           6.7         3.0          5.0         1.7 versicolor
79           6.0         2.9          4.5         1.5 versicolor
80           5.7         2.6          3.5         1.0 versicolor
81           5.5         2.4          3.8         1.1 versicolor
82           5.5         2.4          3.7         1.0 versicolor
83           5.8         2.7          3.9         1.2 versicolor
84           6.0         2.7          5.1         1.6 versicolor
85           5.4         3.0          4.5         1.5 versicolor
86           6.0         3.4          4.5         1.6 versicolor
87           6.7         3.1          4.7         1.5 versicolor
88           6.3         2.3          4.4         1.3 versicolor
89           5.6         3.0          4.1         1.3 versicolor
90           5.5         2.5          4.0         1.3 versicolor
91           5.5         2.6          4.4         1.2 versicolor
92           6.1         3.0          4.6         1.4 versicolor
93           5.8         2.6          4.0         1.2 versicolor
94           5.0         2.3          3.3         1.0 versicolor
95           5.6         2.7          4.2         1.3 versicolor
96           5.7         3.0          4.2         1.2 versicolor
97           5.7         2.9          4.2         1.3 versicolor
98           6.2         2.9          4.3         1.3 versicolor
99           5.1         2.5          3.0         1.1 versicolor
100          5.7         2.8          4.1         1.3 versicolor
101          6.3         3.3          6.0         2.5  virginica
102          5.8         2.7          5.1         1.9  virginica
103          7.1         3.0          5.9         2.1  virginica
104          6.3         2.9          5.6         1.8  virginica
105          6.5         3.0          5.8         2.2  virginica
106          7.6         3.0          6.6         2.1  virginica
107          4.9         2.5          4.5         1.7  virginica
108          7.3         2.9          6.3         1.8  virginica
109          6.7         2.5          5.8         1.8  virginica
110          7.2         3.6          6.1         2.5  virginica
111          6.5         3.2          5.1         2.0  virginica
112          6.4         2.7          5.3         1.9  virginica
113          6.8         3.0          5.5         2.1  virginica
114          5.7         2.5          5.0         2.0  virginica
115          5.8         2.8          5.1         2.4  virginica
116          6.4         3.2          5.3         2.3  virginica
117          6.5         3.0          5.5         1.8  virginica
118          7.7         3.8          6.7         2.2  virginica
119          7.7         2.6          6.9         2.3  virginica
120          6.0         2.2          5.0         1.5  virginica
121          6.9         3.2          5.7         2.3  virginica
122          5.6         2.8          4.9         2.0  virginica
123          7.7         2.8          6.7         2.0  virginica
124          6.3         2.7          4.9         1.8  virginica
125          6.7         3.3          5.7         2.1  virginica
126          7.2         3.2          6.0         1.8  virginica
127          6.2         2.8          4.8         1.8  virginica
128          6.1         3.0          4.9         1.8  virginica
129          6.4         2.8          5.6         2.1  virginica
130          7.2         3.0          5.8         1.6  virginica
131          7.4         2.8          6.1         1.9  virginica
132          7.9         3.8          6.4         2.0  virginica
133          6.4         2.8          5.6         2.2  virginica
134          6.3         2.8          5.1         1.5  virginica
135          6.1         2.6          5.6         1.4  virginica
136          7.7         3.0          6.1         2.3  virginica
137          6.3         3.4          5.6         2.4  virginica
138          6.4         3.1          5.5         1.8  virginica
139          6.0         3.0          4.8         1.8  virginica
140          6.9         3.1          5.4         2.1  virginica
141          6.7         3.1          5.6         2.4  virginica
142          6.9         3.1          5.1         2.3  virginica
143          5.8         2.7          5.1         1.9  virginica
144          6.8         3.2          5.9         2.3  virginica
145          6.7         3.3          5.7         2.5  virginica
146          6.7         3.0          5.2         2.3  virginica
147          6.3         2.5          5.0         1.9  virginica
148          6.5         3.0          5.2         2.0  virginica
149          6.2         3.4          5.4         2.3  virginica
150          5.9         3.0          5.1         1.8  virginica
> library(RUnit)
> errMsg <- function(err) print(err)
> load('ex3-tests.rda')
> iris
    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species
1            5.1         3.5          1.4         0.2     setosa
2            4.9         3.0          1.4         0.2     setosa
3            4.7         3.2          1.3         0.2     setosa
4            4.6         3.1          1.5         0.2     setosa
5            5.0         3.6          1.4         0.2     setosa
6            5.4         3.9          1.7         0.4     setosa
7            4.6         3.4          1.4         0.3     setosa
8            5.0         3.4          1.5         0.2     setosa
9            4.4         2.9          1.4         0.2     setosa
10           4.9         3.1          1.5         0.1     setosa
11           5.4         3.7          1.5         0.2     setosa
12           4.8         3.4          1.6         0.2     setosa
13           4.8         3.0          1.4         0.1     setosa
14           4.3         3.0          1.1         0.1     setosa
15           5.8         4.0          1.2         0.2     setosa
16           5.7         4.4          1.5         0.4     setosa
17           5.4         3.9          1.3         0.4     setosa
18           5.1         3.5          1.4         0.3     setosa
19           5.7         3.8          1.7         0.3     setosa
20           5.1         3.8          1.5         0.3     setosa
21           5.4         3.4          1.7         0.2     setosa
22           5.1         3.7          1.5         0.4     setosa
23           4.6         3.6          1.0         0.2     setosa
24           5.1         3.3          1.7         0.5     setosa
25           4.8         3.4          1.9         0.2     setosa
26           5.0         3.0          1.6         0.2     setosa
27           5.0         3.4          1.6         0.4     setosa
28           5.2         3.5          1.5         0.2     setosa
29           5.2         3.4          1.4         0.2     setosa
30           4.7         3.2          1.6         0.2     setosa
31           4.8         3.1          1.6         0.2     setosa
32           5.4         3.4          1.5         0.4     setosa
33           5.2         4.1          1.5         0.1     setosa
34           5.5         4.2          1.4         0.2     setosa
35           4.9         3.1          1.5         0.2     setosa
36           5.0         3.2          1.2         0.2     setosa
37           5.5         3.5          1.3         0.2     setosa
38           4.9         3.6          1.4         0.1     setosa
39           4.4         3.0          1.3         0.2     setosa
40           5.1         3.4          1.5         0.2     setosa
41           5.0         3.5          1.3         0.3     setosa
42           4.5         2.3          1.3         0.3     setosa
43           4.4         3.2          1.3         0.2     setosa
44           5.0         3.5          1.6         0.6     setosa
45           5.1         3.8          1.9         0.4     setosa
46           4.8         3.0          1.4         0.3     setosa
47           5.1         3.8          1.6         0.2     setosa
48           4.6         3.2          1.4         0.2     setosa
49           5.3         3.7          1.5         0.2     setosa
50           5.0         3.3          1.4         0.2     setosa
51           7.0         3.2          4.7         1.4 versicolor
52           6.4         3.2          4.5         1.5 versicolor
53           6.9         3.1          4.9         1.5 versicolor
54           5.5         2.3          4.0         1.3 versicolor
55           6.5         2.8          4.6         1.5 versicolor
56           5.7         2.8          4.5         1.3 versicolor
57           6.3         3.3          4.7         1.6 versicolor
58           4.9         2.4          3.3         1.0 versicolor
59           6.6         2.9          4.6         1.3 versicolor
60           5.2         2.7          3.9         1.4 versicolor
61           5.0         2.0          3.5         1.0 versicolor
62           5.9         3.0          4.2         1.5 versicolor
63           6.0         2.2          4.0         1.0 versicolor
64           6.1         2.9          4.7         1.4 versicolor
65           5.6         2.9          3.6         1.3 versicolor
66           6.7         3.1          4.4         1.4 versicolor
67           5.6         3.0          4.5         1.5 versicolor
68           5.8         2.7          4.1         1.0 versicolor
69           6.2         2.2          4.5         1.5 versicolor
70           5.6         2.5          3.9         1.1 versicolor
71           5.9         3.2          4.8         1.8 versicolor
72           6.1         2.8          4.0         1.3 versicolor
73           6.3         2.5          4.9         1.5 versicolor
74           6.1         2.8          4.7         1.2 versicolor
75           6.4         2.9          4.3         1.3 versicolor
76           6.6         3.0          4.4         1.4 versicolor
77           6.8         2.8          4.8         1.4 versicolor
78           6.7         3.0          5.0         1.7 versicolor
79           6.0         2.9          4.5         1.5 versicolor
80           5.7         2.6          3.5         1.0 versicolor
81           5.5         2.4          3.8         1.1 versicolor
82           5.5         2.4          3.7         1.0 versicolor
83           5.8         2.7          3.9         1.2 versicolor
84           6.0         2.7          5.1         1.6 versicolor
85           5.4         3.0          4.5         1.5 versicolor
86           6.0         3.4          4.5         1.6 versicolor
87           6.7         3.1          4.7         1.5 versicolor
88           6.3         2.3          4.4         1.3 versicolor
89           5.6         3.0          4.1         1.3 versicolor
90           5.5         2.5          4.0         1.3 versicolor
91           5.5         2.6          4.4         1.2 versicolor
92           6.1         3.0          4.6         1.4 versicolor
93           5.8         2.6          4.0         1.2 versicolor
94           5.0         2.3          3.3         1.0 versicolor
95           5.6         2.7          4.2         1.3 versicolor
96           5.7         3.0          4.2         1.2 versicolor
97           5.7         2.9          4.2         1.3 versicolor
98           6.2         2.9          4.3         1.3 versicolor
99           5.1         2.5          3.0         1.1 versicolor
100          5.7         2.8          4.1         1.3 versicolor
101          6.3         3.3          6.0         2.5  virginica
102          5.8         2.7          5.1         1.9  virginica
103          7.1         3.0          5.9         2.1  virginica
104          6.3         2.9          5.6         1.8  virginica
105          6.5         3.0          5.8         2.2  virginica
106          7.6         3.0          6.6         2.1  virginica
107          4.9         2.5          4.5         1.7  virginica
108          7.3         2.9          6.3         1.8  virginica
109          6.7         2.5          5.8         1.8  virginica
110          7.2         3.6          6.1         2.5  virginica
111          6.5         3.2          5.1         2.0  virginica
112          6.4         2.7          5.3         1.9  virginica
113          6.8         3.0          5.5         2.1  virginica
114          5.7         2.5          5.0         2.0  virginica
115          5.8         2.8          5.1         2.4  virginica
116          6.4         3.2          5.3         2.3  virginica
117          6.5         3.0          5.5         1.8  virginica
118          7.7         3.8          6.7         2.2  virginica
119          7.7         2.6          6.9         2.3  virginica
120          6.0         2.2          5.0         1.5  virginica
121          6.9         3.2          5.7         2.3  virginica
122          5.6         2.8          4.9         2.0  virginica
123          7.7         2.8          6.7         2.0  virginica
124          6.3         2.7          4.9         1.8  virginica
125          6.7         3.3          5.7         2.1  virginica
126          7.2         3.2          6.0         1.8  virginica
127          6.2         2.8          4.8         1.8  virginica
128          6.1         3.0          4.9         1.8  virginica
129          6.4         2.8          5.6         2.1  virginica
130          7.2         3.0          5.8         1.6  virginica
131          7.4         2.8          6.1         1.9  virginica
132          7.9         3.8          6.4         2.0  virginica
133          6.4         2.8          5.6         2.2  virginica
134          6.3         2.8          5.1         1.5  virginica
135          6.1         2.6          5.6         1.4  virginica
136          7.7         3.0          6.1         2.3  virginica
137          6.3         3.4          5.6         2.4  virginica
138          6.4         3.1          5.5         1.8  virginica
139          6.0         3.0          4.8         1.8  virginica
140          6.9         3.1          5.4         2.1  virginica
141          6.7         3.1          5.6         2.4  virginica
142          6.9         3.1          5.1         2.3  virginica
143          5.8         2.7          5.1         1.9  virginica
144          6.8         3.2          5.9         2.3  virginica
145          6.7         3.3          5.7         2.5  virginica
146          6.7         3.0          5.2         2.3  virginica
147          6.3         2.5          5.0         1.9  virginica
148          6.5         3.0          5.2         2.0  virginica
149          6.2         3.4          5.4         2.3  virginica
150          5.9         3.0          5.1         1.8  virginica
> data = iris
> data
    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species
1            5.1         3.5          1.4         0.2     setosa
2            4.9         3.0          1.4         0.2     setosa
3            4.7         3.2          1.3         0.2     setosa
4            4.6         3.1          1.5         0.2     setosa
5            5.0         3.6          1.4         0.2     setosa
6            5.4         3.9          1.7         0.4     setosa
7            4.6         3.4          1.4         0.3     setosa
8            5.0         3.4          1.5         0.2     setosa
9            4.4         2.9          1.4         0.2     setosa
10           4.9         3.1          1.5         0.1     setosa
11           5.4         3.7          1.5         0.2     setosa
12           4.8         3.4          1.6         0.2     setosa
13           4.8         3.0          1.4         0.1     setosa
14           4.3         3.0          1.1         0.1     setosa
15           5.8         4.0          1.2         0.2     setosa
16           5.7         4.4          1.5         0.4     setosa
17           5.4         3.9          1.3         0.4     setosa
18           5.1         3.5          1.4         0.3     setosa
19           5.7         3.8          1.7         0.3     setosa
20           5.1         3.8          1.5         0.3     setosa
21           5.4         3.4          1.7         0.2     setosa
22           5.1         3.7          1.5         0.4     setosa
23           4.6         3.6          1.0         0.2     setosa
24           5.1         3.3          1.7         0.5     setosa
25           4.8         3.4          1.9         0.2     setosa
26           5.0         3.0          1.6         0.2     setosa
27           5.0         3.4          1.6         0.4     setosa
28           5.2         3.5          1.5         0.2     setosa
29           5.2         3.4          1.4         0.2     setosa
30           4.7         3.2          1.6         0.2     setosa
31           4.8         3.1          1.6         0.2     setosa
32           5.4         3.4          1.5         0.4     setosa
33           5.2         4.1          1.5         0.1     setosa
34           5.5         4.2          1.4         0.2     setosa
35           4.9         3.1          1.5         0.2     setosa
36           5.0         3.2          1.2         0.2     setosa
37           5.5         3.5          1.3         0.2     setosa
38           4.9         3.6          1.4         0.1     setosa
39           4.4         3.0          1.3         0.2     setosa
40           5.1         3.4          1.5         0.2     setosa
41           5.0         3.5          1.3         0.3     setosa
42           4.5         2.3          1.3         0.3     setosa
43           4.4         3.2          1.3         0.2     setosa
44           5.0         3.5          1.6         0.6     setosa
45           5.1         3.8          1.9         0.4     setosa
46           4.8         3.0          1.4         0.3     setosa
47           5.1         3.8          1.6         0.2     setosa
48           4.6         3.2          1.4         0.2     setosa
49           5.3         3.7          1.5         0.2     setosa
50           5.0         3.3          1.4         0.2     setosa
51           7.0         3.2          4.7         1.4 versicolor
52           6.4         3.2          4.5         1.5 versicolor
53           6.9         3.1          4.9         1.5 versicolor
54           5.5         2.3          4.0         1.3 versicolor
55           6.5         2.8          4.6         1.5 versicolor
56           5.7         2.8          4.5         1.3 versicolor
57           6.3         3.3          4.7         1.6 versicolor
58           4.9         2.4          3.3         1.0 versicolor
59           6.6         2.9          4.6         1.3 versicolor
60           5.2         2.7          3.9         1.4 versicolor
61           5.0         2.0          3.5         1.0 versicolor
62           5.9         3.0          4.2         1.5 versicolor
63           6.0         2.2          4.0         1.0 versicolor
64           6.1         2.9          4.7         1.4 versicolor
65           5.6         2.9          3.6         1.3 versicolor
66           6.7         3.1          4.4         1.4 versicolor
67           5.6         3.0          4.5         1.5 versicolor
68           5.8         2.7          4.1         1.0 versicolor
69           6.2         2.2          4.5         1.5 versicolor
70           5.6         2.5          3.9         1.1 versicolor
71           5.9         3.2          4.8         1.8 versicolor
72           6.1         2.8          4.0         1.3 versicolor
73           6.3         2.5          4.9         1.5 versicolor
74           6.1         2.8          4.7         1.2 versicolor
75           6.4         2.9          4.3         1.3 versicolor
76           6.6         3.0          4.4         1.4 versicolor
77           6.8         2.8          4.8         1.4 versicolor
78           6.7         3.0          5.0         1.7 versicolor
79           6.0         2.9          4.5         1.5 versicolor
80           5.7         2.6          3.5         1.0 versicolor
81           5.5         2.4          3.8         1.1 versicolor
82           5.5         2.4          3.7         1.0 versicolor
83           5.8         2.7          3.9         1.2 versicolor
84           6.0         2.7          5.1         1.6 versicolor
85           5.4         3.0          4.5         1.5 versicolor
86           6.0         3.4          4.5         1.6 versicolor
87           6.7         3.1          4.7         1.5 versicolor
88           6.3         2.3          4.4         1.3 versicolor
89           5.6         3.0          4.1         1.3 versicolor
90           5.5         2.5          4.0         1.3 versicolor
91           5.5         2.6          4.4         1.2 versicolor
92           6.1         3.0          4.6         1.4 versicolor
93           5.8         2.6          4.0         1.2 versicolor
94           5.0         2.3          3.3         1.0 versicolor
95           5.6         2.7          4.2         1.3 versicolor
96           5.7         3.0          4.2         1.2 versicolor
97           5.7         2.9          4.2         1.3 versicolor
98           6.2         2.9          4.3         1.3 versicolor
99           5.1         2.5          3.0         1.1 versicolor
100          5.7         2.8          4.1         1.3 versicolor
101          6.3         3.3          6.0         2.5  virginica
102          5.8         2.7          5.1         1.9  virginica
103          7.1         3.0          5.9         2.1  virginica
104          6.3         2.9          5.6         1.8  virginica
105          6.5         3.0          5.8         2.2  virginica
106          7.6         3.0          6.6         2.1  virginica
107          4.9         2.5          4.5         1.7  virginica
108          7.3         2.9          6.3         1.8  virginica
109          6.7         2.5          5.8         1.8  virginica
110          7.2         3.6          6.1         2.5  virginica
111          6.5         3.2          5.1         2.0  virginica
112          6.4         2.7          5.3         1.9  virginica
113          6.8         3.0          5.5         2.1  virginica
114          5.7         2.5          5.0         2.0  virginica
115          5.8         2.8          5.1         2.4  virginica
116          6.4         3.2          5.3         2.3  virginica
117          6.5         3.0          5.5         1.8  virginica
118          7.7         3.8          6.7         2.2  virginica
119          7.7         2.6          6.9         2.3  virginica
120          6.0         2.2          5.0         1.5  virginica
121          6.9         3.2          5.7         2.3  virginica
122          5.6         2.8          4.9         2.0  virginica
123          7.7         2.8          6.7         2.0  virginica
124          6.3         2.7          4.9         1.8  virginica
125          6.7         3.3          5.7         2.1  virginica
126          7.2         3.2          6.0         1.8  virginica
127          6.2         2.8          4.8         1.8  virginica
128          6.1         3.0          4.9         1.8  virginica
129          6.4         2.8          5.6         2.1  virginica
130          7.2         3.0          5.8         1.6  virginica
131          7.4         2.8          6.1         1.9  virginica
132          7.9         3.8          6.4         2.0  virginica
133          6.4         2.8          5.6         2.2  virginica
134          6.3         2.8          5.1         1.5  virginica
135          6.1         2.6          5.6         1.4  virginica
136          7.7         3.0          6.1         2.3  virginica
137          6.3         3.4          5.6         2.4  virginica
138          6.4         3.1          5.5         1.8  virginica
139          6.0         3.0          4.8         1.8  virginica
140          6.9         3.1          5.4         2.1  virginica
141          6.7         3.1          5.6         2.4  virginica
142          6.9         3.1          5.1         2.3  virginica
143          5.8         2.7          5.1         1.9  virginica
144          6.8         3.2          5.9         2.3  virginica
145          6.7         3.3          5.7         2.5  virginica
146          6.7         3.0          5.2         2.3  virginica
147          6.3         2.5          5.0         1.9  virginica
148          6.5         3.0          5.2         2.0  virginica
149          6.2         3.4          5.4         2.3  virginica
150          5.9         3.0          5.1         1.8  virginica
> apply(data, 2, type)
Sepal.Length  Sepal.Width Petal.Length  Petal.Width      Species 
 "character"  "character"  "character"  "character"  "character" 
> apply(data, 2, typeof)
Error in match.fun(FUN) : object 'type' not found
> type(2)
Error: could not find function "type"
> typeof(2)
[1] "double"
> apply(data, 2, as.num)
Sepal.Length  Sepal.Width Petal.Length  Petal.Width      Species 
 "character"  "character"  "character"  "character"  "character" 
> apply(data, 2, as, class="numeric")
Error in match.fun(FUN) : object 'as.num' not found
> ?as
> ?as
> apply(data, 2, as.numeric)
Error in FUN(newX[, i], ...) : unused argument (class = "numeric")
> apply(data, 2, as.numeric)
       Sepal.Length Sepal.Width Petal.Length Petal.Width Species
  [1,]          5.1         3.5          1.4         0.2      NA
  [2,]          4.9         3.0          1.4         0.2      NA
  [3,]          4.7         3.2          1.3         0.2      NA
  [4,]          4.6         3.1          1.5         0.2      NA
  [5,]          5.0         3.6          1.4         0.2      NA
  [6,]          5.4         3.9          1.7         0.4      NA
  [7,]          4.6         3.4          1.4         0.3      NA
  [8,]          5.0         3.4          1.5         0.2      NA
  [9,]          4.4         2.9          1.4         0.2      NA
 [10,]          4.9         3.1          1.5         0.1      NA
 [11,]          5.4         3.7          1.5         0.2      NA
 [12,]          4.8         3.4          1.6         0.2      NA
 [13,]          4.8         3.0          1.4         0.1      NA
 [14,]          4.3         3.0          1.1         0.1      NA
 [15,]          5.8         4.0          1.2         0.2      NA
 [16,]          5.7         4.4          1.5         0.4      NA
 [17,]          5.4         3.9          1.3         0.4      NA
 [18,]          5.1         3.5          1.4         0.3      NA
 [19,]          5.7         3.8          1.7         0.3      NA
 [20,]          5.1         3.8          1.5         0.3      NA
 [21,]          5.4         3.4          1.7         0.2      NA
 [22,]          5.1         3.7          1.5         0.4      NA
 [23,]          4.6         3.6          1.0         0.2      NA
 [24,]          5.1         3.3          1.7         0.5      NA
 [25,]          4.8         3.4          1.9         0.2      NA
 [26,]          5.0         3.0          1.6         0.2      NA
 [27,]          5.0         3.4          1.6         0.4      NA
 [28,]          5.2         3.5          1.5         0.2      NA
 [29,]          5.2         3.4          1.4         0.2      NA
 [30,]          4.7         3.2          1.6         0.2      NA
 [31,]          4.8         3.1          1.6         0.2      NA
 [32,]          5.4         3.4          1.5         0.4      NA
 [33,]          5.2         4.1          1.5         0.1      NA
 [34,]          5.5         4.2          1.4         0.2      NA
 [35,]          4.9         3.1          1.5         0.2      NA
 [36,]          5.0         3.2          1.2         0.2      NA
 [37,]          5.5         3.5          1.3         0.2      NA
 [38,]          4.9         3.6          1.4         0.1      NA
 [39,]          4.4         3.0          1.3         0.2      NA
 [40,]          5.1         3.4          1.5         0.2      NA
 [41,]          5.0         3.5          1.3         0.3      NA
 [42,]          4.5         2.3          1.3         0.3      NA
 [43,]          4.4         3.2          1.3         0.2      NA
 [44,]          5.0         3.5          1.6         0.6      NA
 [45,]          5.1         3.8          1.9         0.4      NA
 [46,]          4.8         3.0          1.4         0.3      NA
 [47,]          5.1         3.8          1.6         0.2      NA
 [48,]          4.6         3.2          1.4         0.2      NA
 [49,]          5.3         3.7          1.5         0.2      NA
 [50,]          5.0         3.3          1.4         0.2      NA
 [51,]          7.0         3.2          4.7         1.4      NA
 [52,]          6.4         3.2          4.5         1.5      NA
 [53,]          6.9         3.1          4.9         1.5      NA
 [54,]          5.5         2.3          4.0         1.3      NA
 [55,]          6.5         2.8          4.6         1.5      NA
 [56,]          5.7         2.8          4.5         1.3      NA
 [57,]          6.3         3.3          4.7         1.6      NA
 [58,]          4.9         2.4          3.3         1.0      NA
 [59,]          6.6         2.9          4.6         1.3      NA
 [60,]          5.2         2.7          3.9         1.4      NA
 [61,]          5.0         2.0          3.5         1.0      NA
 [62,]          5.9         3.0          4.2         1.5      NA
 [63,]          6.0         2.2          4.0         1.0      NA
 [64,]          6.1         2.9          4.7         1.4      NA
 [65,]          5.6         2.9          3.6         1.3      NA
 [66,]          6.7         3.1          4.4         1.4      NA
 [67,]          5.6         3.0          4.5         1.5      NA
 [68,]          5.8         2.7          4.1         1.0      NA
 [69,]          6.2         2.2          4.5         1.5      NA
 [70,]          5.6         2.5          3.9         1.1      NA
 [71,]          5.9         3.2          4.8         1.8      NA
 [72,]          6.1         2.8          4.0         1.3      NA
 [73,]          6.3         2.5          4.9         1.5      NA
 [74,]          6.1         2.8          4.7         1.2      NA
 [75,]          6.4         2.9          4.3         1.3      NA
 [76,]          6.6         3.0          4.4         1.4      NA
 [77,]          6.8         2.8          4.8         1.4      NA
 [78,]          6.7         3.0          5.0         1.7      NA
 [79,]          6.0         2.9          4.5         1.5      NA
 [80,]          5.7         2.6          3.5         1.0      NA
 [81,]          5.5         2.4          3.8         1.1      NA
 [82,]          5.5         2.4          3.7         1.0      NA
 [83,]          5.8         2.7          3.9         1.2      NA
 [84,]          6.0         2.7          5.1         1.6      NA
 [85,]          5.4         3.0          4.5         1.5      NA
 [86,]          6.0         3.4          4.5         1.6      NA
 [87,]          6.7         3.1          4.7         1.5      NA
 [88,]          6.3         2.3          4.4         1.3      NA
 [89,]          5.6         3.0          4.1         1.3      NA
 [90,]          5.5         2.5          4.0         1.3      NA
 [91,]          5.5         2.6          4.4         1.2      NA
 [92,]          6.1         3.0          4.6         1.4      NA
 [93,]          5.8         2.6          4.0         1.2      NA
 [94,]          5.0         2.3          3.3         1.0      NA
 [95,]          5.6         2.7          4.2         1.3      NA
 [96,]          5.7         3.0          4.2         1.2      NA
 [97,]          5.7         2.9          4.2         1.3      NA
 [98,]          6.2         2.9          4.3         1.3      NA
 [99,]          5.1         2.5          3.0         1.1      NA
[100,]          5.7         2.8          4.1         1.3      NA
[101,]          6.3         3.3          6.0         2.5      NA
[102,]          5.8         2.7          5.1         1.9      NA
[103,]          7.1         3.0          5.9         2.1      NA
[104,]          6.3         2.9          5.6         1.8      NA
[105,]          6.5         3.0          5.8         2.2      NA
[106,]          7.6         3.0          6.6         2.1      NA
[107,]          4.9         2.5          4.5         1.7      NA
[108,]          7.3         2.9          6.3         1.8      NA
[109,]          6.7         2.5          5.8         1.8      NA
[110,]          7.2         3.6          6.1         2.5      NA
[111,]          6.5         3.2          5.1         2.0      NA
[112,]          6.4         2.7          5.3         1.9      NA
[113,]          6.8         3.0          5.5         2.1      NA
[114,]          5.7         2.5          5.0         2.0      NA
[115,]          5.8         2.8          5.1         2.4      NA
[116,]          6.4         3.2          5.3         2.3      NA
[117,]          6.5         3.0          5.5         1.8      NA
[118,]          7.7         3.8          6.7         2.2      NA
[119,]          7.7         2.6          6.9         2.3      NA
[120,]          6.0         2.2          5.0         1.5      NA
[121,]          6.9         3.2          5.7         2.3      NA
[122,]          5.6         2.8          4.9         2.0      NA
[123,]          7.7         2.8          6.7         2.0      NA
[124,]          6.3         2.7          4.9         1.8      NA
[125,]          6.7         3.3          5.7         2.1      NA
[126,]          7.2         3.2          6.0         1.8      NA
[127,]          6.2         2.8          4.8         1.8      NA
[128,]          6.1         3.0          4.9         1.8      NA
[129,]          6.4         2.8          5.6         2.1      NA
[130,]          7.2         3.0          5.8         1.6      NA
[131,]          7.4         2.8          6.1         1.9      NA
[132,]          7.9         3.8          6.4         2.0      NA
[133,]          6.4         2.8          5.6         2.2      NA
[134,]          6.3         2.8          5.1         1.5      NA
[135,]          6.1         2.6          5.6         1.4      NA
[136,]          7.7         3.0          6.1         2.3      NA
[137,]          6.3         3.4          5.6         2.4      NA
[138,]          6.4         3.1          5.5         1.8      NA
[139,]          6.0         3.0          4.8         1.8      NA
[140,]          6.9         3.1          5.4         2.1      NA
[141,]          6.7         3.1          5.6         2.4      NA
[142,]          6.9         3.1          5.1         2.3      NA
[143,]          5.8         2.7          5.1         1.9      NA
[144,]          6.8         3.2          5.9         2.3      NA
[145,]          6.7         3.3          5.7         2.5      NA
[146,]          6.7         3.0          5.2         2.3      NA
[147,]          6.3         2.5          5.0         1.9      NA
[148,]          6.5         3.0          5.2         2.0      NA
[149,]          6.2         3.4          5.4         2.3      NA
[150,]          5.9         3.0          5.1         1.8      NA
Warning message:
In apply(data, 2, as.numeric) : NAs introduced by coercion
> sapply(data, as.numeric)
       Sepal.Length Sepal.Width Petal.Length Petal.Width Species
  [1,]          5.1         3.5          1.4         0.2       1
  [2,]          4.9         3.0          1.4         0.2       1
  [3,]          4.7         3.2          1.3         0.2       1
  [4,]          4.6         3.1          1.5         0.2       1
  [5,]          5.0         3.6          1.4         0.2       1
  [6,]          5.4         3.9          1.7         0.4       1
  [7,]          4.6         3.4          1.4         0.3       1
  [8,]          5.0         3.4          1.5         0.2       1
  [9,]          4.4         2.9          1.4         0.2       1
 [10,]          4.9         3.1          1.5         0.1       1
 [11,]          5.4         3.7          1.5         0.2       1
 [12,]          4.8         3.4          1.6         0.2       1
 [13,]          4.8         3.0          1.4         0.1       1
 [14,]          4.3         3.0          1.1         0.1       1
 [15,]          5.8         4.0          1.2         0.2       1
 [16,]          5.7         4.4          1.5         0.4       1
 [17,]          5.4         3.9          1.3         0.4       1
 [18,]          5.1         3.5          1.4         0.3       1
 [19,]          5.7         3.8          1.7         0.3       1
 [20,]          5.1         3.8          1.5         0.3       1
 [21,]          5.4         3.4          1.7         0.2       1
 [22,]          5.1         3.7          1.5         0.4       1
 [23,]          4.6         3.6          1.0         0.2       1
 [24,]          5.1         3.3          1.7         0.5       1
 [25,]          4.8         3.4          1.9         0.2       1
 [26,]          5.0         3.0          1.6         0.2       1
 [27,]          5.0         3.4          1.6         0.4       1
 [28,]          5.2         3.5          1.5         0.2       1
 [29,]          5.2         3.4          1.4         0.2       1
 [30,]          4.7         3.2          1.6         0.2       1
 [31,]          4.8         3.1          1.6         0.2       1
 [32,]          5.4         3.4          1.5         0.4       1
 [33,]          5.2         4.1          1.5         0.1       1
 [34,]          5.5         4.2          1.4         0.2       1
 [35,]          4.9         3.1          1.5         0.2       1
 [36,]          5.0         3.2          1.2         0.2       1
 [37,]          5.5         3.5          1.3         0.2       1
 [38,]          4.9         3.6          1.4         0.1       1
 [39,]          4.4         3.0          1.3         0.2       1
 [40,]          5.1         3.4          1.5         0.2       1
 [41,]          5.0         3.5          1.3         0.3       1
 [42,]          4.5         2.3          1.3         0.3       1
 [43,]          4.4         3.2          1.3         0.2       1
 [44,]          5.0         3.5          1.6         0.6       1
 [45,]          5.1         3.8          1.9         0.4       1
 [46,]          4.8         3.0          1.4         0.3       1
 [47,]          5.1         3.8          1.6         0.2       1
 [48,]          4.6         3.2          1.4         0.2       1
 [49,]          5.3         3.7          1.5         0.2       1
 [50,]          5.0         3.3          1.4         0.2       1
 [51,]          7.0         3.2          4.7         1.4       2
 [52,]          6.4         3.2          4.5         1.5       2
 [53,]          6.9         3.1          4.9         1.5       2
 [54,]          5.5         2.3          4.0         1.3       2
 [55,]          6.5         2.8          4.6         1.5       2
 [56,]          5.7         2.8          4.5         1.3       2
 [57,]          6.3         3.3          4.7         1.6       2
 [58,]          4.9         2.4          3.3         1.0       2
 [59,]          6.6         2.9          4.6         1.3       2
 [60,]          5.2         2.7          3.9         1.4       2
 [61,]          5.0         2.0          3.5         1.0       2
 [62,]          5.9         3.0          4.2         1.5       2
 [63,]          6.0         2.2          4.0         1.0       2
 [64,]          6.1         2.9          4.7         1.4       2
 [65,]          5.6         2.9          3.6         1.3       2
 [66,]          6.7         3.1          4.4         1.4       2
 [67,]          5.6         3.0          4.5         1.5       2
 [68,]          5.8         2.7          4.1         1.0       2
 [69,]          6.2         2.2          4.5         1.5       2
 [70,]          5.6         2.5          3.9         1.1       2
 [71,]          5.9         3.2          4.8         1.8       2
 [72,]          6.1         2.8          4.0         1.3       2
 [73,]          6.3         2.5          4.9         1.5       2
 [74,]          6.1         2.8          4.7         1.2       2
 [75,]          6.4         2.9          4.3         1.3       2
 [76,]          6.6         3.0          4.4         1.4       2
 [77,]          6.8         2.8          4.8         1.4       2
 [78,]          6.7         3.0          5.0         1.7       2
 [79,]          6.0         2.9          4.5         1.5       2
 [80,]          5.7         2.6          3.5         1.0       2
 [81,]          5.5         2.4          3.8         1.1       2
 [82,]          5.5         2.4          3.7         1.0       2
 [83,]          5.8         2.7          3.9         1.2       2
 [84,]          6.0         2.7          5.1         1.6       2
 [85,]          5.4         3.0          4.5         1.5       2
 [86,]          6.0         3.4          4.5         1.6       2
 [87,]          6.7         3.1          4.7         1.5       2
 [88,]          6.3         2.3          4.4         1.3       2
 [89,]          5.6         3.0          4.1         1.3       2
 [90,]          5.5         2.5          4.0         1.3       2
 [91,]          5.5         2.6          4.4         1.2       2
 [92,]          6.1         3.0          4.6         1.4       2
 [93,]          5.8         2.6          4.0         1.2       2
 [94,]          5.0         2.3          3.3         1.0       2
 [95,]          5.6         2.7          4.2         1.3       2
 [96,]          5.7         3.0          4.2         1.2       2
 [97,]          5.7         2.9          4.2         1.3       2
 [98,]          6.2         2.9          4.3         1.3       2
 [99,]          5.1         2.5          3.0         1.1       2
[100,]          5.7         2.8          4.1         1.3       2
[101,]          6.3         3.3          6.0         2.5       3
[102,]          5.8         2.7          5.1         1.9       3
[103,]          7.1         3.0          5.9         2.1       3
[104,]          6.3         2.9          5.6         1.8       3
[105,]          6.5         3.0          5.8         2.2       3
[106,]          7.6         3.0          6.6         2.1       3
[107,]          4.9         2.5          4.5         1.7       3
[108,]          7.3         2.9          6.3         1.8       3
[109,]          6.7         2.5          5.8         1.8       3
[110,]          7.2         3.6          6.1         2.5       3
[111,]          6.5         3.2          5.1         2.0       3
[112,]          6.4         2.7          5.3         1.9       3
[113,]          6.8         3.0          5.5         2.1       3
[114,]          5.7         2.5          5.0         2.0       3
[115,]          5.8         2.8          5.1         2.4       3
[116,]          6.4         3.2          5.3         2.3       3
[117,]          6.5         3.0          5.5         1.8       3
[118,]          7.7         3.8          6.7         2.2       3
[119,]          7.7         2.6          6.9         2.3       3
[120,]          6.0         2.2          5.0         1.5       3
[121,]          6.9         3.2          5.7         2.3       3
[122,]          5.6         2.8          4.9         2.0       3
[123,]          7.7         2.8          6.7         2.0       3
[124,]          6.3         2.7          4.9         1.8       3
[125,]          6.7         3.3          5.7         2.1       3
[126,]          7.2         3.2          6.0         1.8       3
[127,]          6.2         2.8          4.8         1.8       3
[128,]          6.1         3.0          4.9         1.8       3
[129,]          6.4         2.8          5.6         2.1       3
[130,]          7.2         3.0          5.8         1.6       3
[131,]          7.4         2.8          6.1         1.9       3
[132,]          7.9         3.8          6.4         2.0       3
[133,]          6.4         2.8          5.6         2.2       3
[134,]          6.3         2.8          5.1         1.5       3
[135,]          6.1         2.6          5.6         1.4       3
[136,]          7.7         3.0          6.1         2.3       3
[137,]          6.3         3.4          5.6         2.4       3
[138,]          6.4         3.1          5.5         1.8       3
[139,]          6.0         3.0          4.8         1.8       3
[140,]          6.9         3.1          5.4         2.1       3
[141,]          6.7         3.1          5.6         2.4       3
[142,]          6.9         3.1          5.1         2.3       3
[143,]          5.8         2.7          5.1         1.9       3
[144,]          6.8         3.2          5.9         2.3       3
[145,]          6.7         3.3          5.7         2.5       3
[146,]          6.7         3.0          5.2         2.3       3
[147,]          6.3         2.5          5.0         1.9       3
[148,]          6.5         3.0          5.2         2.0       3
[149,]          6.2         3.4          5.4         2.3       3
[150,]          5.9         3.0          5.1         1.8       3
> data
    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species
1            5.1         3.5          1.4         0.2     setosa
2            4.9         3.0          1.4         0.2     setosa
3            4.7         3.2          1.3         0.2     setosa
4            4.6         3.1          1.5         0.2     setosa
5            5.0         3.6          1.4         0.2     setosa
6            5.4         3.9          1.7         0.4     setosa
7            4.6         3.4          1.4         0.3     setosa
8            5.0         3.4          1.5         0.2     setosa
9            4.4         2.9          1.4         0.2     setosa
10           4.9         3.1          1.5         0.1     setosa
11           5.4         3.7          1.5         0.2     setosa
12           4.8         3.4          1.6         0.2     setosa
13           4.8         3.0          1.4         0.1     setosa
14           4.3         3.0          1.1         0.1     setosa
15           5.8         4.0          1.2         0.2     setosa
16           5.7         4.4          1.5         0.4     setosa
17           5.4         3.9          1.3         0.4     setosa
18           5.1         3.5          1.4         0.3     setosa
19           5.7         3.8          1.7         0.3     setosa
20           5.1         3.8          1.5         0.3     setosa
21           5.4         3.4          1.7         0.2     setosa
22           5.1         3.7          1.5         0.4     setosa
23           4.6         3.6          1.0         0.2     setosa
24           5.1         3.3          1.7         0.5     setosa
25           4.8         3.4          1.9         0.2     setosa
26           5.0         3.0          1.6         0.2     setosa
27           5.0         3.4          1.6         0.4     setosa
28           5.2         3.5          1.5         0.2     setosa
29           5.2         3.4          1.4         0.2     setosa
30           4.7         3.2          1.6         0.2     setosa
31           4.8         3.1          1.6         0.2     setosa
32           5.4         3.4          1.5         0.4     setosa
33           5.2         4.1          1.5         0.1     setosa
34           5.5         4.2          1.4         0.2     setosa
35           4.9         3.1          1.5         0.2     setosa
36           5.0         3.2          1.2         0.2     setosa
37           5.5         3.5          1.3         0.2     setosa
38           4.9         3.6          1.4         0.1     setosa
39           4.4         3.0          1.3         0.2     setosa
40           5.1         3.4          1.5         0.2     setosa
41           5.0         3.5          1.3         0.3     setosa
42           4.5         2.3          1.3         0.3     setosa
43           4.4         3.2          1.3         0.2     setosa
44           5.0         3.5          1.6         0.6     setosa
45           5.1         3.8          1.9         0.4     setosa
46           4.8         3.0          1.4         0.3     setosa
47           5.1         3.8          1.6         0.2     setosa
48           4.6         3.2          1.4         0.2     setosa
49           5.3         3.7          1.5         0.2     setosa
50           5.0         3.3          1.4         0.2     setosa
51           7.0         3.2          4.7         1.4 versicolor
52           6.4         3.2          4.5         1.5 versicolor
53           6.9         3.1          4.9         1.5 versicolor
54           5.5         2.3          4.0         1.3 versicolor
55           6.5         2.8          4.6         1.5 versicolor
56           5.7         2.8          4.5         1.3 versicolor
57           6.3         3.3          4.7         1.6 versicolor
58           4.9         2.4          3.3         1.0 versicolor
59           6.6         2.9          4.6         1.3 versicolor
60           5.2         2.7          3.9         1.4 versicolor
61           5.0         2.0          3.5         1.0 versicolor
62           5.9         3.0          4.2         1.5 versicolor
63           6.0         2.2          4.0         1.0 versicolor
64           6.1         2.9          4.7         1.4 versicolor
65           5.6         2.9          3.6         1.3 versicolor
66           6.7         3.1          4.4         1.4 versicolor
67           5.6         3.0          4.5         1.5 versicolor
68           5.8         2.7          4.1         1.0 versicolor
69           6.2         2.2          4.5         1.5 versicolor
70           5.6         2.5          3.9         1.1 versicolor
71           5.9         3.2          4.8         1.8 versicolor
72           6.1         2.8          4.0         1.3 versicolor
73           6.3         2.5          4.9         1.5 versicolor
74           6.1         2.8          4.7         1.2 versicolor
75           6.4         2.9          4.3         1.3 versicolor
76           6.6         3.0          4.4         1.4 versicolor
77           6.8         2.8          4.8         1.4 versicolor
78           6.7         3.0          5.0         1.7 versicolor
79           6.0         2.9          4.5         1.5 versicolor
80           5.7         2.6          3.5         1.0 versicolor
81           5.5         2.4          3.8         1.1 versicolor
82           5.5         2.4          3.7         1.0 versicolor
83           5.8         2.7          3.9         1.2 versicolor
84           6.0         2.7          5.1         1.6 versicolor
85           5.4         3.0          4.5         1.5 versicolor
86           6.0         3.4          4.5         1.6 versicolor
87           6.7         3.1          4.7         1.5 versicolor
88           6.3         2.3          4.4         1.3 versicolor
89           5.6         3.0          4.1         1.3 versicolor
90           5.5         2.5          4.0         1.3 versicolor
91           5.5         2.6          4.4         1.2 versicolor
92           6.1         3.0          4.6         1.4 versicolor
93           5.8         2.6          4.0         1.2 versicolor
94           5.0         2.3          3.3         1.0 versicolor
95           5.6         2.7          4.2         1.3 versicolor
96           5.7         3.0          4.2         1.2 versicolor
97           5.7         2.9          4.2         1.3 versicolor
98           6.2         2.9          4.3         1.3 versicolor
99           5.1         2.5          3.0         1.1 versicolor
100          5.7         2.8          4.1         1.3 versicolor
101          6.3         3.3          6.0         2.5  virginica
102          5.8         2.7          5.1         1.9  virginica
103          7.1         3.0          5.9         2.1  virginica
104          6.3         2.9          5.6         1.8  virginica
105          6.5         3.0          5.8         2.2  virginica
106          7.6         3.0          6.6         2.1  virginica
107          4.9         2.5          4.5         1.7  virginica
108          7.3         2.9          6.3         1.8  virginica
109          6.7         2.5          5.8         1.8  virginica
110          7.2         3.6          6.1         2.5  virginica
111          6.5         3.2          5.1         2.0  virginica
112          6.4         2.7          5.3         1.9  virginica
113          6.8         3.0          5.5         2.1  virginica
114          5.7         2.5          5.0         2.0  virginica
115          5.8         2.8          5.1         2.4  virginica
116          6.4         3.2          5.3         2.3  virginica
117          6.5         3.0          5.5         1.8  virginica
118          7.7         3.8          6.7         2.2  virginica
119          7.7         2.6          6.9         2.3  virginica
120          6.0         2.2          5.0         1.5  virginica
121          6.9         3.2          5.7         2.3  virginica
122          5.6         2.8          4.9         2.0  virginica
123          7.7         2.8          6.7         2.0  virginica
124          6.3         2.7          4.9         1.8  virginica
125          6.7         3.3          5.7         2.1  virginica
126          7.2         3.2          6.0         1.8  virginica
127          6.2         2.8          4.8         1.8  virginica
128          6.1         3.0          4.9         1.8  virginica
129          6.4         2.8          5.6         2.1  virginica
130          7.2         3.0          5.8         1.6  virginica
131          7.4         2.8          6.1         1.9  virginica
132          7.9         3.8          6.4         2.0  virginica
133          6.4         2.8          5.6         2.2  virginica
134          6.3         2.8          5.1         1.5  virginica
135          6.1         2.6          5.6         1.4  virginica
136          7.7         3.0          6.1         2.3  virginica
137          6.3         3.4          5.6         2.4  virginica
138          6.4         3.1          5.5         1.8  virginica
139          6.0         3.0          4.8         1.8  virginica
140          6.9         3.1          5.4         2.1  virginica
141          6.7         3.1          5.6         2.4  virginica
142          6.9         3.1          5.1         2.3  virginica
143          5.8         2.7          5.1         1.9  virginica
144          6.8         3.2          5.9         2.3  virginica
145          6.7         3.3          5.7         2.5  virginica
146          6.7         3.0          5.2         2.3  virginica
147          6.3         2.5          5.0         1.9  virginica
148          6.5         3.0          5.2         2.0  virginica
149          6.2         3.4          5.4         2.3  virginica
150          5.9         3.0          5.1         1.8  virginica
> sapply(data[1, ], as.numeric)
Sepal.Length  Sepal.Width Petal.Length  Petal.Width      Species 
         5.1          3.5          1.4          0.2          1.0 
> head(data, 1)
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
> apply(data, 2, as.numeric)
       Sepal.Length Sepal.Width Petal.Length Petal.Width Species
  [1,]          5.1         3.5          1.4         0.2      NA
  [2,]          4.9         3.0          1.4         0.2      NA
  [3,]          4.7         3.2          1.3         0.2      NA
  [4,]          4.6         3.1          1.5         0.2      NA
  [5,]          5.0         3.6          1.4         0.2      NA
  [6,]          5.4         3.9          1.7         0.4      NA
  [7,]          4.6         3.4          1.4         0.3      NA
  [8,]          5.0         3.4          1.5         0.2      NA
  [9,]          4.4         2.9          1.4         0.2      NA
 [10,]          4.9         3.1          1.5         0.1      NA
 [11,]          5.4         3.7          1.5         0.2      NA
 [12,]          4.8         3.4          1.6         0.2      NA
 [13,]          4.8         3.0          1.4         0.1      NA
 [14,]          4.3         3.0          1.1         0.1      NA
 [15,]          5.8         4.0          1.2         0.2      NA
 [16,]          5.7         4.4          1.5         0.4      NA
 [17,]          5.4         3.9          1.3         0.4      NA
 [18,]          5.1         3.5          1.4         0.3      NA
 [19,]          5.7         3.8          1.7         0.3      NA
 [20,]          5.1         3.8          1.5         0.3      NA
 [21,]          5.4         3.4          1.7         0.2      NA
 [22,]          5.1         3.7          1.5         0.4      NA
 [23,]          4.6         3.6          1.0         0.2      NA
 [24,]          5.1         3.3          1.7         0.5      NA
 [25,]          4.8         3.4          1.9         0.2      NA
 [26,]          5.0         3.0          1.6         0.2      NA
 [27,]          5.0         3.4          1.6         0.4      NA
 [28,]          5.2         3.5          1.5         0.2      NA
 [29,]          5.2         3.4          1.4         0.2      NA
 [30,]          4.7         3.2          1.6         0.2      NA
 [31,]          4.8         3.1          1.6         0.2      NA
 [32,]          5.4         3.4          1.5         0.4      NA
 [33,]          5.2         4.1          1.5         0.1      NA
 [34,]          5.5         4.2          1.4         0.2      NA
 [35,]          4.9         3.1          1.5         0.2      NA
 [36,]          5.0         3.2          1.2         0.2      NA
 [37,]          5.5         3.5          1.3         0.2      NA
 [38,]          4.9         3.6          1.4         0.1      NA
 [39,]          4.4         3.0          1.3         0.2      NA
 [40,]          5.1         3.4          1.5         0.2      NA
 [41,]          5.0         3.5          1.3         0.3      NA
 [42,]          4.5         2.3          1.3         0.3      NA
 [43,]          4.4         3.2          1.3         0.2      NA
 [44,]          5.0         3.5          1.6         0.6      NA
 [45,]          5.1         3.8          1.9         0.4      NA
 [46,]          4.8         3.0          1.4         0.3      NA
 [47,]          5.1         3.8          1.6         0.2      NA
 [48,]          4.6         3.2          1.4         0.2      NA
 [49,]          5.3         3.7          1.5         0.2      NA
 [50,]          5.0         3.3          1.4         0.2      NA
 [51,]          7.0         3.2          4.7         1.4      NA
 [52,]          6.4         3.2          4.5         1.5      NA
 [53,]          6.9         3.1          4.9         1.5      NA
 [54,]          5.5         2.3          4.0         1.3      NA
 [55,]          6.5         2.8          4.6         1.5      NA
 [56,]          5.7         2.8          4.5         1.3      NA
 [57,]          6.3         3.3          4.7         1.6      NA
 [58,]          4.9         2.4          3.3         1.0      NA
 [59,]          6.6         2.9          4.6         1.3      NA
 [60,]          5.2         2.7          3.9         1.4      NA
 [61,]          5.0         2.0          3.5         1.0      NA
 [62,]          5.9         3.0          4.2         1.5      NA
 [63,]          6.0         2.2          4.0         1.0      NA
 [64,]          6.1         2.9          4.7         1.4      NA
 [65,]          5.6         2.9          3.6         1.3      NA
 [66,]          6.7         3.1          4.4         1.4      NA
 [67,]          5.6         3.0          4.5         1.5      NA
 [68,]          5.8         2.7          4.1         1.0      NA
 [69,]          6.2         2.2          4.5         1.5      NA
 [70,]          5.6         2.5          3.9         1.1      NA
 [71,]          5.9         3.2          4.8         1.8      NA
 [72,]          6.1         2.8          4.0         1.3      NA
 [73,]          6.3         2.5          4.9         1.5      NA
 [74,]          6.1         2.8          4.7         1.2      NA
 [75,]          6.4         2.9          4.3         1.3      NA
 [76,]          6.6         3.0          4.4         1.4      NA
 [77,]          6.8         2.8          4.8         1.4      NA
 [78,]          6.7         3.0          5.0         1.7      NA
 [79,]          6.0         2.9          4.5         1.5      NA
 [80,]          5.7         2.6          3.5         1.0      NA
 [81,]          5.5         2.4          3.8         1.1      NA
 [82,]          5.5         2.4          3.7         1.0      NA
 [83,]          5.8         2.7          3.9         1.2      NA
 [84,]          6.0         2.7          5.1         1.6      NA
 [85,]          5.4         3.0          4.5         1.5      NA
 [86,]          6.0         3.4          4.5         1.6      NA
 [87,]          6.7         3.1          4.7         1.5      NA
 [88,]          6.3         2.3          4.4         1.3      NA
 [89,]          5.6         3.0          4.1         1.3      NA
 [90,]          5.5         2.5          4.0         1.3      NA
 [91,]          5.5         2.6          4.4         1.2      NA
 [92,]          6.1         3.0          4.6         1.4      NA
 [93,]          5.8         2.6          4.0         1.2      NA
 [94,]          5.0         2.3          3.3         1.0      NA
 [95,]          5.6         2.7          4.2         1.3      NA
 [96,]          5.7         3.0          4.2         1.2      NA
 [97,]          5.7         2.9          4.2         1.3      NA
 [98,]          6.2         2.9          4.3         1.3      NA
 [99,]          5.1         2.5          3.0         1.1      NA
[100,]          5.7         2.8          4.1         1.3      NA
[101,]          6.3         3.3          6.0         2.5      NA
[102,]          5.8         2.7          5.1         1.9      NA
[103,]          7.1         3.0          5.9         2.1      NA
[104,]          6.3         2.9          5.6         1.8      NA
[105,]          6.5         3.0          5.8         2.2      NA
[106,]          7.6         3.0          6.6         2.1      NA
[107,]          4.9         2.5          4.5         1.7      NA
[108,]          7.3         2.9          6.3         1.8      NA
[109,]          6.7         2.5          5.8         1.8      NA
[110,]          7.2         3.6          6.1         2.5      NA
[111,]          6.5         3.2          5.1         2.0      NA
[112,]          6.4         2.7          5.3         1.9      NA
[113,]          6.8         3.0          5.5         2.1      NA
[114,]          5.7         2.5          5.0         2.0      NA
[115,]          5.8         2.8          5.1         2.4      NA
[116,]          6.4         3.2          5.3         2.3      NA
[117,]          6.5         3.0          5.5         1.8      NA
[118,]          7.7         3.8          6.7         2.2      NA
[119,]          7.7         2.6          6.9         2.3      NA
[120,]          6.0         2.2          5.0         1.5      NA
[121,]          6.9         3.2          5.7         2.3      NA
[122,]          5.6         2.8          4.9         2.0      NA
[123,]          7.7         2.8          6.7         2.0      NA
[124,]          6.3         2.7          4.9         1.8      NA
[125,]          6.7         3.3          5.7         2.1      NA
[126,]          7.2         3.2          6.0         1.8      NA
[127,]          6.2         2.8          4.8         1.8      NA
[128,]          6.1         3.0          4.9         1.8      NA
[129,]          6.4         2.8          5.6         2.1      NA
[130,]          7.2         3.0          5.8         1.6      NA
[131,]          7.4         2.8          6.1         1.9      NA
[132,]          7.9         3.8          6.4         2.0      NA
[133,]          6.4         2.8          5.6         2.2      NA
[134,]          6.3         2.8          5.1         1.5      NA
[135,]          6.1         2.6          5.6         1.4      NA
[136,]          7.7         3.0          6.1         2.3      NA
[137,]          6.3         3.4          5.6         2.4      NA
[138,]          6.4         3.1          5.5         1.8      NA
[139,]          6.0         3.0          4.8         1.8      NA
[140,]          6.9         3.1          5.4         2.1      NA
[141,]          6.7         3.1          5.6         2.4      NA
[142,]          6.9         3.1          5.1         2.3      NA
[143,]          5.8         2.7          5.1         1.9      NA
[144,]          6.8         3.2          5.9         2.3      NA
[145,]          6.7         3.3          5.7         2.5      NA
[146,]          6.7         3.0          5.2         2.3      NA
[147,]          6.3         2.5          5.0         1.9      NA
[148,]          6.5         3.0          5.2         2.0      NA
[149,]          6.2         3.4          5.4         2.3      NA
[150,]          5.9         3.0          5.1         1.8      NA
Warning message:
In apply(data, 2, as.numeric) : NAs introduced by coercion
> apply(data, 2, suppressWarnings(!is.na(as.numeric())))
Error in match.fun(FUN) : 
  'suppressWarnings(!is.na(as.numeric()))' is not a function, character or symbol
> apply(data, 2, function (col) { return(!is.na(as.numeric(col))) })
Error in as.numeric(row) (from #1) : 
  cannot coerce type 'closure' to vector of type 'double'
> vec = c('as', 'asd')
> vec
[1] "as"  "asd"
> as.numeric(vec)
[1] NA NA
Warning message:
NAs introduced by coercion 
> apply(data, 2, function (col) { return(!is.na(as.numeric(row))) })
Error in as.numeric(row) (from #1) : 
  cannot coerce type 'closure' to vector of type 'double'
> apply(data, 2, function (col) { return(suppressWarnings(!is.na(as.numeric(col)))) })
       Sepal.Length Sepal.Width Petal.Length Petal.Width Species
  [1,]         TRUE        TRUE         TRUE        TRUE   FALSE
  [2,]         TRUE        TRUE         TRUE        TRUE   FALSE
  [3,]         TRUE        TRUE         TRUE        TRUE   FALSE
  [4,]         TRUE        TRUE         TRUE        TRUE   FALSE
  [5,]         TRUE        TRUE         TRUE        TRUE   FALSE
  [6,]         TRUE        TRUE         TRUE        TRUE   FALSE
  [7,]         TRUE        TRUE         TRUE        TRUE   FALSE
  [8,]         TRUE        TRUE         TRUE        TRUE   FALSE
  [9,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [10,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [11,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [12,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [13,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [14,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [15,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [16,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [17,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [18,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [19,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [20,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [21,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [22,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [23,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [24,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [25,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [26,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [27,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [28,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [29,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [30,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [31,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [32,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [33,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [34,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [35,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [36,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [37,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [38,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [39,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [40,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [41,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [42,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [43,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [44,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [45,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [46,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [47,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [48,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [49,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [50,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [51,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [52,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [53,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [54,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [55,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [56,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [57,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [58,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [59,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [60,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [61,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [62,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [63,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [64,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [65,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [66,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [67,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [68,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [69,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [70,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [71,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [72,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [73,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [74,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [75,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [76,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [77,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [78,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [79,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [80,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [81,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [82,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [83,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [84,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [85,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [86,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [87,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [88,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [89,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [90,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [91,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [92,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [93,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [94,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [95,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [96,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [97,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [98,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [99,]         TRUE        TRUE         TRUE        TRUE   FALSE
[100,]         TRUE        TRUE         TRUE        TRUE   FALSE
[101,]         TRUE        TRUE         TRUE        TRUE   FALSE
[102,]         TRUE        TRUE         TRUE        TRUE   FALSE
[103,]         TRUE        TRUE         TRUE        TRUE   FALSE
[104,]         TRUE        TRUE         TRUE        TRUE   FALSE
[105,]         TRUE        TRUE         TRUE        TRUE   FALSE
[106,]         TRUE        TRUE         TRUE        TRUE   FALSE
[107,]         TRUE        TRUE         TRUE        TRUE   FALSE
[108,]         TRUE        TRUE         TRUE        TRUE   FALSE
[109,]         TRUE        TRUE         TRUE        TRUE   FALSE
[110,]         TRUE        TRUE         TRUE        TRUE   FALSE
[111,]         TRUE        TRUE         TRUE        TRUE   FALSE
[112,]         TRUE        TRUE         TRUE        TRUE   FALSE
[113,]         TRUE        TRUE         TRUE        TRUE   FALSE
[114,]         TRUE        TRUE         TRUE        TRUE   FALSE
[115,]         TRUE        TRUE         TRUE        TRUE   FALSE
[116,]         TRUE        TRUE         TRUE        TRUE   FALSE
[117,]         TRUE        TRUE         TRUE        TRUE   FALSE
[118,]         TRUE        TRUE         TRUE        TRUE   FALSE
[119,]         TRUE        TRUE         TRUE        TRUE   FALSE
[120,]         TRUE        TRUE         TRUE        TRUE   FALSE
[121,]         TRUE        TRUE         TRUE        TRUE   FALSE
[122,]         TRUE        TRUE         TRUE        TRUE   FALSE
[123,]         TRUE        TRUE         TRUE        TRUE   FALSE
[124,]         TRUE        TRUE         TRUE        TRUE   FALSE
[125,]         TRUE        TRUE         TRUE        TRUE   FALSE
[126,]         TRUE        TRUE         TRUE        TRUE   FALSE
[127,]         TRUE        TRUE         TRUE        TRUE   FALSE
[128,]         TRUE        TRUE         TRUE        TRUE   FALSE
[129,]         TRUE        TRUE         TRUE        TRUE   FALSE
[130,]         TRUE        TRUE         TRUE        TRUE   FALSE
[131,]         TRUE        TRUE         TRUE        TRUE   FALSE
[132,]         TRUE        TRUE         TRUE        TRUE   FALSE
[133,]         TRUE        TRUE         TRUE        TRUE   FALSE
[134,]         TRUE        TRUE         TRUE        TRUE   FALSE
[135,]         TRUE        TRUE         TRUE        TRUE   FALSE
[136,]         TRUE        TRUE         TRUE        TRUE   FALSE
[137,]         TRUE        TRUE         TRUE        TRUE   FALSE
[138,]         TRUE        TRUE         TRUE        TRUE   FALSE
[139,]         TRUE        TRUE         TRUE        TRUE   FALSE
[140,]         TRUE        TRUE         TRUE        TRUE   FALSE
[141,]         TRUE        TRUE         TRUE        TRUE   FALSE
[142,]         TRUE        TRUE         TRUE        TRUE   FALSE
[143,]         TRUE        TRUE         TRUE        TRUE   FALSE
[144,]         TRUE        TRUE         TRUE        TRUE   FALSE
[145,]         TRUE        TRUE         TRUE        TRUE   FALSE
[146,]         TRUE        TRUE         TRUE        TRUE   FALSE
[147,]         TRUE        TRUE         TRUE        TRUE   FALSE
[148,]         TRUE        TRUE         TRUE        TRUE   FALSE
[149,]         TRUE        TRUE         TRUE        TRUE   FALSE
[150,]         TRUE        TRUE         TRUE        TRUE   FALSE
Warning message:
In FUN(newX[, i], ...) : NAs introduced by coercion
> apply(data, 2, function (col) { return(suppressWarnings(!is.na(as.numeric(col)))) })
       Sepal.Length Sepal.Width Petal.Length Petal.Width Species
  [1,]         TRUE        TRUE         TRUE        TRUE   FALSE
  [2,]         TRUE        TRUE         TRUE        TRUE   FALSE
  [3,]         TRUE        TRUE         TRUE        TRUE   FALSE
  [4,]         TRUE        TRUE         TRUE        TRUE   FALSE
  [5,]         TRUE        TRUE         TRUE        TRUE   FALSE
  [6,]         TRUE        TRUE         TRUE        TRUE   FALSE
  [7,]         TRUE        TRUE         TRUE        TRUE   FALSE
  [8,]         TRUE        TRUE         TRUE        TRUE   FALSE
  [9,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [10,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [11,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [12,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [13,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [14,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [15,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [16,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [17,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [18,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [19,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [20,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [21,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [22,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [23,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [24,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [25,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [26,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [27,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [28,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [29,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [30,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [31,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [32,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [33,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [34,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [35,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [36,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [37,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [38,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [39,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [40,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [41,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [42,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [43,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [44,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [45,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [46,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [47,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [48,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [49,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [50,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [51,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [52,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [53,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [54,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [55,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [56,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [57,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [58,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [59,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [60,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [61,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [62,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [63,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [64,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [65,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [66,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [67,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [68,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [69,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [70,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [71,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [72,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [73,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [74,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [75,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [76,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [77,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [78,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [79,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [80,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [81,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [82,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [83,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [84,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [85,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [86,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [87,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [88,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [89,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [90,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [91,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [92,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [93,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [94,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [95,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [96,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [97,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [98,]         TRUE        TRUE         TRUE        TRUE   FALSE
 [99,]         TRUE        TRUE         TRUE        TRUE   FALSE
[100,]         TRUE        TRUE         TRUE        TRUE   FALSE
[101,]         TRUE        TRUE         TRUE        TRUE   FALSE
[102,]         TRUE        TRUE         TRUE        TRUE   FALSE
[103,]         TRUE        TRUE         TRUE        TRUE   FALSE
[104,]         TRUE        TRUE         TRUE        TRUE   FALSE
[105,]         TRUE        TRUE         TRUE        TRUE   FALSE
[106,]         TRUE        TRUE         TRUE        TRUE   FALSE
[107,]         TRUE        TRUE         TRUE        TRUE   FALSE
[108,]         TRUE        TRUE         TRUE        TRUE   FALSE
[109,]         TRUE        TRUE         TRUE        TRUE   FALSE
[110,]         TRUE        TRUE         TRUE        TRUE   FALSE
[111,]         TRUE        TRUE         TRUE        TRUE   FALSE
[112,]         TRUE        TRUE         TRUE        TRUE   FALSE
[113,]         TRUE        TRUE         TRUE        TRUE   FALSE
[114,]         TRUE        TRUE         TRUE        TRUE   FALSE
[115,]         TRUE        TRUE         TRUE        TRUE   FALSE
[116,]         TRUE        TRUE         TRUE        TRUE   FALSE
[117,]         TRUE        TRUE         TRUE        TRUE   FALSE
[118,]         TRUE        TRUE         TRUE        TRUE   FALSE
[119,]         TRUE        TRUE         TRUE        TRUE   FALSE
[120,]         TRUE        TRUE         TRUE        TRUE   FALSE
[121,]         TRUE        TRUE         TRUE        TRUE   FALSE
[122,]         TRUE        TRUE         TRUE        TRUE   FALSE
[123,]         TRUE        TRUE         TRUE        TRUE   FALSE
[124,]         TRUE        TRUE         TRUE        TRUE   FALSE
[125,]         TRUE        TRUE         TRUE        TRUE   FALSE
[126,]         TRUE        TRUE         TRUE        TRUE   FALSE
[127,]         TRUE        TRUE         TRUE        TRUE   FALSE
[128,]         TRUE        TRUE         TRUE        TRUE   FALSE
[129,]         TRUE        TRUE         TRUE        TRUE   FALSE
[130,]         TRUE        TRUE         TRUE        TRUE   FALSE
[131,]         TRUE        TRUE         TRUE        TRUE   FALSE
[132,]         TRUE        TRUE         TRUE        TRUE   FALSE
[133,]         TRUE        TRUE         TRUE        TRUE   FALSE
[134,]         TRUE        TRUE         TRUE        TRUE   FALSE
[135,]         TRUE        TRUE         TRUE        TRUE   FALSE
[136,]         TRUE        TRUE         TRUE        TRUE   FALSE
[137,]         TRUE        TRUE         TRUE        TRUE   FALSE
[138,]         TRUE        TRUE         TRUE        TRUE   FALSE
[139,]         TRUE        TRUE         TRUE        TRUE   FALSE
[140,]         TRUE        TRUE         TRUE        TRUE   FALSE
[141,]         TRUE        TRUE         TRUE        TRUE   FALSE
[142,]         TRUE        TRUE         TRUE        TRUE   FALSE
[143,]         TRUE        TRUE         TRUE        TRUE   FALSE
[144,]         TRUE        TRUE         TRUE        TRUE   FALSE
[145,]         TRUE        TRUE         TRUE        TRUE   FALSE
[146,]         TRUE        TRUE         TRUE        TRUE   FALSE
[147,]         TRUE        TRUE         TRUE        TRUE   FALSE
[148,]         TRUE        TRUE         TRUE        TRUE   FALSE
[149,]         TRUE        TRUE         TRUE        TRUE   FALSE
[150,]         TRUE        TRUE         TRUE        TRUE   FALSE
> apply(data, 2, function (col) { return(suppressWarnings(is.na(as.numeric(col)))[1]) })
Sepal.Length  Sepal.Width Petal.Length  Petal.Width      Species 
        TRUE         TRUE         TRUE         TRUE        FALSE 
> which(apply(data, 2, function (col) { return(suppressWarnings(is.na(as.numeric(col)))[1]) }))
Sepal.Length  Sepal.Width Petal.Length  Petal.Width      Species 
       FALSE        FALSE        FALSE        FALSE         TRUE 
> which(apply(data, 2, function (col) { return(suppressWarnings(is.na(as.numeric(col)))[1]) }))
Species 
      5 
> factor.col = which(apply(data, 2, function(col) {
+         return(suppressWarnings(is.na(as.numeric(col)))[1])
+     })
+ factor.col
Error: unexpected symbol in:
"    })
factor.col"
> factor.col = which(apply(data, 2, function(col) {
+         return(suppressWarnings(is.na(as.numeric(col)))[1])
+     }))
> factor.col
Species 
      5 
> data[, -factor.col]
data frame with 0 columns and 150 rows
> data[, -factor.col]
    Sepal.Length Sepal.Width Petal.Length Petal.Width
1            5.1         3.5          1.4         0.2
2            4.9         3.0          1.4         0.2
3            4.7         3.2          1.3         0.2
4            4.6         3.1          1.5         0.2
5            5.0         3.6          1.4         0.2
6            5.4         3.9          1.7         0.4
7            4.6         3.4          1.4         0.3
8            5.0         3.4          1.5         0.2
9            4.4         2.9          1.4         0.2
10           4.9         3.1          1.5         0.1
11           5.4         3.7          1.5         0.2
12           4.8         3.4          1.6         0.2
13           4.8         3.0          1.4         0.1
14           4.3         3.0          1.1         0.1
15           5.8         4.0          1.2         0.2
16           5.7         4.4          1.5         0.4
17           5.4         3.9          1.3         0.4
18           5.1         3.5          1.4         0.3
19           5.7         3.8          1.7         0.3
20           5.1         3.8          1.5         0.3
21           5.4         3.4          1.7         0.2
22           5.1         3.7          1.5         0.4
23           4.6         3.6          1.0         0.2
24           5.1         3.3          1.7         0.5
25           4.8         3.4          1.9         0.2
26           5.0         3.0          1.6         0.2
27           5.0         3.4          1.6         0.4
28           5.2         3.5          1.5         0.2
29           5.2         3.4          1.4         0.2
30           4.7         3.2          1.6         0.2
31           4.8         3.1          1.6         0.2
32           5.4         3.4          1.5         0.4
33           5.2         4.1          1.5         0.1
34           5.5         4.2          1.4         0.2
35           4.9         3.1          1.5         0.2
36           5.0         3.2          1.2         0.2
37           5.5         3.5          1.3         0.2
38           4.9         3.6          1.4         0.1
39           4.4         3.0          1.3         0.2
40           5.1         3.4          1.5         0.2
41           5.0         3.5          1.3         0.3
42           4.5         2.3          1.3         0.3
43           4.4         3.2          1.3         0.2
44           5.0         3.5          1.6         0.6
45           5.1         3.8          1.9         0.4
46           4.8         3.0          1.4         0.3
47           5.1         3.8          1.6         0.2
48           4.6         3.2          1.4         0.2
49           5.3         3.7          1.5         0.2
50           5.0         3.3          1.4         0.2
51           7.0         3.2          4.7         1.4
52           6.4         3.2          4.5         1.5
53           6.9         3.1          4.9         1.5
54           5.5         2.3          4.0         1.3
55           6.5         2.8          4.6         1.5
56           5.7         2.8          4.5         1.3
57           6.3         3.3          4.7         1.6
58           4.9         2.4          3.3         1.0
59           6.6         2.9          4.6         1.3
60           5.2         2.7          3.9         1.4
61           5.0         2.0          3.5         1.0
62           5.9         3.0          4.2         1.5
63           6.0         2.2          4.0         1.0
64           6.1         2.9          4.7         1.4
65           5.6         2.9          3.6         1.3
66           6.7         3.1          4.4         1.4
67           5.6         3.0          4.5         1.5
68           5.8         2.7          4.1         1.0
69           6.2         2.2          4.5         1.5
70           5.6         2.5          3.9         1.1
71           5.9         3.2          4.8         1.8
72           6.1         2.8          4.0         1.3
73           6.3         2.5          4.9         1.5
74           6.1         2.8          4.7         1.2
75           6.4         2.9          4.3         1.3
76           6.6         3.0          4.4         1.4
77           6.8         2.8          4.8         1.4
78           6.7         3.0          5.0         1.7
79           6.0         2.9          4.5         1.5
80           5.7         2.6          3.5         1.0
81           5.5         2.4          3.8         1.1
82           5.5         2.4          3.7         1.0
83           5.8         2.7          3.9         1.2
84           6.0         2.7          5.1         1.6
85           5.4         3.0          4.5         1.5
86           6.0         3.4          4.5         1.6
87           6.7         3.1          4.7         1.5
88           6.3         2.3          4.4         1.3
89           5.6         3.0          4.1         1.3
90           5.5         2.5          4.0         1.3
91           5.5         2.6          4.4         1.2
92           6.1         3.0          4.6         1.4
93           5.8         2.6          4.0         1.2
94           5.0         2.3          3.3         1.0
95           5.6         2.7          4.2         1.3
96           5.7         3.0          4.2         1.2
97           5.7         2.9          4.2         1.3
98           6.2         2.9          4.3         1.3
99           5.1         2.5          3.0         1.1
100          5.7         2.8          4.1         1.3
101          6.3         3.3          6.0         2.5
102          5.8         2.7          5.1         1.9
103          7.1         3.0          5.9         2.1
104          6.3         2.9          5.6         1.8
105          6.5         3.0          5.8         2.2
106          7.6         3.0          6.6         2.1
107          4.9         2.5          4.5         1.7
108          7.3         2.9          6.3         1.8
109          6.7         2.5          5.8         1.8
110          7.2         3.6          6.1         2.5
111          6.5         3.2          5.1         2.0
112          6.4         2.7          5.3         1.9
113          6.8         3.0          5.5         2.1
114          5.7         2.5          5.0         2.0
115          5.8         2.8          5.1         2.4
116          6.4         3.2          5.3         2.3
117          6.5         3.0          5.5         1.8
118          7.7         3.8          6.7         2.2
119          7.7         2.6          6.9         2.3
120          6.0         2.2          5.0         1.5
121          6.9         3.2          5.7         2.3
122          5.6         2.8          4.9         2.0
123          7.7         2.8          6.7         2.0
124          6.3         2.7          4.9         1.8
125          6.7         3.3          5.7         2.1
126          7.2         3.2          6.0         1.8
127          6.2         2.8          4.8         1.8
128          6.1         3.0          4.9         1.8
129          6.4         2.8          5.6         2.1
130          7.2         3.0          5.8         1.6
131          7.4         2.8          6.1         1.9
132          7.9         3.8          6.4         2.0
133          6.4         2.8          5.6         2.2
134          6.3         2.8          5.1         1.5
135          6.1         2.6          5.6         1.4
136          7.7         3.0          6.1         2.3
137          6.3         3.4          5.6         2.4
138          6.4         3.1          5.5         1.8
139          6.0         3.0          4.8         1.8
140          6.9         3.1          5.4         2.1
141          6.7         3.1          5.6         2.4
142          6.9         3.1          5.1         2.3
143          5.8         2.7          5.1         1.9
144          6.8         3.2          5.9         2.3
145          6.7         3.3          5.7         2.5
146          6.7         3.0          5.2         2.3
147          6.3         2.5          5.0         1.9
148          6.5         3.0          5.2         2.0
149          6.2         3.4          5.4         2.3
150          5.9         3.0          5.1         1.8
> levels(data[, -factor.col])
[1] "Sepal.Length" "Sepal.Width"  "Petal.Length" "Petal.Width" 
> levels(data[, -factor.col])
NULL
> mean.by.level.t
           Sepal.Length Sepal.Width Petal.Length Petal.Width
setosa            5.006       3.428        1.462       0.246
versicolor        5.936       2.770        4.260       1.326
virginica         6.588       2.974        5.552       2.026
> levels(data[, factor.col])
  [1] setosa     setosa     setosa     setosa     setosa     setosa    
  [7] setosa     setosa     setosa     setosa     setosa     setosa    
 [13] setosa     setosa     setosa     setosa     setosa     setosa    
 [19] setosa     setosa     setosa     setosa     setosa     setosa    
 [25] setosa     setosa     setosa     setosa     setosa     setosa    
 [31] setosa     setosa     setosa     setosa     setosa     setosa    
 [37] setosa     setosa     setosa     setosa     setosa     setosa    
 [43] setosa     setosa     setosa     setosa     setosa     setosa    
 [49] setosa     setosa     versicolor versicolor versicolor versicolor
 [55] versicolor versicolor versicolor versicolor versicolor versicolor
 [61] versicolor versicolor versicolor versicolor versicolor versicolor
 [67] versicolor versicolor versicolor versicolor versicolor versicolor
 [73] versicolor versicolor versicolor versicolor versicolor versicolor
 [79] versicolor versicolor versicolor versicolor versicolor versicolor
 [85] versicolor versicolor versicolor versicolor versicolor versicolor
 [91] versicolor versicolor versicolor versicolor versicolor versicolor
 [97] versicolor versicolor versicolor versicolor virginica  virginica 
[103] virginica  virginica  virginica  virginica  virginica  virginica 
[109] virginica  virginica  virginica  virginica  virginica  virginica 
[115] virginica  virginica  virginica  virginica  virginica  virginica 
[121] virginica  virginica  virginica  virginica  virginica  virginica 
[127] virginica  virginica  virginica  virginica  virginica  virginica 
[133] virginica  virginica  virginica  virginica  virginica  virginica 
[139] virginica  virginica  virginica  virginica  virginica  virginica 
[145] virginica  virginica  virginica  virginica  virginica  virginica 
Levels: setosa versicolor virginica
> data$setosa
NULL
> levels(data[, factor.col])
[1] "setosa"     "versicolor" "virginica" 
> data[1, factor.col]
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
> data[1, factor.col]
[1] setosa
Levels: setosa versicolor virginica
> getGroup(data, level=levels(data[, factor.col]))
Error in getGroup(data, level = levels(data[, factor.col])) : 
  unused argument (level = levels(data[, factor.col]))
> getGroup(data)
list()
> data.levels = levels(data[, factor.col])
> data.levels
[1] "setosa"     "versicolor" "virginica" 
> split(data, data.levels)
$setosa
    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species
1            5.1         3.5          1.4         0.2     setosa
4            4.6         3.1          1.5         0.2     setosa
7            4.6         3.4          1.4         0.3     setosa
10           4.9         3.1          1.5         0.1     setosa
13           4.8         3.0          1.4         0.1     setosa
16           5.7         4.4          1.5         0.4     setosa
19           5.7         3.8          1.7         0.3     setosa
22           5.1         3.7          1.5         0.4     setosa
25           4.8         3.4          1.9         0.2     setosa
28           5.2         3.5          1.5         0.2     setosa
31           4.8         3.1          1.6         0.2     setosa
34           5.5         4.2          1.4         0.2     setosa
37           5.5         3.5          1.3         0.2     setosa
40           5.1         3.4          1.5         0.2     setosa
43           4.4         3.2          1.3         0.2     setosa
46           4.8         3.0          1.4         0.3     setosa
49           5.3         3.7          1.5         0.2     setosa
52           6.4         3.2          4.5         1.5 versicolor
55           6.5         2.8          4.6         1.5 versicolor
58           4.9         2.4          3.3         1.0 versicolor
61           5.0         2.0          3.5         1.0 versicolor
64           6.1         2.9          4.7         1.4 versicolor
67           5.6         3.0          4.5         1.5 versicolor
70           5.6         2.5          3.9         1.1 versicolor
73           6.3         2.5          4.9         1.5 versicolor
76           6.6         3.0          4.4         1.4 versicolor
79           6.0         2.9          4.5         1.5 versicolor
82           5.5         2.4          3.7         1.0 versicolor
85           5.4         3.0          4.5         1.5 versicolor
88           6.3         2.3          4.4         1.3 versicolor
91           5.5         2.6          4.4         1.2 versicolor
94           5.0         2.3          3.3         1.0 versicolor
97           5.7         2.9          4.2         1.3 versicolor
100          5.7         2.8          4.1         1.3 versicolor
103          7.1         3.0          5.9         2.1  virginica
106          7.6         3.0          6.6         2.1  virginica
109          6.7         2.5          5.8         1.8  virginica
112          6.4         2.7          5.3         1.9  virginica
115          5.8         2.8          5.1         2.4  virginica
118          7.7         3.8          6.7         2.2  virginica
121          6.9         3.2          5.7         2.3  virginica
124          6.3         2.7          4.9         1.8  virginica
127          6.2         2.8          4.8         1.8  virginica
130          7.2         3.0          5.8         1.6  virginica
133          6.4         2.8          5.6         2.2  virginica
136          7.7         3.0          6.1         2.3  virginica
139          6.0         3.0          4.8         1.8  virginica
142          6.9         3.1          5.1         2.3  virginica
145          6.7         3.3          5.7         2.5  virginica
148          6.5         3.0          5.2         2.0  virginica

$versicolor
    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species
2            4.9         3.0          1.4         0.2     setosa
5            5.0         3.6          1.4         0.2     setosa
8            5.0         3.4          1.5         0.2     setosa
11           5.4         3.7          1.5         0.2     setosa
14           4.3         3.0          1.1         0.1     setosa
17           5.4         3.9          1.3         0.4     setosa
20           5.1         3.8          1.5         0.3     setosa
23           4.6         3.6          1.0         0.2     setosa
26           5.0         3.0          1.6         0.2     setosa
29           5.2         3.4          1.4         0.2     setosa
32           5.4         3.4          1.5         0.4     setosa
35           4.9         3.1          1.5         0.2     setosa
38           4.9         3.6          1.4         0.1     setosa
41           5.0         3.5          1.3         0.3     setosa
44           5.0         3.5          1.6         0.6     setosa
47           5.1         3.8          1.6         0.2     setosa
50           5.0         3.3          1.4         0.2     setosa
53           6.9         3.1          4.9         1.5 versicolor
56           5.7         2.8          4.5         1.3 versicolor
59           6.6         2.9          4.6         1.3 versicolor
62           5.9         3.0          4.2         1.5 versicolor
65           5.6         2.9          3.6         1.3 versicolor
68           5.8         2.7          4.1         1.0 versicolor
71           5.9         3.2          4.8         1.8 versicolor
74           6.1         2.8          4.7         1.2 versicolor
77           6.8         2.8          4.8         1.4 versicolor
80           5.7         2.6          3.5         1.0 versicolor
83           5.8         2.7          3.9         1.2 versicolor
86           6.0         3.4          4.5         1.6 versicolor
89           5.6         3.0          4.1         1.3 versicolor
92           6.1         3.0          4.6         1.4 versicolor
95           5.6         2.7          4.2         1.3 versicolor
98           6.2         2.9          4.3         1.3 versicolor
101          6.3         3.3          6.0         2.5  virginica
104          6.3         2.9          5.6         1.8  virginica
107          4.9         2.5          4.5         1.7  virginica
110          7.2         3.6          6.1         2.5  virginica
113          6.8         3.0          5.5         2.1  virginica
116          6.4         3.2          5.3         2.3  virginica
119          7.7         2.6          6.9         2.3  virginica
122          5.6         2.8          4.9         2.0  virginica
125          6.7         3.3          5.7         2.1  virginica
128          6.1         3.0          4.9         1.8  virginica
131          7.4         2.8          6.1         1.9  virginica
134          6.3         2.8          5.1         1.5  virginica
137          6.3         3.4          5.6         2.4  virginica
140          6.9         3.1          5.4         2.1  virginica
143          5.8         2.7          5.1         1.9  virginica
146          6.7         3.0          5.2         2.3  virginica
149          6.2         3.4          5.4         2.3  virginica

$virginica
    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species
3            4.7         3.2          1.3         0.2     setosa
6            5.4         3.9          1.7         0.4     setosa
9            4.4         2.9          1.4         0.2     setosa
12           4.8         3.4          1.6         0.2     setosa
15           5.8         4.0          1.2         0.2     setosa
18           5.1         3.5          1.4         0.3     setosa
21           5.4         3.4          1.7         0.2     setosa
24           5.1         3.3          1.7         0.5     setosa
27           5.0         3.4          1.6         0.4     setosa
30           4.7         3.2          1.6         0.2     setosa
33           5.2         4.1          1.5         0.1     setosa
36           5.0         3.2          1.2         0.2     setosa
39           4.4         3.0          1.3         0.2     setosa
42           4.5         2.3          1.3         0.3     setosa
45           5.1         3.8          1.9         0.4     setosa
48           4.6         3.2          1.4         0.2     setosa
51           7.0         3.2          4.7         1.4 versicolor
54           5.5         2.3          4.0         1.3 versicolor
57           6.3         3.3          4.7         1.6 versicolor
60           5.2         2.7          3.9         1.4 versicolor
63           6.0         2.2          4.0         1.0 versicolor
66           6.7         3.1          4.4         1.4 versicolor
69           6.2         2.2          4.5         1.5 versicolor
72           6.1         2.8          4.0         1.3 versicolor
75           6.4         2.9          4.3         1.3 versicolor
78           6.7         3.0          5.0         1.7 versicolor
81           5.5         2.4          3.8         1.1 versicolor
84           6.0         2.7          5.1         1.6 versicolor
87           6.7         3.1          4.7         1.5 versicolor
90           5.5         2.5          4.0         1.3 versicolor
93           5.8         2.6          4.0         1.2 versicolor
96           5.7         3.0          4.2         1.2 versicolor
99           5.1         2.5          3.0         1.1 versicolor
102          5.8         2.7          5.1         1.9  virginica
105          6.5         3.0          5.8         2.2  virginica
108          7.3         2.9          6.3         1.8  virginica
111          6.5         3.2          5.1         2.0  virginica
114          5.7         2.5          5.0         2.0  virginica
117          6.5         3.0          5.5         1.8  virginica
120          6.0         2.2          5.0         1.5  virginica
123          7.7         2.8          6.7         2.0  virginica
126          7.2         3.2          6.0         1.8  virginica
129          6.4         2.8          5.6         2.1  virginica
132          7.9         3.8          6.4         2.0  virginica
135          6.1         2.6          5.6         1.4  virginica
138          6.4         3.1          5.5         1.8  virginica
141          6.7         3.1          5.6         2.4  virginica
144          6.8         3.2          5.9         2.3  virginica
147          6.3         2.5          5.0         1.9  virginica
150          5.9         3.0          5.1         1.8  virginica

> ?split
> split(data, data[, factor.col])
$setosa
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1           5.1         3.5          1.4         0.2  setosa
2           4.9         3.0          1.4         0.2  setosa
3           4.7         3.2          1.3         0.2  setosa
4           4.6         3.1          1.5         0.2  setosa
5           5.0         3.6          1.4         0.2  setosa
6           5.4         3.9          1.7         0.4  setosa
7           4.6         3.4          1.4         0.3  setosa
8           5.0         3.4          1.5         0.2  setosa
9           4.4         2.9          1.4         0.2  setosa
10          4.9         3.1          1.5         0.1  setosa
11          5.4         3.7          1.5         0.2  setosa
12          4.8         3.4          1.6         0.2  setosa
13          4.8         3.0          1.4         0.1  setosa
14          4.3         3.0          1.1         0.1  setosa
15          5.8         4.0          1.2         0.2  setosa
16          5.7         4.4          1.5         0.4  setosa
17          5.4         3.9          1.3         0.4  setosa
18          5.1         3.5          1.4         0.3  setosa
19          5.7         3.8          1.7         0.3  setosa
20          5.1         3.8          1.5         0.3  setosa
21          5.4         3.4          1.7         0.2  setosa
22          5.1         3.7          1.5         0.4  setosa
23          4.6         3.6          1.0         0.2  setosa
24          5.1         3.3          1.7         0.5  setosa
25          4.8         3.4          1.9         0.2  setosa
26          5.0         3.0          1.6         0.2  setosa
27          5.0         3.4          1.6         0.4  setosa
28          5.2         3.5          1.5         0.2  setosa
29          5.2         3.4          1.4         0.2  setosa
30          4.7         3.2          1.6         0.2  setosa
31          4.8         3.1          1.6         0.2  setosa
32          5.4         3.4          1.5         0.4  setosa
33          5.2         4.1          1.5         0.1  setosa
34          5.5         4.2          1.4         0.2  setosa
35          4.9         3.1          1.5         0.2  setosa
36          5.0         3.2          1.2         0.2  setosa
37          5.5         3.5          1.3         0.2  setosa
38          4.9         3.6          1.4         0.1  setosa
39          4.4         3.0          1.3         0.2  setosa
40          5.1         3.4          1.5         0.2  setosa
41          5.0         3.5          1.3         0.3  setosa
42          4.5         2.3          1.3         0.3  setosa
43          4.4         3.2          1.3         0.2  setosa
44          5.0         3.5          1.6         0.6  setosa
45          5.1         3.8          1.9         0.4  setosa
46          4.8         3.0          1.4         0.3  setosa
47          5.1         3.8          1.6         0.2  setosa
48          4.6         3.2          1.4         0.2  setosa
49          5.3         3.7          1.5         0.2  setosa
50          5.0         3.3          1.4         0.2  setosa

$versicolor
    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species
51           7.0         3.2          4.7         1.4 versicolor
52           6.4         3.2          4.5         1.5 versicolor
53           6.9         3.1          4.9         1.5 versicolor
54           5.5         2.3          4.0         1.3 versicolor
55           6.5         2.8          4.6         1.5 versicolor
56           5.7         2.8          4.5         1.3 versicolor
57           6.3         3.3          4.7         1.6 versicolor
58           4.9         2.4          3.3         1.0 versicolor
59           6.6         2.9          4.6         1.3 versicolor
60           5.2         2.7          3.9         1.4 versicolor
61           5.0         2.0          3.5         1.0 versicolor
62           5.9         3.0          4.2         1.5 versicolor
63           6.0         2.2          4.0         1.0 versicolor
64           6.1         2.9          4.7         1.4 versicolor
65           5.6         2.9          3.6         1.3 versicolor
66           6.7         3.1          4.4         1.4 versicolor
67           5.6         3.0          4.5         1.5 versicolor
68           5.8         2.7          4.1         1.0 versicolor
69           6.2         2.2          4.5         1.5 versicolor
70           5.6         2.5          3.9         1.1 versicolor
71           5.9         3.2          4.8         1.8 versicolor
72           6.1         2.8          4.0         1.3 versicolor
73           6.3         2.5          4.9         1.5 versicolor
74           6.1         2.8          4.7         1.2 versicolor
75           6.4         2.9          4.3         1.3 versicolor
76           6.6         3.0          4.4         1.4 versicolor
77           6.8         2.8          4.8         1.4 versicolor
78           6.7         3.0          5.0         1.7 versicolor
79           6.0         2.9          4.5         1.5 versicolor
80           5.7         2.6          3.5         1.0 versicolor
81           5.5         2.4          3.8         1.1 versicolor
82           5.5         2.4          3.7         1.0 versicolor
83           5.8         2.7          3.9         1.2 versicolor
84           6.0         2.7          5.1         1.6 versicolor
85           5.4         3.0          4.5         1.5 versicolor
86           6.0         3.4          4.5         1.6 versicolor
87           6.7         3.1          4.7         1.5 versicolor
88           6.3         2.3          4.4         1.3 versicolor
89           5.6         3.0          4.1         1.3 versicolor
90           5.5         2.5          4.0         1.3 versicolor
91           5.5         2.6          4.4         1.2 versicolor
92           6.1         3.0          4.6         1.4 versicolor
93           5.8         2.6          4.0         1.2 versicolor
94           5.0         2.3          3.3         1.0 versicolor
95           5.6         2.7          4.2         1.3 versicolor
96           5.7         3.0          4.2         1.2 versicolor
97           5.7         2.9          4.2         1.3 versicolor
98           6.2         2.9          4.3         1.3 versicolor
99           5.1         2.5          3.0         1.1 versicolor
100          5.7         2.8          4.1         1.3 versicolor

$virginica
    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species
101          6.3         3.3          6.0         2.5 virginica
102          5.8         2.7          5.1         1.9 virginica
103          7.1         3.0          5.9         2.1 virginica
104          6.3         2.9          5.6         1.8 virginica
105          6.5         3.0          5.8         2.2 virginica
106          7.6         3.0          6.6         2.1 virginica
107          4.9         2.5          4.5         1.7 virginica
108          7.3         2.9          6.3         1.8 virginica
109          6.7         2.5          5.8         1.8 virginica
110          7.2         3.6          6.1         2.5 virginica
111          6.5         3.2          5.1         2.0 virginica
112          6.4         2.7          5.3         1.9 virginica
113          6.8         3.0          5.5         2.1 virginica
114          5.7         2.5          5.0         2.0 virginica
115          5.8         2.8          5.1         2.4 virginica
116          6.4         3.2          5.3         2.3 virginica
117          6.5         3.0          5.5         1.8 virginica
118          7.7         3.8          6.7         2.2 virginica
119          7.7         2.6          6.9         2.3 virginica
120          6.0         2.2          5.0         1.5 virginica
121          6.9         3.2          5.7         2.3 virginica
122          5.6         2.8          4.9         2.0 virginica
123          7.7         2.8          6.7         2.0 virginica
124          6.3         2.7          4.9         1.8 virginica
125          6.7         3.3          5.7         2.1 virginica
126          7.2         3.2          6.0         1.8 virginica
127          6.2         2.8          4.8         1.8 virginica
128          6.1         3.0          4.9         1.8 virginica
129          6.4         2.8          5.6         2.1 virginica
130          7.2         3.0          5.8         1.6 virginica
131          7.4         2.8          6.1         1.9 virginica
132          7.9         3.8          6.4         2.0 virginica
133          6.4         2.8          5.6         2.2 virginica
134          6.3         2.8          5.1         1.5 virginica
135          6.1         2.6          5.6         1.4 virginica
136          7.7         3.0          6.1         2.3 virginica
137          6.3         3.4          5.6         2.4 virginica
138          6.4         3.1          5.5         1.8 virginica
139          6.0         3.0          4.8         1.8 virginica
140          6.9         3.1          5.4         2.1 virginica
141          6.7         3.1          5.6         2.4 virginica
142          6.9         3.1          5.1         2.3 virginica
143          5.8         2.7          5.1         1.9 virginica
144          6.8         3.2          5.9         2.3 virginica
145          6.7         3.3          5.7         2.5 virginica
146          6.7         3.0          5.2         2.3 virginica
147          6.3         2.5          5.0         1.9 virginica
148          6.5         3.0          5.2         2.0 virginica
149          6.2         3.4          5.4         2.3 virginica
150          5.9         3.0          5.1         1.8 virginica

>     split.data = split(data, data[, factor.col])
> split.data
$setosa
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1           5.1         3.5          1.4         0.2  setosa
2           4.9         3.0          1.4         0.2  setosa
3           4.7         3.2          1.3         0.2  setosa
4           4.6         3.1          1.5         0.2  setosa
5           5.0         3.6          1.4         0.2  setosa
6           5.4         3.9          1.7         0.4  setosa
7           4.6         3.4          1.4         0.3  setosa
8           5.0         3.4          1.5         0.2  setosa
9           4.4         2.9          1.4         0.2  setosa
10          4.9         3.1          1.5         0.1  setosa
11          5.4         3.7          1.5         0.2  setosa
12          4.8         3.4          1.6         0.2  setosa
13          4.8         3.0          1.4         0.1  setosa
14          4.3         3.0          1.1         0.1  setosa
15          5.8         4.0          1.2         0.2  setosa
16          5.7         4.4          1.5         0.4  setosa
17          5.4         3.9          1.3         0.4  setosa
18          5.1         3.5          1.4         0.3  setosa
19          5.7         3.8          1.7         0.3  setosa
20          5.1         3.8          1.5         0.3  setosa
21          5.4         3.4          1.7         0.2  setosa
22          5.1         3.7          1.5         0.4  setosa
23          4.6         3.6          1.0         0.2  setosa
24          5.1         3.3          1.7         0.5  setosa
25          4.8         3.4          1.9         0.2  setosa
26          5.0         3.0          1.6         0.2  setosa
27          5.0         3.4          1.6         0.4  setosa
28          5.2         3.5          1.5         0.2  setosa
29          5.2         3.4          1.4         0.2  setosa
30          4.7         3.2          1.6         0.2  setosa
31          4.8         3.1          1.6         0.2  setosa
32          5.4         3.4          1.5         0.4  setosa
33          5.2         4.1          1.5         0.1  setosa
34          5.5         4.2          1.4         0.2  setosa
35          4.9         3.1          1.5         0.2  setosa
36          5.0         3.2          1.2         0.2  setosa
37          5.5         3.5          1.3         0.2  setosa
38          4.9         3.6          1.4         0.1  setosa
39          4.4         3.0          1.3         0.2  setosa
40          5.1         3.4          1.5         0.2  setosa
41          5.0         3.5          1.3         0.3  setosa
42          4.5         2.3          1.3         0.3  setosa
43          4.4         3.2          1.3         0.2  setosa
44          5.0         3.5          1.6         0.6  setosa
45          5.1         3.8          1.9         0.4  setosa
46          4.8         3.0          1.4         0.3  setosa
47          5.1         3.8          1.6         0.2  setosa
48          4.6         3.2          1.4         0.2  setosa
49          5.3         3.7          1.5         0.2  setosa
50          5.0         3.3          1.4         0.2  setosa

$versicolor
    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species
51           7.0         3.2          4.7         1.4 versicolor
52           6.4         3.2          4.5         1.5 versicolor
53           6.9         3.1          4.9         1.5 versicolor
54           5.5         2.3          4.0         1.3 versicolor
55           6.5         2.8          4.6         1.5 versicolor
56           5.7         2.8          4.5         1.3 versicolor
57           6.3         3.3          4.7         1.6 versicolor
58           4.9         2.4          3.3         1.0 versicolor
59           6.6         2.9          4.6         1.3 versicolor
60           5.2         2.7          3.9         1.4 versicolor
61           5.0         2.0          3.5         1.0 versicolor
62           5.9         3.0          4.2         1.5 versicolor
63           6.0         2.2          4.0         1.0 versicolor
64           6.1         2.9          4.7         1.4 versicolor
65           5.6         2.9          3.6         1.3 versicolor
66           6.7         3.1          4.4         1.4 versicolor
67           5.6         3.0          4.5         1.5 versicolor
68           5.8         2.7          4.1         1.0 versicolor
69           6.2         2.2          4.5         1.5 versicolor
70           5.6         2.5          3.9         1.1 versicolor
71           5.9         3.2          4.8         1.8 versicolor
72           6.1         2.8          4.0         1.3 versicolor
73           6.3         2.5          4.9         1.5 versicolor
74           6.1         2.8          4.7         1.2 versicolor
75           6.4         2.9          4.3         1.3 versicolor
76           6.6         3.0          4.4         1.4 versicolor
77           6.8         2.8          4.8         1.4 versicolor
78           6.7         3.0          5.0         1.7 versicolor
79           6.0         2.9          4.5         1.5 versicolor
80           5.7         2.6          3.5         1.0 versicolor
81           5.5         2.4          3.8         1.1 versicolor
82           5.5         2.4          3.7         1.0 versicolor
83           5.8         2.7          3.9         1.2 versicolor
84           6.0         2.7          5.1         1.6 versicolor
85           5.4         3.0          4.5         1.5 versicolor
86           6.0         3.4          4.5         1.6 versicolor
87           6.7         3.1          4.7         1.5 versicolor
88           6.3         2.3          4.4         1.3 versicolor
89           5.6         3.0          4.1         1.3 versicolor
90           5.5         2.5          4.0         1.3 versicolor
91           5.5         2.6          4.4         1.2 versicolor
92           6.1         3.0          4.6         1.4 versicolor
93           5.8         2.6          4.0         1.2 versicolor
94           5.0         2.3          3.3         1.0 versicolor
95           5.6         2.7          4.2         1.3 versicolor
96           5.7         3.0          4.2         1.2 versicolor
97           5.7         2.9          4.2         1.3 versicolor
98           6.2         2.9          4.3         1.3 versicolor
99           5.1         2.5          3.0         1.1 versicolor
100          5.7         2.8          4.1         1.3 versicolor

$virginica
    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species
101          6.3         3.3          6.0         2.5 virginica
102          5.8         2.7          5.1         1.9 virginica
103          7.1         3.0          5.9         2.1 virginica
104          6.3         2.9          5.6         1.8 virginica
105          6.5         3.0          5.8         2.2 virginica
106          7.6         3.0          6.6         2.1 virginica
107          4.9         2.5          4.5         1.7 virginica
108          7.3         2.9          6.3         1.8 virginica
109          6.7         2.5          5.8         1.8 virginica
110          7.2         3.6          6.1         2.5 virginica
111          6.5         3.2          5.1         2.0 virginica
112          6.4         2.7          5.3         1.9 virginica
113          6.8         3.0          5.5         2.1 virginica
114          5.7         2.5          5.0         2.0 virginica
115          5.8         2.8          5.1         2.4 virginica
116          6.4         3.2          5.3         2.3 virginica
117          6.5         3.0          5.5         1.8 virginica
118          7.7         3.8          6.7         2.2 virginica
119          7.7         2.6          6.9         2.3 virginica
120          6.0         2.2          5.0         1.5 virginica
121          6.9         3.2          5.7         2.3 virginica
122          5.6         2.8          4.9         2.0 virginica
123          7.7         2.8          6.7         2.0 virginica
124          6.3         2.7          4.9         1.8 virginica
125          6.7         3.3          5.7         2.1 virginica
126          7.2         3.2          6.0         1.8 virginica
127          6.2         2.8          4.8         1.8 virginica
128          6.1         3.0          4.9         1.8 virginica
129          6.4         2.8          5.6         2.1 virginica
130          7.2         3.0          5.8         1.6 virginica
131          7.4         2.8          6.1         1.9 virginica
132          7.9         3.8          6.4         2.0 virginica
133          6.4         2.8          5.6         2.2 virginica
134          6.3         2.8          5.1         1.5 virginica
135          6.1         2.6          5.6         1.4 virginica
136          7.7         3.0          6.1         2.3 virginica
137          6.3         3.4          5.6         2.4 virginica
138          6.4         3.1          5.5         1.8 virginica
139          6.0         3.0          4.8         1.8 virginica
140          6.9         3.1          5.4         2.1 virginica
141          6.7         3.1          5.6         2.4 virginica
142          6.9         3.1          5.1         2.3 virginica
143          5.8         2.7          5.1         1.9 virginica
144          6.8         3.2          5.9         2.3 virginica
145          6.7         3.3          5.7         2.5 virginica
146          6.7         3.0          5.2         2.3 virginica
147          6.3         2.5          5.0         1.9 virginica
148          6.5         3.0          5.2         2.0 virginica
149          6.2         3.4          5.4         2.3 virginica
150          5.9         3.0          5.1         1.8 virginica

> split.data[1]
$setosa
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1           5.1         3.5          1.4         0.2  setosa
2           4.9         3.0          1.4         0.2  setosa
3           4.7         3.2          1.3         0.2  setosa
4           4.6         3.1          1.5         0.2  setosa
5           5.0         3.6          1.4         0.2  setosa
6           5.4         3.9          1.7         0.4  setosa
7           4.6         3.4          1.4         0.3  setosa
8           5.0         3.4          1.5         0.2  setosa
9           4.4         2.9          1.4         0.2  setosa
10          4.9         3.1          1.5         0.1  setosa
11          5.4         3.7          1.5         0.2  setosa
12          4.8         3.4          1.6         0.2  setosa
13          4.8         3.0          1.4         0.1  setosa
14          4.3         3.0          1.1         0.1  setosa
15          5.8         4.0          1.2         0.2  setosa
16          5.7         4.4          1.5         0.4  setosa
17          5.4         3.9          1.3         0.4  setosa
18          5.1         3.5          1.4         0.3  setosa
19          5.7         3.8          1.7         0.3  setosa
20          5.1         3.8          1.5         0.3  setosa
21          5.4         3.4          1.7         0.2  setosa
22          5.1         3.7          1.5         0.4  setosa
23          4.6         3.6          1.0         0.2  setosa
24          5.1         3.3          1.7         0.5  setosa
25          4.8         3.4          1.9         0.2  setosa
26          5.0         3.0          1.6         0.2  setosa
27          5.0         3.4          1.6         0.4  setosa
28          5.2         3.5          1.5         0.2  setosa
29          5.2         3.4          1.4         0.2  setosa
30          4.7         3.2          1.6         0.2  setosa
31          4.8         3.1          1.6         0.2  setosa
32          5.4         3.4          1.5         0.4  setosa
33          5.2         4.1          1.5         0.1  setosa
34          5.5         4.2          1.4         0.2  setosa
35          4.9         3.1          1.5         0.2  setosa
36          5.0         3.2          1.2         0.2  setosa
37          5.5         3.5          1.3         0.2  setosa
38          4.9         3.6          1.4         0.1  setosa
39          4.4         3.0          1.3         0.2  setosa
40          5.1         3.4          1.5         0.2  setosa
41          5.0         3.5          1.3         0.3  setosa
42          4.5         2.3          1.3         0.3  setosa
43          4.4         3.2          1.3         0.2  setosa
44          5.0         3.5          1.6         0.6  setosa
45          5.1         3.8          1.9         0.4  setosa
46          4.8         3.0          1.4         0.3  setosa
47          5.1         3.8          1.6         0.2  setosa
48          4.6         3.2          1.4         0.2  setosa
49          5.3         3.7          1.5         0.2  setosa
50          5.0         3.3          1.4         0.2  setosa

> split.data[1][, -factor.col]
Error in split.data[1][, -factor.col] : incorrect number of dimensions
> split.data[1]
$setosa
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1           5.1         3.5          1.4         0.2  setosa
2           4.9         3.0          1.4         0.2  setosa
3           4.7         3.2          1.3         0.2  setosa
4           4.6         3.1          1.5         0.2  setosa
5           5.0         3.6          1.4         0.2  setosa
6           5.4         3.9          1.7         0.4  setosa
7           4.6         3.4          1.4         0.3  setosa
8           5.0         3.4          1.5         0.2  setosa
9           4.4         2.9          1.4         0.2  setosa
10          4.9         3.1          1.5         0.1  setosa
11          5.4         3.7          1.5         0.2  setosa
12          4.8         3.4          1.6         0.2  setosa
13          4.8         3.0          1.4         0.1  setosa
14          4.3         3.0          1.1         0.1  setosa
15          5.8         4.0          1.2         0.2  setosa
16          5.7         4.4          1.5         0.4  setosa
17          5.4         3.9          1.3         0.4  setosa
18          5.1         3.5          1.4         0.3  setosa
19          5.7         3.8          1.7         0.3  setosa
20          5.1         3.8          1.5         0.3  setosa
21          5.4         3.4          1.7         0.2  setosa
22          5.1         3.7          1.5         0.4  setosa
23          4.6         3.6          1.0         0.2  setosa
24          5.1         3.3          1.7         0.5  setosa
25          4.8         3.4          1.9         0.2  setosa
26          5.0         3.0          1.6         0.2  setosa
27          5.0         3.4          1.6         0.4  setosa
28          5.2         3.5          1.5         0.2  setosa
29          5.2         3.4          1.4         0.2  setosa
30          4.7         3.2          1.6         0.2  setosa
31          4.8         3.1          1.6         0.2  setosa
32          5.4         3.4          1.5         0.4  setosa
33          5.2         4.1          1.5         0.1  setosa
34          5.5         4.2          1.4         0.2  setosa
35          4.9         3.1          1.5         0.2  setosa
36          5.0         3.2          1.2         0.2  setosa
37          5.5         3.5          1.3         0.2  setosa
38          4.9         3.6          1.4         0.1  setosa
39          4.4         3.0          1.3         0.2  setosa
40          5.1         3.4          1.5         0.2  setosa
41          5.0         3.5          1.3         0.3  setosa
42          4.5         2.3          1.3         0.3  setosa
43          4.4         3.2          1.3         0.2  setosa
44          5.0         3.5          1.6         0.6  setosa
45          5.1         3.8          1.9         0.4  setosa
46          4.8         3.0          1.4         0.3  setosa
47          5.1         3.8          1.6         0.2  setosa
48          4.6         3.2          1.4         0.2  setosa
49          5.3         3.7          1.5         0.2  setosa
50          5.0         3.3          1.4         0.2  setosa

> class(split.data[1])
[1] "list"
> split.data[[1]]
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1           5.1         3.5          1.4         0.2  setosa
2           4.9         3.0          1.4         0.2  setosa
3           4.7         3.2          1.3         0.2  setosa
4           4.6         3.1          1.5         0.2  setosa
5           5.0         3.6          1.4         0.2  setosa
6           5.4         3.9          1.7         0.4  setosa
7           4.6         3.4          1.4         0.3  setosa
8           5.0         3.4          1.5         0.2  setosa
9           4.4         2.9          1.4         0.2  setosa
10          4.9         3.1          1.5         0.1  setosa
11          5.4         3.7          1.5         0.2  setosa
12          4.8         3.4          1.6         0.2  setosa
13          4.8         3.0          1.4         0.1  setosa
14          4.3         3.0          1.1         0.1  setosa
15          5.8         4.0          1.2         0.2  setosa
16          5.7         4.4          1.5         0.4  setosa
17          5.4         3.9          1.3         0.4  setosa
18          5.1         3.5          1.4         0.3  setosa
19          5.7         3.8          1.7         0.3  setosa
20          5.1         3.8          1.5         0.3  setosa
21          5.4         3.4          1.7         0.2  setosa
22          5.1         3.7          1.5         0.4  setosa
23          4.6         3.6          1.0         0.2  setosa
24          5.1         3.3          1.7         0.5  setosa
25          4.8         3.4          1.9         0.2  setosa
26          5.0         3.0          1.6         0.2  setosa
27          5.0         3.4          1.6         0.4  setosa
28          5.2         3.5          1.5         0.2  setosa
29          5.2         3.4          1.4         0.2  setosa
30          4.7         3.2          1.6         0.2  setosa
31          4.8         3.1          1.6         0.2  setosa
32          5.4         3.4          1.5         0.4  setosa
33          5.2         4.1          1.5         0.1  setosa
34          5.5         4.2          1.4         0.2  setosa
35          4.9         3.1          1.5         0.2  setosa
36          5.0         3.2          1.2         0.2  setosa
37          5.5         3.5          1.3         0.2  setosa
38          4.9         3.6          1.4         0.1  setosa
39          4.4         3.0          1.3         0.2  setosa
40          5.1         3.4          1.5         0.2  setosa
41          5.0         3.5          1.3         0.3  setosa
42          4.5         2.3          1.3         0.3  setosa
43          4.4         3.2          1.3         0.2  setosa
44          5.0         3.5          1.6         0.6  setosa
45          5.1         3.8          1.9         0.4  setosa
46          4.8         3.0          1.4         0.3  setosa
47          5.1         3.8          1.6         0.2  setosa
48          4.6         3.2          1.4         0.2  setosa
49          5.3         3.7          1.5         0.2  setosa
50          5.0         3.3          1.4         0.2  setosa
> class(split.data[[1]][, -factor.col])
[1] "data.frame"
> split.data[[1]][, -factor.col]
[1] "data.frame"
> num = split.data[[1]][, -factor.col]
   Sepal.Length Sepal.Width Petal.Length Petal.Width
1           5.1         3.5          1.4         0.2
2           4.9         3.0          1.4         0.2
3           4.7         3.2          1.3         0.2
4           4.6         3.1          1.5         0.2
5           5.0         3.6          1.4         0.2
6           5.4         3.9          1.7         0.4
7           4.6         3.4          1.4         0.3
8           5.0         3.4          1.5         0.2
9           4.4         2.9          1.4         0.2
10          4.9         3.1          1.5         0.1
11          5.4         3.7          1.5         0.2
12          4.8         3.4          1.6         0.2
13          4.8         3.0          1.4         0.1
14          4.3         3.0          1.1         0.1
15          5.8         4.0          1.2         0.2
16          5.7         4.4          1.5         0.4
17          5.4         3.9          1.3         0.4
18          5.1         3.5          1.4         0.3
19          5.7         3.8          1.7         0.3
20          5.1         3.8          1.5         0.3
21          5.4         3.4          1.7         0.2
22          5.1         3.7          1.5         0.4
23          4.6         3.6          1.0         0.2
24          5.1         3.3          1.7         0.5
25          4.8         3.4          1.9         0.2
26          5.0         3.0          1.6         0.2
27          5.0         3.4          1.6         0.4
28          5.2         3.5          1.5         0.2
29          5.2         3.4          1.4         0.2
30          4.7         3.2          1.6         0.2
31          4.8         3.1          1.6         0.2
32          5.4         3.4          1.5         0.4
33          5.2         4.1          1.5         0.1
34          5.5         4.2          1.4         0.2
35          4.9         3.1          1.5         0.2
36          5.0         3.2          1.2         0.2
37          5.5         3.5          1.3         0.2
38          4.9         3.6          1.4         0.1
39          4.4         3.0          1.3         0.2
40          5.1         3.4          1.5         0.2
41          5.0         3.5          1.3         0.3
42          4.5         2.3          1.3         0.3
43          4.4         3.2          1.3         0.2
44          5.0         3.5          1.6         0.6
45          5.1         3.8          1.9         0.4
46          4.8         3.0          1.4         0.3
47          5.1         3.8          1.6         0.2
48          4.6         3.2          1.4         0.2
49          5.3         3.7          1.5         0.2
50          5.0         3.3          1.4         0.2
> num = split.data[[1]][, -factor.col]
> num
   Sepal.Length Sepal.Width Petal.Length Petal.Width
1           5.1         3.5          1.4         0.2
2           4.9         3.0          1.4         0.2
3           4.7         3.2          1.3         0.2
4           4.6         3.1          1.5         0.2
5           5.0         3.6          1.4         0.2
6           5.4         3.9          1.7         0.4
7           4.6         3.4          1.4         0.3
8           5.0         3.4          1.5         0.2
9           4.4         2.9          1.4         0.2
10          4.9         3.1          1.5         0.1
11          5.4         3.7          1.5         0.2
12          4.8         3.4          1.6         0.2
13          4.8         3.0          1.4         0.1
14          4.3         3.0          1.1         0.1
15          5.8         4.0          1.2         0.2
16          5.7         4.4          1.5         0.4
17          5.4         3.9          1.3         0.4
18          5.1         3.5          1.4         0.3
19          5.7         3.8          1.7         0.3
20          5.1         3.8          1.5         0.3
21          5.4         3.4          1.7         0.2
22          5.1         3.7          1.5         0.4
23          4.6         3.6          1.0         0.2
24          5.1         3.3          1.7         0.5
25          4.8         3.4          1.9         0.2
26          5.0         3.0          1.6         0.2
27          5.0         3.4          1.6         0.4
28          5.2         3.5          1.5         0.2
29          5.2         3.4          1.4         0.2
30          4.7         3.2          1.6         0.2
31          4.8         3.1          1.6         0.2
32          5.4         3.4          1.5         0.4
33          5.2         4.1          1.5         0.1
34          5.5         4.2          1.4         0.2
35          4.9         3.1          1.5         0.2
36          5.0         3.2          1.2         0.2
37          5.5         3.5          1.3         0.2
38          4.9         3.6          1.4         0.1
39          4.4         3.0          1.3         0.2
40          5.1         3.4          1.5         0.2
41          5.0         3.5          1.3         0.3
42          4.5         2.3          1.3         0.3
43          4.4         3.2          1.3         0.2
44          5.0         3.5          1.6         0.6
45          5.1         3.8          1.9         0.4
46          4.8         3.0          1.4         0.3
47          5.1         3.8          1.6         0.2
48          4.6         3.2          1.4         0.2
49          5.3         3.7          1.5         0.2
50          5.0         3.3          1.4         0.2
> apply(num, 2, mean)
Sepal.Length  Sepal.Width Petal.Length  Petal.Width 
       5.006        3.428        1.462        0.246 
> mean.by.level.t
           Sepal.Length Sepal.Width Petal.Length Petal.Width
setosa            5.006       3.428        1.462       0.246
versicolor        5.936       2.770        4.260       1.326
virginica         6.588       2.974        5.552       2.026
> dim(split.data)
NULL
> length(split.data)
[1] 3
> class(split.data)
[1] "list"
> sapply(split.data, print)
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1           5.1         3.5          1.4         0.2  setosa
2           4.9         3.0          1.4         0.2  setosa
3           4.7         3.2          1.3         0.2  setosa
4           4.6         3.1          1.5         0.2  setosa
5           5.0         3.6          1.4         0.2  setosa
6           5.4         3.9          1.7         0.4  setosa
7           4.6         3.4          1.4         0.3  setosa
8           5.0         3.4          1.5         0.2  setosa
9           4.4         2.9          1.4         0.2  setosa
10          4.9         3.1          1.5         0.1  setosa
11          5.4         3.7          1.5         0.2  setosa
12          4.8         3.4          1.6         0.2  setosa
13          4.8         3.0          1.4         0.1  setosa
14          4.3         3.0          1.1         0.1  setosa
15          5.8         4.0          1.2         0.2  setosa
16          5.7         4.4          1.5         0.4  setosa
17          5.4         3.9          1.3         0.4  setosa
18          5.1         3.5          1.4         0.3  setosa
19          5.7         3.8          1.7         0.3  setosa
20          5.1         3.8          1.5         0.3  setosa
21          5.4         3.4          1.7         0.2  setosa
22          5.1         3.7          1.5         0.4  setosa
23          4.6         3.6          1.0         0.2  setosa
24          5.1         3.3          1.7         0.5  setosa
25          4.8         3.4          1.9         0.2  setosa
26          5.0         3.0          1.6         0.2  setosa
27          5.0         3.4          1.6         0.4  setosa
28          5.2         3.5          1.5         0.2  setosa
29          5.2         3.4          1.4         0.2  setosa
30          4.7         3.2          1.6         0.2  setosa
31          4.8         3.1          1.6         0.2  setosa
32          5.4         3.4          1.5         0.4  setosa
33          5.2         4.1          1.5         0.1  setosa
34          5.5         4.2          1.4         0.2  setosa
35          4.9         3.1          1.5         0.2  setosa
36          5.0         3.2          1.2         0.2  setosa
37          5.5         3.5          1.3         0.2  setosa
38          4.9         3.6          1.4         0.1  setosa
39          4.4         3.0          1.3         0.2  setosa
40          5.1         3.4          1.5         0.2  setosa
41          5.0         3.5          1.3         0.3  setosa
42          4.5         2.3          1.3         0.3  setosa
43          4.4         3.2          1.3         0.2  setosa
44          5.0         3.5          1.6         0.6  setosa
45          5.1         3.8          1.9         0.4  setosa
46          4.8         3.0          1.4         0.3  setosa
47          5.1         3.8          1.6         0.2  setosa
48          4.6         3.2          1.4         0.2  setosa
49          5.3         3.7          1.5         0.2  setosa
50          5.0         3.3          1.4         0.2  setosa
    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species
51           7.0         3.2          4.7         1.4 versicolor
52           6.4         3.2          4.5         1.5 versicolor
53           6.9         3.1          4.9         1.5 versicolor
54           5.5         2.3          4.0         1.3 versicolor
55           6.5         2.8          4.6         1.5 versicolor
56           5.7         2.8          4.5         1.3 versicolor
57           6.3         3.3          4.7         1.6 versicolor
58           4.9         2.4          3.3         1.0 versicolor
59           6.6         2.9          4.6         1.3 versicolor
60           5.2         2.7          3.9         1.4 versicolor
61           5.0         2.0          3.5         1.0 versicolor
62           5.9         3.0          4.2         1.5 versicolor
63           6.0         2.2          4.0         1.0 versicolor
64           6.1         2.9          4.7         1.4 versicolor
65           5.6         2.9          3.6         1.3 versicolor
66           6.7         3.1          4.4         1.4 versicolor
67           5.6         3.0          4.5         1.5 versicolor
68           5.8         2.7          4.1         1.0 versicolor
69           6.2         2.2          4.5         1.5 versicolor
70           5.6         2.5          3.9         1.1 versicolor
71           5.9         3.2          4.8         1.8 versicolor
72           6.1         2.8          4.0         1.3 versicolor
73           6.3         2.5          4.9         1.5 versicolor
74           6.1         2.8          4.7         1.2 versicolor
75           6.4         2.9          4.3         1.3 versicolor
76           6.6         3.0          4.4         1.4 versicolor
77           6.8         2.8          4.8         1.4 versicolor
78           6.7         3.0          5.0         1.7 versicolor
79           6.0         2.9          4.5         1.5 versicolor
80           5.7         2.6          3.5         1.0 versicolor
81           5.5         2.4          3.8         1.1 versicolor
82           5.5         2.4          3.7         1.0 versicolor
83           5.8         2.7          3.9         1.2 versicolor
84           6.0         2.7          5.1         1.6 versicolor
85           5.4         3.0          4.5         1.5 versicolor
86           6.0         3.4          4.5         1.6 versicolor
87           6.7         3.1          4.7         1.5 versicolor
88           6.3         2.3          4.4         1.3 versicolor
89           5.6         3.0          4.1         1.3 versicolor
90           5.5         2.5          4.0         1.3 versicolor
91           5.5         2.6          4.4         1.2 versicolor
92           6.1         3.0          4.6         1.4 versicolor
93           5.8         2.6          4.0         1.2 versicolor
94           5.0         2.3          3.3         1.0 versicolor
95           5.6         2.7          4.2         1.3 versicolor
96           5.7         3.0          4.2         1.2 versicolor
97           5.7         2.9          4.2         1.3 versicolor
98           6.2         2.9          4.3         1.3 versicolor
99           5.1         2.5          3.0         1.1 versicolor
100          5.7         2.8          4.1         1.3 versicolor
    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species
101          6.3         3.3          6.0         2.5 virginica
102          5.8         2.7          5.1         1.9 virginica
103          7.1         3.0          5.9         2.1 virginica
104          6.3         2.9          5.6         1.8 virginica
105          6.5         3.0          5.8         2.2 virginica
106          7.6         3.0          6.6         2.1 virginica
107          4.9         2.5          4.5         1.7 virginica
108          7.3         2.9          6.3         1.8 virginica
109          6.7         2.5          5.8         1.8 virginica
110          7.2         3.6          6.1         2.5 virginica
111          6.5         3.2          5.1         2.0 virginica
112          6.4         2.7          5.3         1.9 virginica
113          6.8         3.0          5.5         2.1 virginica
114          5.7         2.5          5.0         2.0 virginica
115          5.8         2.8          5.1         2.4 virginica
116          6.4         3.2          5.3         2.3 virginica
117          6.5         3.0          5.5         1.8 virginica
118          7.7         3.8          6.7         2.2 virginica
119          7.7         2.6          6.9         2.3 virginica
120          6.0         2.2          5.0         1.5 virginica
121          6.9         3.2          5.7         2.3 virginica
122          5.6         2.8          4.9         2.0 virginica
123          7.7         2.8          6.7         2.0 virginica
124          6.3         2.7          4.9         1.8 virginica
125          6.7         3.3          5.7         2.1 virginica
126          7.2         3.2          6.0         1.8 virginica
127          6.2         2.8          4.8         1.8 virginica
128          6.1         3.0          4.9         1.8 virginica
129          6.4         2.8          5.6         2.1 virginica
130          7.2         3.0          5.8         1.6 virginica
131          7.4         2.8          6.1         1.9 virginica
132          7.9         3.8          6.4         2.0 virginica
133          6.4         2.8          5.6         2.2 virginica
134          6.3         2.8          5.1         1.5 virginica
135          6.1         2.6          5.6         1.4 virginica
136          7.7         3.0          6.1         2.3 virginica
137          6.3         3.4          5.6         2.4 virginica
138          6.4         3.1          5.5         1.8 virginica
139          6.0         3.0          4.8         1.8 virginica
140          6.9         3.1          5.4         2.1 virginica
141          6.7         3.1          5.6         2.4 virginica
142          6.9         3.1          5.1         2.3 virginica
143          5.8         2.7          5.1         1.9 virginica
144          6.8         3.2          5.9         2.3 virginica
145          6.7         3.3          5.7         2.5 virginica
146          6.7         3.0          5.2         2.3 virginica
147          6.3         2.5          5.0         1.9 virginica
148          6.5         3.0          5.2         2.0 virginica
149          6.2         3.4          5.4         2.3 virginica
150          5.9         3.0          5.1         1.8 virginica
             setosa     versicolor virginica 
Sepal.Length Numeric,50 Numeric,50 Numeric,50
Sepal.Width  Numeric,50 Numeric,50 Numeric,50
Petal.Length Numeric,50 Numeric,50 Numeric,50
Petal.Width  Numeric,50 Numeric,50 Numeric,50
Species      factor,50  factor,50  factor,50 
>     idcs = seq(1:length(split.data))
> level.means = sapply(idcs, function(x) {
+         numeric.data = split.data[[x]][, -factor.col]
+         return(numeric.data, 2, mean)
+     }
+ level.means
Error: unexpected symbol in:
"    }
level.means"
>     idcs = seq(1:length(split.data))
> level.means = sapply(idcs, function(x) {
+         numeric.data = split.data[[x]][, -factor.col]
+         return(numeric.data, 2, mean)
+     })
Error in return(numeric.data, 2, mean) (from #3) : 
  multi-argument returns are not permitted
> level.means = sapply(idcs, function(x) {
+         numeric.data = split.data[[x]][, -factor.col]
+         return(apply(numeric.data, 2, mean))
+     })
> level.means
              [,1]  [,2]  [,3]
Sepal.Length 5.006 5.936 6.588
Sepal.Width  3.428 2.770 2.974
Petal.Length 1.462 4.260 5.552
Petal.Width  0.246 1.326 2.026
> mean.by.level.t
           Sepal.Length Sepal.Width Petal.Length Petal.Width
setosa            5.006       3.428        1.462       0.246
versicolor        5.936       2.770        4.260       1.326
virginica         6.588       2.974        5.552       2.026
> class(mean.by.level.t)
[1] "matrix"
> class(level.means)
[1] "matrix"
> t(level.means)
     Sepal.Length Sepal.Width Petal.Length Petal.Width
[1,]        5.006       3.428        1.462       0.246
[2,]        5.936       2.770        4.260       1.326
[3,]        6.588       2.974        5.552       2.026
> level.means = t(level.means)
> level.means
     Sepal.Length Sepal.Width Petal.Length Petal.Width
[1,]        5.006       3.428        1.462       0.246
[2,]        5.936       2.770        4.260       1.326
[3,]        6.588       2.974        5.552       2.026
> rownames(level.means, data.levels)
Error in if (do.NULL) NULL else if (nr > 0L) paste0(prefix, seq_len(nr)) else character() : 
  argument is not interpretable as logical
In addition: Warning message:
In if (do.NULL) NULL else if (nr > 0L) paste0(prefix, seq_len(nr)) else character() :
  the condition has length > 1 and only the first element will be used
> ls()
 [1] "data"             "data.levels"      "errMsg"           "factor.col"      
 [5] "idcs"             "level.means"      "mean.by.level.t"  "num"             
 [9] "split.data"       "std.level.diff.t" "vec"             
> data.levels
[1] "setosa"     "versicolor" "virginica" 
> level.means
     Sepal.Length Sepal.Width Petal.Length Petal.Width
[1,]        5.006       3.428        1.462       0.246
[2,]        5.936       2.770        4.260       1.326
[3,]        6.588       2.974        5.552       2.026
> rownames(level.means)
NULL
> rownames(level.means) = data.levels
> level.means
           Sepal.Length Sepal.Width Petal.Length Petal.Width
setosa            5.006       3.428        1.462       0.246
versicolor        5.936       2.770        4.260       1.326
virginica         6.588       2.974        5.552       2.026
> 
+ . + 
> meanByLevel <- function(data) {
+ 
+     factor.col = which(apply(data, 2, function(col) {
+         return(suppressWarnings(is.na(as.numeric(col)))[1])
+     }))
+     split.data = split(data, data[, factor.col])
+     idcs = seq(1:length(split.data))
+     level.means = sapply(idcs, function(x)  .... [TRUNCATED] 
> tryCatch(checkIdentical(mean.by.level.t, meanByLevel(iris)), error=function(err)
+          errMsg(err))
[1] TRUE
> std.level.diff.t
Error: object 'std.leve.diff.t' not found
> std.level.diff.t
           Sepal.Length Sepal.Width Petal.Length Petal.Width
setosa        1.0111914   0.8504137    1.3006301   1.2507035
versicolor    0.1119073   0.6592236    0.2843712   0.1661774
virginica     0.8992841   0.1911901    1.0162589   1.0845261
> class(iris)
[1] "data.frame"
> level.means = meanByLevel(iris)
> level.means
           Sepal.Length Sepal.Width Petal.Length Petal.Width
setosa            5.006       3.428        1.462       0.246
versicolor        5.936       2.770        4.260       1.326
virginica         6.588       2.974        5.552       2.026
> level.means[1, ]
Sepal.Length  Sepal.Width Petal.Length  Petal.Width 
       5.006        3.428        1.462        0.246 
> df = data.frame(c(1, 2, 3), c(2, 3, 4))
> df
  c.1..2..3. c.2..3..4.
1          1          2
2          2          3
3          3          4
> a = c(1, 2, 3)
> b = c(2, 3, 4)
> df = data.frame(a, b)
> df
  a b
1 1 2
2 2 3
3 3 4
> ?data.frame
> length = c(12, 4, 14)
> width = c(12, 55, 23)
> names = c('box', 'torque', 'pop')
> df = data.frame(row.names = names, length, width)
> df
  rownames length width
1      box     12    12
2   torque      4    55
3      pop     14    23
> df = data.frame(row.names = names, length, width)
> df
       length width
box        12    12
torque      4    55
pop        14    23
> apply(df, 2, mean)
length  width 
    10     30 
> numeric.data = data[, -factor.col]
>     level.means = meanByLevel(data);
>     all.means = apply(numeric.data, 2, mean)
>     all.sd = apply(numeric.data, 2, sd)
> numeric.data
    Sepal.Length Sepal.Width Petal.Length Petal.Width
1            5.1         3.5          1.4         0.2
2            4.9         3.0          1.4         0.2
3            4.7         3.2          1.3         0.2
4            4.6         3.1          1.5         0.2
5            5.0         3.6          1.4         0.2
6            5.4         3.9          1.7         0.4
7            4.6         3.4          1.4         0.3
8            5.0         3.4          1.5         0.2
9            4.4         2.9          1.4         0.2
10           4.9         3.1          1.5         0.1
11           5.4         3.7          1.5         0.2
12           4.8         3.4          1.6         0.2
13           4.8         3.0          1.4         0.1
14           4.3         3.0          1.1         0.1
15           5.8         4.0          1.2         0.2
16           5.7         4.4          1.5         0.4
17           5.4         3.9          1.3         0.4
18           5.1         3.5          1.4         0.3
19           5.7         3.8          1.7         0.3
20           5.1         3.8          1.5         0.3
21           5.4         3.4          1.7         0.2
22           5.1         3.7          1.5         0.4
23           4.6         3.6          1.0         0.2
24           5.1         3.3          1.7         0.5
25           4.8         3.4          1.9         0.2
26           5.0         3.0          1.6         0.2
27           5.0         3.4          1.6         0.4
28           5.2         3.5          1.5         0.2
29           5.2         3.4          1.4         0.2
30           4.7         3.2          1.6         0.2
31           4.8         3.1          1.6         0.2
32           5.4         3.4          1.5         0.4
33           5.2         4.1          1.5         0.1
34           5.5         4.2          1.4         0.2
35           4.9         3.1          1.5         0.2
36           5.0         3.2          1.2         0.2
37           5.5         3.5          1.3         0.2
38           4.9         3.6          1.4         0.1
39           4.4         3.0          1.3         0.2
40           5.1         3.4          1.5         0.2
41           5.0         3.5          1.3         0.3
42           4.5         2.3          1.3         0.3
43           4.4         3.2          1.3         0.2
44           5.0         3.5          1.6         0.6
45           5.1         3.8          1.9         0.4
46           4.8         3.0          1.4         0.3
47           5.1         3.8          1.6         0.2
48           4.6         3.2          1.4         0.2
49           5.3         3.7          1.5         0.2
50           5.0         3.3          1.4         0.2
51           7.0         3.2          4.7         1.4
52           6.4         3.2          4.5         1.5
53           6.9         3.1          4.9         1.5
54           5.5         2.3          4.0         1.3
55           6.5         2.8          4.6         1.5
56           5.7         2.8          4.5         1.3
57           6.3         3.3          4.7         1.6
58           4.9         2.4          3.3         1.0
59           6.6         2.9          4.6         1.3
60           5.2         2.7          3.9         1.4
61           5.0         2.0          3.5         1.0
62           5.9         3.0          4.2         1.5
63           6.0         2.2          4.0         1.0
64           6.1         2.9          4.7         1.4
65           5.6         2.9          3.6         1.3
66           6.7         3.1          4.4         1.4
67           5.6         3.0          4.5         1.5
68           5.8         2.7          4.1         1.0
69           6.2         2.2          4.5         1.5
70           5.6         2.5          3.9         1.1
71           5.9         3.2          4.8         1.8
72           6.1         2.8          4.0         1.3
73           6.3         2.5          4.9         1.5
74           6.1         2.8          4.7         1.2
75           6.4         2.9          4.3         1.3
76           6.6         3.0          4.4         1.4
77           6.8         2.8          4.8         1.4
78           6.7         3.0          5.0         1.7
79           6.0         2.9          4.5         1.5
80           5.7         2.6          3.5         1.0
81           5.5         2.4          3.8         1.1
82           5.5         2.4          3.7         1.0
83           5.8         2.7          3.9         1.2
84           6.0         2.7          5.1         1.6
85           5.4         3.0          4.5         1.5
86           6.0         3.4          4.5         1.6
87           6.7         3.1          4.7         1.5
88           6.3         2.3          4.4         1.3
89           5.6         3.0          4.1         1.3
90           5.5         2.5          4.0         1.3
91           5.5         2.6          4.4         1.2
92           6.1         3.0          4.6         1.4
93           5.8         2.6          4.0         1.2
94           5.0         2.3          3.3         1.0
95           5.6         2.7          4.2         1.3
96           5.7         3.0          4.2         1.2
97           5.7         2.9          4.2         1.3
98           6.2         2.9          4.3         1.3
99           5.1         2.5          3.0         1.1
100          5.7         2.8          4.1         1.3
101          6.3         3.3          6.0         2.5
102          5.8         2.7          5.1         1.9
103          7.1         3.0          5.9         2.1
104          6.3         2.9          5.6         1.8
105          6.5         3.0          5.8         2.2
106          7.6         3.0          6.6         2.1
107          4.9         2.5          4.5         1.7
108          7.3         2.9          6.3         1.8
109          6.7         2.5          5.8         1.8
110          7.2         3.6          6.1         2.5
111          6.5         3.2          5.1         2.0
112          6.4         2.7          5.3         1.9
113          6.8         3.0          5.5         2.1
114          5.7         2.5          5.0         2.0
115          5.8         2.8          5.1         2.4
116          6.4         3.2          5.3         2.3
117          6.5         3.0          5.5         1.8
118          7.7         3.8          6.7         2.2
119          7.7         2.6          6.9         2.3
120          6.0         2.2          5.0         1.5
121          6.9         3.2          5.7         2.3
122          5.6         2.8          4.9         2.0
123          7.7         2.8          6.7         2.0
124          6.3         2.7          4.9         1.8
125          6.7         3.3          5.7         2.1
126          7.2         3.2          6.0         1.8
127          6.2         2.8          4.8         1.8
128          6.1         3.0          4.9         1.8
129          6.4         2.8          5.6         2.1
130          7.2         3.0          5.8         1.6
131          7.4         2.8          6.1         1.9
132          7.9         3.8          6.4         2.0
133          6.4         2.8          5.6         2.2
134          6.3         2.8          5.1         1.5
135          6.1         2.6          5.6         1.4
136          7.7         3.0          6.1         2.3
137          6.3         3.4          5.6         2.4
138          6.4         3.1          5.5         1.8
139          6.0         3.0          4.8         1.8
140          6.9         3.1          5.4         2.1
141          6.7         3.1          5.6         2.4
142          6.9         3.1          5.1         2.3
143          5.8         2.7          5.1         1.9
144          6.8         3.2          5.9         2.3
145          6.7         3.3          5.7         2.5
146          6.7         3.0          5.2         2.3
147          6.3         2.5          5.0         1.9
148          6.5         3.0          5.2         2.0
149          6.2         3.4          5.4         2.3
150          5.9         3.0          5.1         1.8
> level.means
           Sepal.Length Sepal.Width Petal.Length Petal.Width
setosa            5.006       3.428        1.462       0.246
versicolor        5.936       2.770        4.260       1.326
virginica         6.588       2.974        5.552       2.026
> all.means
Sepal.Length  Sepal.Width Petal.Length  Petal.Width 
    5.843333     3.057333     3.758000     1.199333 
> all.sd
Sepal.Length  Sepal.Width Petal.Length  Petal.Width 
   0.8280661    0.4358663    1.7652982    0.7622377 
> 
+ . + 
> stdLevelDiff <- function(data) {
+     factor.col = which(apply(data, 2, function(col) {
+         return(suppressWarnings(is.na(as.numeric(col)))[1])
+     }))
+     numeric.data = data[, -factor.col]
+     level.means = meanByLevel(data);
+     all.means = apply(numeric.data, 2, mean)
+     all. .... [TRUNCATED] 
> tryCatch(checkIdentical(std.level.diff.t, abs(stdLevelDiff(iris))),
+          error=function(err) errMsg(err))
<simpleError in checkIdentical(std.level.diff.t, abs(stdLevelDiff(iris))): FALSE >
> numeric.data = data[, -factor.col]
>     level.means = meanByLevel(data);
>     all.means = apply(numeric.data, 2, mean)
>     all.sd = apply(numeric.data, 2, sd)
>     level.diff = apply(level.means, 1, function(row) {
+         return((row + all.means) / all.sd)
+     })
> level.diff
                setosa versicolor virginica
Sepal.Length 13.102013  14.225112 15.012489
Sepal.Width  14.879181  13.369544 13.837577
Petal.Length  2.957007   4.542009  5.273896
Petal.Width   1.896171   3.313052  4.231401
> std.level.diff.t
           Sepal.Length Sepal.Width Petal.Length Petal.Width
setosa        1.0111914   0.8504137    1.3006301   1.2507035
versicolor    0.1119073   0.6592236    0.2843712   0.1661774
virginica     0.8992841   0.1911901    1.0162589   1.0845261
> 
+ . + 
> stdLevelDiff <- function(data) {
+     factor.col = which(apply(data, 2, function(col) {
+         return(suppressWarnings(is.na(as.numeric(col)))[1])
+     }))
+     numeric.data = data[, -factor.col]
+     level.means = meanByLevel(data);
+     all.means = apply(numeric.data, 2, mean)
+     all. .... [TRUNCATED] 
> tryCatch(checkIdentical(std.level.diff.t, abs(stdLevelDiff(iris))),
+          error=function(err) errMsg(err))
<simpleError in checkIdentical(std.level.diff.t, abs(stdLevelDiff(iris))): FALSE >
> level.diff = apply(level.means, 1, function(row) {
+         return((row - all.means) / all.sd)
+     })
>     return(level.diff)
Error: no function to return from, jumping to top level
> level.diff = apply(level.means, 1, function(row) {
+         return((row - all.means) / all.sd)
+     })
> level.diff
                 setosa versicolor  virginica
Sepal.Length -1.0111914  0.1119073  0.8992841
Sepal.Width   0.8504137 -0.6592236 -0.1911901
Petal.Length -1.3006301  0.2843712  1.0162589
Petal.Width  -1.2507035  0.1661774  1.0845261
> level.diff = apply(level.means, 1, function(row) {
+         return((all.means - row) / all.sd)
+     })
> level.diff
                 setosa versicolor  virginica
Sepal.Length  1.0111914 -0.1119073 -0.8992841
Sepal.Width  -0.8504137  0.6592236  0.1911901
Petal.Length  1.3006301 -0.2843712 -1.0162589
Petal.Width   1.2507035 -0.1661774 -1.0845261
> level.diff = apply(level.means, 1, function(row) {
+         return((row - all.means) / all.sd)
+     })
>     level.diff = t(level.diff)
> level.diff
           Sepal.Length Sepal.Width Petal.Length Petal.Width
setosa       -1.0111914   0.8504137   -1.3006301  -1.2507035
versicolor    0.1119073  -0.6592236    0.2843712   0.1661774
virginica     0.8992841  -0.1911901    1.0162589   1.0845261
> std.level.diff.t
Error: object 'std.leve.diff.t' not found
> std.level.diff.t
           Sepal.Length Sepal.Width Petal.Length Petal.Width
setosa        1.0111914   0.8504137    1.3006301   1.2507035
versicolor    0.1119073   0.6592236    0.2843712   0.1661774
virginica     0.8992841   0.1911901    1.0162589   1.0845261
> 
+ . + 
> stdLevelDiff <- function(data) {
+     factor.col = which(apply(data, 2, function(col) {
+         return(suppressWarnings(is.na(as.numeric(col)))[1])
+     }))
+     numeric.data = data[, -factor.col]
+     level.means = meanByLevel(data);
+     all.means = apply(numeric.data, 2, mean)
+     all. .... [TRUNCATED] 
> tryCatch(checkIdentical(std.level.diff.t, abs(stdLevelDiff(iris))),
+          error=function(err) errMsg(err))
[1] TRUE
> q()
Save workspace image? [y/n/c]: n

Process R finished at Wed Jul  2 15:33:52 2014


R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.1.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> > options(STERM='iESS', str.dendrogram.last="'", editor='emacsclient', show.error.locations=TRUE)
> 
> 
library(RUnit)
> > errMsg <- function(err) print(err)
> load('ex4-tests.rda')
> ex4.test1
  v1 v2 v3
1  1  2  4
2  2  3  5
3  3  4  6
> ex4.test2
  v1 v2 v3 v4 v5 v6 v7 v8 v9
1  1  2  4  1  2  4  1  2  4
2  2  3  5  2  3  5  2  3  5
3  3  4  6  3  4  6  3  4  6
> identify.duplicates.t
      [,1] [,2]
 [1,]    1    4
 [2,]    1    7
 [3,]    2    5
 [4,]    2    8
 [5,]    3    6
 [6,]    3    9
 [7,]    4    7
 [8,]    5    8
 [9,]    6    9
> ?identical
> ?upper.tri
> upper.tri(ex4.test1)
      [,1]  [,2]  [,3]
[1,] FALSE  TRUE  TRUE
[2,] FALSE FALSE  TRUE
[3,] FALSE FALSE FALSE
> lower.tri(ex4.test1, diag=TRUE)
      [,1]  [,2]  [,3]
[1,] FALSE FALSE FALSE
[2,]  TRUE FALSE FALSE
[3,]  TRUE  TRUE FALSE
> lower.tri(ex4.test1, diag=TRUE)
     [,1]  [,2]  [,3]
[1,] TRUE FALSE FALSE
[2,] TRUE  TRUE FALSE
[3,] TRUE  TRUE  TRUE
> ex4.test1
Error: object 'ext.test1' not found
> ex4.test1
  v1 v2 v3
1  1  2  4
2  2  3  5
3  3  4  6
> ex4.test2
  v1 v2 v3 v4 v5 v6 v7 v8 v9
1  1  2  4  1  2  4  1  2  4
2  2  3  5  2  3  5  2  3  5
3  3  4  6  3  4  6  3  4  6
> ex4.test2[1] == ex4.test2[4]
  v1
1  1
2  2
3  3
> ex4.test2[1] == ex4.test2[4]
       v1
[1,] TRUE
[2,] TRUE
[3,] TRUE
> identical(ex4.test2[1], ex4.test2[1])
[1] FALSE
> identical(ex4.test2[1], ex4.test2[1])
[1] TRUE
> ncol(data)
NULL
> ncol(ex4.test2)
[1] 9
> data = ex4.test2
> data
  v1 v2 v3 v4 v5 v6 v7 v8 v9
1  1  2  4  1  2  4  1  2  4
2  2  3  5  2  3  5  2  3  5
3  3  4  6  3  4  6  3  4  6
> ncol(data)
[1] 9
>     idcs = seq(1:ncol(data))
> idcs
[1] 1 2 3 4 5 6 7 8 9
> data[, 2]
[1] 2 3 4
> data
  v1 v2 v3 v4 v5 v6 v7 v8 v9
1  1  2  4  1  2  4  1  2  4
2  2  3  5  2  3  5  2  3  5
3  3  4  6  3  4  6  3  4  6
> data[2]
  v2
1  2
2  3
3  4
> apply(data, 2, '==', data[, 2])
        v1   v2    v3    v4   v5    v6    v7   v8    v9
[1,] FALSE TRUE FALSE FALSE TRUE FALSE FALSE TRUE FALSE
[2,] FALSE TRUE FALSE FALSE TRUE FALSE FALSE TRUE FALSE
[3,] FALSE TRUE FALSE FALSE TRUE FALSE FALSE TRUE FALSE
> sum(apply(data, 2, '==', data[2]))
[1] 9
> apply(data, 2, '==', data[2])
        v1   v2    v3    v4   v5    v6    v7   v8    v9
[1,] FALSE TRUE FALSE FALSE TRUE FALSE FALSE TRUE FALSE
[2,] FALSE TRUE FALSE FALSE TRUE FALSE FALSE TRUE FALSE
[3,] FALSE TRUE FALSE FALSE TRUE FALSE FALSE TRUE FALSE
> apply(data, 2, '==', data[, 2])
        v1   v2    v3    v4   v5    v6    v7   v8    v9
[1,] FALSE TRUE FALSE FALSE TRUE FALSE FALSE TRUE FALSE
[2,] FALSE TRUE FALSE FALSE TRUE FALSE FALSE TRUE FALSE
[3,] FALSE TRUE FALSE FALSE TRUE FALSE FALSE TRUE FALSE
> data[2] == data[1]
        v2
[1,] FALSE
[2,] FALSE
[3,] FALSE
> data[, 2]
[1] 2 3 4
> col = data[x]
Error in `[.data.frame`(data, x) : object 'x' not found
>         compared.data = apply(data, 2, function(i) {
+             i == col & !identical(i, col)
+         }
+ 
+ )
Error in i == col (from #2) : 
  comparison (1) is possible only for atomic and list types
> x = 1
> col = data[x]
>         compared.data = apply(data, 2, function(i) {
+             i == col & !identical(i, col)
+         }
+ )
> col = data[x]
>         compared.data = apply(data, 2, function(i) {
+             return(i == col & !identical(i, col))
+         })
> compared.data
       v1    v2    v3   v4    v5    v6   v7    v8    v9
[1,] TRUE FALSE FALSE TRUE FALSE FALSE TRUE FALSE FALSE
[2,] TRUE FALSE FALSE TRUE FALSE FALSE TRUE FALSE FALSE
[3,] TRUE FALSE FALSE TRUE FALSE FALSE TRUE FALSE FALSE
> data
  v1 v2 v3 v4 v5 v6 v7 v8 v9
1  1  2  4  1  2  4  1  2  4
2  2  3  5  2  3  5  2  3  5
3  3  4  6  3  4  6  3  4  6
> col = data[, x]
>         compared.data = apply(data, 2, function(i) {
+             return(i == col & !identical(i, col))
+         })
> compared.data
        v1    v2    v3    v4    v5    v6    v7    v8    v9
[1,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[2,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
> col = data[, 1]
> col
[1] 1 2 3
> data[, 4] == col
[1] FALSE FALSE FALSE
> data[, 4] == col
[1] TRUE TRUE TRUE
> identical(data[, 4], col)
[1] TRUE
> identical(data[1], data[4])
[1] FALSE
> identical(data[, 1], data[, 4])
[1] TRUE
> col = data[, x]
>         compared.data = sapply(idcs, function(i) {
+             return(identical(data[, i], data[, x]))
+         })
> compared.data
[1]  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE
> identical(data[1], data[2])
[1] FALSE
> col = data[, x]
>         compared.data = sapply(idcs, function(i) {
+             return(identical(data[i], data[x]))
+         })
> compared.data
[1]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
> compared.data = sapply(idcs, function(i) {
+             return(identical(data[, i], data[, x]))
+         })
> compared.data
[1]  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE
> which(compared.data)
[1] 1 4 7
> duplicates.idcs = lapply(idcs, function (x) {
+         col = data[, x]
+         compared.data = sapply(idcs, function(i) {
+             return(identical(data[, i], data[, x]))
+         })
+         compared.data[x] = FALSE
+         return(which(compared.data))
+     }
+ )
> duplicates.idcs
[[1]]
[1] 4 7

[[2]]
[1] 5 8

[[3]]
[1] 6 9

[[4]]
[1] 1 7

[[5]]
[1] 2 8

[[6]]
[1] 3 9

[[7]]
[1] 1 4

[[8]]
[1] 2 5

[[9]]
[1] 3 6

> class(duplicates.idcs[1])
[[1]]
[1] 4 7

> class(duplicates.idcs[1])
[1] "list"
> idcs = seq(1:ncol(data))
>     duplicates.idcs = sapply(idcs, function (x) {
+         col = data[, x]
+         compared.data = sapply(idcs, function(i) {
+             return(identical(data[, i], data[, x]))
+         })
+         compared.data[x] = FALSE
+         return(which(compared.data))
+     })
> dupl.idcs = duplicates.idcs
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
[1,]    4    5    6    1    2    3    1    2    3
[2,]    7    8    9    7    8    9    4    5    6
> dupl.idcs = duplicates.idcs
> dupl.idcs[, 1]
[1] 4
> dupl.idcs
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
[1,]    4    5    6    1    2    3    1    2    3
[2,]    7    8    9    7    8    9    4    5    6
> dupl.idcs[, 1]
[1] 4 7
> dupl.idcs[1]
Error: unexpected numeric constant in "dupl.idcs$1"
> dupl.idcs[1]
[1] 4
> dupl.idcs[, 1]
[1] 4 7
> data = ex4.test1
>     idcs = seq(1:ncol(data))
    dupl.idcs = sapply(idcs, function (x) {
        col = data[, x]
        compared.data = sapply(idcs, function(i) {
            return(identical(data[, i], data[, x]))
        })
        compared.data[x] = FALSE
        return(which(compared.data))
    })
    idcs = seq(1:ncol(data))
>     dupl.idcs = sapply(idcs, function (x) {
+         col = data[, x]
+         compared.data = sapply(idcs, function(i) {
+             return(identical(data[, i], data[, x]))
+         })
+         compared.data[x] = FALSE
+         return(which(compared.data))
+     })
> dupl.idcs
[[1]]
integer(0)

[[2]]
integer(0)

[[3]]
integer(0)

> dim(dupl.idcs)
NULL
> data = ex4.test2
>     idcs = seq(1:ncol(data))
    dupl.idcs = sapply(idcs, function (x) {
        col = data[, x]
        compared.data = sapply(idcs, function(i) {
            return(identical(data[, i], data[, x]))
        })
        compared.data[x] = FALSE
        return(which(compared.data))
    })
    idcs = seq(1:ncol(data))
>     dupl.idcs = sapply(idcs, function (x) {
+         col = data[, x]
+         compared.data = sapply(idcs, function(i) {
+             return(identical(data[, i], data[, x]))
+         })
+         compared.data[x] = FALSE
+         return(which(compared.data))
+     })
> dim(dupl.idcs)
[1] 2 9
> NULL == NULL
logical(0)
> is.null(NULL)
[1] TRUE
> numeric(0)
numeric(0)
> dim(2)
NULL
> is.null(dim(2))
[1] TRUE
> dupl.idcs
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
[1,]    4    5    6    1    2    3    1    2    3
[2,]    7    8    9    7    8    9    4    5    6
> dupl.idcs[1]
[1] 4
> dupl.idcs[2]
[1] 7
> dupl.idcs[3]
[1] 5
> mat3 = rbind(c(1, 2, 3), c(1, 2, 3))
> mat1
     [,1] [,2] [,3]
[1,]    1    2    3
[2,]    1    2    3
> mat2 = rbind(c(1, 2, 3), c(1, 2, 3))
> mat3 = rbind(c(1, 2, 3), c(1, 2, 3))
> rbind(mat1, mat2, mat3)
     [,1] [,2] [,3]
[1,]    1    2    3
[2,]    1    2    3
[3,]    1    2    3
[4,]    1    2    3
[5,]    1    2    3
[6,]    1    2    3
> lst = list()
> lst$1 = mat1
Error: unexpected numeric constant in "lst$1"
> lst$one = mat1
> lst$two = mat2
> lst$three = mat3
Error: unexpected numeric constant in "lst$3"
> lst$three = mat3
> lst
$one
     [,1] [,2] [,3]
[1,]    1    2    3
[2,]    1    2    3

$two
     [,1] [,2] [,3]
[1,]    1    2    3
[2,]    1    2    3

$three
     [,1] [,2] [,3]
[1,]    1    2    3
[2,]    1    2    3

> sapply(lst, '+', 2)
     one two three
[1,]   3   3     3
[2,]   3   3     3
[3,]   4   4     4
[4,]   4   4     4
[5,]   5   5     5
[6,]   5   5     5
> compared.data
[1]  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE
> dupl.idcs
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
[1,]    4    5    6    1    2    3    1    2    3
[2,]    7    8    9    7    8    9    4    5    6
> sapply(dupl.idcs, '+', 10)
 [1] 14 17 15 18 16 19 11 17 12 18 13 19 11 14 12 15 13 16
> t(sapply(seq(1:18), function(x) { return(c(x, dupl.idcs[x])) }))
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14]
[1,]    1    2    3    4    5    6    7    8    9    10    11    12    13    14
[2,]    4    7    5    8    6    9    1    7    2     8     3     9     1     4
     [,15] [,16] [,17] [,18]
[1,]    15    16    17    18
[2,]     2     5     3     6
> t(sapply(seq(1:9), function(x) { return(c(x, dupl.idcs[x])) }))
      [,1] [,2]
 [1,]    1    4
 [2,]    2    7
 [3,]    3    5
 [4,]    4    8
 [5,]    5    6
 [6,]    6    9
 [7,]    7    1
 [8,]    8    7
 [9,]    9    2
[10,]   10    8
[11,]   11    3
[12,]   12    9
[13,]   13    1
[14,]   14    4
[15,]   15    2
[16,]   16    5
[17,]   17    3
[18,]   18    6
> t(sapply(seq(1:9), function(x) { return(c(x, dupl.idcs[x])) }))
      [,1] [,2]
 [1,]    1    4
 [2,]    2    7
 [3,]    3    5
 [4,]    4    8
 [5,]    5    6
 [6,]    6    9
 [7,]    7    1
 [8,]    8    7
 [9,]    9    2
> t(sapply(seq(1:18), function(x) { return(c(x, dupl.idcs[x])) }))
      [,1] [,2]
 [1,]    1    4
 [2,]    2    7
 [3,]    3    5
 [4,]    4    8
 [5,]    5    6
 [6,]    6    9
 [7,]    7    1
 [8,]    8    7
 [9,]    9    2
> t(sapply(seq(1:18), function(x) { return(c(x, dupl.idcs[x])) }))
      [,1] [,2]
 [1,]    1    4
 [2,]    2    7
 [3,]    3    5
 [4,]    4    8
 [5,]    5    6
 [6,]    6    9
 [7,]    7    1
 [8,]    8    7
 [9,]    9    2
[10,]   10    8
[11,]   11    3
[12,]   12    9
[13,]   13    1
[14,]   14    4
[15,]   15    2
[16,]   16    5
[17,]   17    3
[18,]   18    6
> dupl.idcs
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
[1,]    4    5    6    1    2    3    1    2    3
[2,]    7    8    9    7    8    9    4    5    6
> sapply(seq(1:9), function(x) {
+ col = dupl.idcs[, x]
+ sapply(col, function(i) {
+ return(c(x, i))
+ }
+ mat = sapply(col, function(i) {
Error: unexpected symbol in:
"}
mat"
>sapply(seq(1:9), function(x) {
+         col = dupl.idcs[, x]
+         temp.mat = sapply(col, function(i) {
+             return(c(x, i))
+         })
+         return(temp.mat)
+     })
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
[1,]    1    2    3    4    5    6    7    8    9
[2,]    4    5    6    1    2    3    1    2    3
[3,]    1    2    3    4    5    6    7    8    9
[4,]    7    8    9    7    8    9    4    5    6
> sapply(seq(1:9), function(x) {
+         col = dupl.idcs[, x]
+         temp.mat = sapply(col, function(i) {
+             return(c(x, i))
+         })
+         return(t(temp.mat))
+     })
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
[1,]    1    2    3    4    5    6    7    8    9
[2,]    1    2    3    4    5    6    7    8    9
[3,]    4    5    6    1    2    3    1    2    3
[4,]    7    8    9    7    8    9    4    5    6
> sapply(seq(1:9), function(x) {
+         col = dupl.idcs[, x]
+         temp.mat = sapply(col, function(i) {
+             return(c(x, i))
+         })
+         return(temp.mat)
+     })
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
[1,]    1    2    3    4    5    6    7    8    9
[2,]    4    5    6    1    2    3    1    2    3
[3,]    1    2    3    4    5    6    7    8    9
[4,]    7    8    9    7    8    9    4    5    6
> dupl.idcs
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
[1,]    4    5    6    1    2    3    1    2    3
[2,]    7    8    9    7    8    9    4    5    6
> mat1
     [,1] [,2] [,3]
[1,]    1    2    3
[2,]    1    2    3
> mat1 + c(2, 3, 4)
     [,1] [,2] [,3]
[1,]    3    6    6
[2,]    4    4    7
> rbind(mat1, c(2, 3, 4))
     [,1] [,2] [,3]
[1,]    1    2    3
[2,]    1    2    3
[3,]    2    3    4
> rm(mat1)
> mat1
Error: object 'mat1' not found
> mat = matrix(, nrow=0, ncol=0)
> mat
<0 x 0 matrix>
> rbind(mat, c(2, 3, 4))

[1,]
Warning message:
In rbind(mat, c(2, 3, 4)) :
  number of columns of result is not a multiple of vector length (arg 2)
> mat
<0 x 0 matrix>
> mat = matrix(, nrow=0, ncol=2)
> rbind(mat, c(1, 2))
     [,1] [,2]
[1,]    1    2
> mat
     [,1] [,2]
> rbind(mat, c(2, 4))
     [,1] [,2]
[1,]    1    2
> mat
     [,1] [,2]
> mat
     [,1] [,2]
> rbind(mat, c(2, 4))
     [,1] [,2]
[1,]    2    4
> mat
     [,1] [,2]
> mat
     [,1] [,2]
>     mat = matrix(, nrow=dim(dupl.idcs)[1]*dim(dupl.idcs)[2], ncol=2)
> mat
      [,1] [,2]
 [1,]   NA   NA
 [2,]   NA   NA
 [3,]   NA   NA
 [4,]   NA   NA
 [5,]   NA   NA
 [6,]   NA   NA
 [7,]   NA   NA
 [8,]   NA   NA
 [9,]   NA   NA
[10,]   NA   NA
[11,]   NA   NA
[12,]   NA   NA
[13,]   NA   NA
[14,]   NA   NA
[15,]   NA   NA
[16,]   NA   NA
[17,]   NA   NA
[18,]   NA   NA
> rbind(mat, c(1, 2))
      [,1] [,2]
 [1,]   NA   NA
 [2,]   NA   NA
 [3,]   NA   NA
 [4,]   NA   NA
 [5,]   NA   NA
 [6,]   NA   NA
 [7,]   NA   NA
 [8,]   NA   NA
 [9,]   NA   NA
[10,]   NA   NA
[11,]   NA   NA
[12,]   NA   NA
[13,]   NA   NA
[14,]   NA   NA
[15,]   NA   NA
[16,]   NA   NA
[17,]   NA   NA
[18,]   NA   NA
[19,]    1    2
> mat
      [,1] [,2]
 [1,]   NA   NA
 [2,]   NA   NA
 [3,]   NA   NA
 [4,]   NA   NA
 [5,]   NA   NA
 [6,]   NA   NA
 [7,]   NA   NA
 [8,]   NA   NA
 [9,]   NA   NA
[10,]   NA   NA
[11,]   NA   NA
[12,]   NA   NA
[13,]   NA   NA
[14,]   NA   NA
[15,]   NA   NA
[16,]   NA   NA
[17,]   NA   NA
[18,]   NA   NA
> mat = rbind(mat, c(1, 2))
> mat
      [,1] [,2]
 [1,]   NA   NA
 [2,]   NA   NA
 [3,]   NA   NA
 [4,]   NA   NA
 [5,]   NA   NA
 [6,]   NA   NA
 [7,]   NA   NA
 [8,]   NA   NA
 [9,]   NA   NA
[10,]   NA   NA
[11,]   NA   NA
[12,]   NA   NA
[13,]   NA   NA
[14,]   NA   NA
[15,]   NA   NA
[16,]   NA   NA
[17,]   NA   NA
[18,]   NA   NA
[19,]    1    2
> mat = rbind(mat, c(2, 3))
> mat
      [,1] [,2]
 [1,]   NA   NA
 [2,]   NA   NA
 [3,]   NA   NA
 [4,]   NA   NA
 [5,]   NA   NA
 [6,]   NA   NA
 [7,]   NA   NA
 [8,]   NA   NA
 [9,]   NA   NA
[10,]   NA   NA
[11,]   NA   NA
[12,]   NA   NA
[13,]   NA   NA
[14,]   NA   NA
[15,]   NA   NA
[16,]   NA   NA
[17,]   NA   NA
[18,]   NA   NA
[19,]    1    2
[20,]    2    3
> mat = matrix(, nrow=0, ncol=2)
> mat = rbind(mat, c(1, 2))
Warning message:
In rbind(mat, c(1, 2)) :
  number of columns of result is not a multiple of vector length (arg 2)
>mat = matrix(, nrow=0, ncol=2)
> mat = rbind(mat, c(1, 2))
> mat
     [,1] [,2]
[1,]    1    2
> mat = rbind(mat, c(3, 5))
> mat
     [,1] [,2]
[1,]    1    2
[2,]    3    5
> length(dupl.idcs[,1])
[1] 1
> length(dupl.idcs[,1])
[1] 2
> dupl.idcs[1, 8]
[1] 8
> dupl.idcs
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
[1,]    4    5    6    1    2    3    1    2    3
[2,]    7    8    9    7    8    9    4    5    6
> dupl.idcs[3, 2]
Error in dupl.idcs[3, 2] : subscript out of bounds
> dupl.idcs[1, 7]
[1] 1
> dupl.idcs[1, 8]
[1] 2
> mat = matrix(, nrow=0, ncol=2)
>     for (i in idcs) {
+         for (x in 1:length(dupl.idcs[, i])) {
+             num == dupl.idcs[x, i]
+             if (num > x) {
+                 mat = rbind(mat, c(x, num))
+             } else {
+                 mat = rbind(mat, c(num, x))
+             }
+         }
+     }
Error: object 'num' not found
> mat = matrix(, nrow=0, ncol=2)
>     for (i in idcs) {
+         for (x in 1:length(dupl.idcs[, i])) {
+             num = dupl.idcs[x, i]
+             if (num > x) {
+                 mat = rbind(mat, c(x, num))
+             } else {
+                 mat = rbind(mat, c(num, x))
+             }
+         }
+     }
> mat
      [,1] [,2]
 [1,]    1    4
 [2,]    2    7
 [3,]    1    5
 [4,]    2    8
 [5,]    1    6
 [6,]    2    9
 [7,]    1    1
 [8,]    2    7
 [9,]    1    2
[10,]    2    8
[11,]    1    3
[12,]    2    9
[13,]    1    1
[14,]    2    4
[15,]    1    2
[16,]    2    5
[17,]    1    3
[18,]    2    6
> mat = matrix(, nrow=0, ncol=2)
>     for (i in idcs) {
+         for (x in 1:length(dupl.idcs[, i])) {
+             num = dupl.idcs[x, i]
+             if (num > x) {
+                 mat = rbind(mat, c(i, num))
+             } else {
+                 mat = rbind(mat, c(num, i))
+             }
+         }
+     }
> mat
      [,1] [,2]
 [1,]    1    4
 [2,]    1    7
 [3,]    2    5
 [4,]    2    8
 [5,]    3    6
 [6,]    3    9
 [7,]    1    4
 [8,]    4    7
 [9,]    5    2
[10,]    5    8
[11,]    6    3
[12,]    6    9
[13,]    1    7
[14,]    7    4
[15,]    8    2
[16,]    8    5
[17,]    9    3
[18,]    9    6
> mat[order(1)]
[1] 1
> mat[order(mat[1,]),]
[1] 1 1
> mat[order(mat[,1]),]
     [,1] [,2]
[1,]    1    4
[2,]    1    7
> mat[order(mat[,1]),]
      [,1] [,2]
 [1,]    1    4
 [2,]    1    7
 [3,]    1    4
 [4,]    1    7
 [5,]    2    5
 [6,]    2    8
 [7,]    3    6
 [8,]    3    9
 [9,]    4    7
[10,]    5    2
[11,]    5    8
[12,]    6    3
[13,]    6    9
[14,]    7    4
[15,]    8    2
[16,]    8    5
[17,]    9    3
[18,]    9    6
> mat = matrix(, nrow=0, ncol=2)
>     for (i in idcs) {
+         for (x in 1:length(dupl.idcs[, i])) {
+             num = dupl.idcs[x, i]
+             if (num > i) {
+                 mat = rbind(mat, c(i, num))
+             } else {
+                 mat = rbind(mat, c(num, i))
+             }
+         }
+     }
>     mat = mat[order(mat[, 1]), ]
> mat
      [,1] [,2]
 [1,]    1    4
 [2,]    1    7
 [3,]    1    4
 [4,]    1    7
 [5,]    2    5
 [6,]    2    8
 [7,]    2    5
 [8,]    2    8
 [9,]    3    6
[10,]    3    9
[11,]    3    6
[12,]    3    9
[13,]    4    7
[14,]    4    7
[15,]    5    8
[16,]    5    8
[17,]    6    9
[18,]    6    9
> >unique
Error: unexpected '>' in ">"
> ?unique
> unique(mat)
      [,1] [,2]
 [1,]    1    4
 [2,]    1    7
 [3,]    2    5
 [4,]    2    8
 [5,]    3    6
 [6,]    3    9
 [7,]    4    7
 [8,]    5    8
 [9,]    6    9
> 
+ . + 
> identifyDuplicates <- function(data) {
+     idcs = seq(1:ncol(data))
+     dupl.idcs = sapply(idcs, function (x) {
+         col = data[, x]
+         compared.data = sapply(idcs, function(i) {
+             return(identical(data[, i], data[, x]))
+         })
+         compared.data[x] = FALSE
+ .... [TRUNCATED] 
> tryCatch(checkEquals(numeric(0), identifyDuplicates(ex4.test1)),
+          error=function(err) errMsg(err))
[1] TRUE
> tryCatch(checkIdentical(identify.duplicates.t, identifyDuplicates(ex4.test2)),
+          error=function(err) errMsg(err))
[1] TRUE
> library(RUnit)
> errMsg <- function(err) print(err)
> babies.data <- read.csv('babies.csv')
Error in file(file, "rt") : cannot open the connection
In addition: Warning message:
In file(file, "rt") :
  cannot open file 'babies.csv': No such file or directory
> load('lab3-tests.rda')
Error in readChar(con, 5L, useBytes = TRUE) : cannot open the connection
In addition: Warning message:
In readChar(con, 5L, useBytes = TRUE) :
  cannot open compressed file 'lab3-tests.rda', probable reason 'No such file or directory'
> q()
Save workspace image? [y/n/c]: y

Process R finished at Thu Jul  3 09:20:21 2014


R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.1.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> > options(STERM='iESS', str.dendrogram.last="'", editor='emacsclient', show.error.locations=TRUE)
> library(RUnit)
> errMsg <- function(err) print(err)
> babies.data <- read.csv('babies.csv')
> load('lab3-tests.rda')
> data = babies.data
> group.variable = 'height'
> data$group.variable
NULL
> data$height
   [1] 62 64 64 67 62 62 65 62 66 68 64 63 61 63 63 65 60 68 66 56 67 66 68 65
  [25] 65 58 65 65 66 61 61 66 60 65 67 63 63 65 61 63 61 65 63 66 60 66 63 62
  [49] 65 61 64 67 60 70 65 60 61 61 67 65 63 63 65 63 69 63 63 66 63 66 62 60
  [73] 62 63 63 63 62 65 64 68 67 66 65 63 70 59 62 60 61 64 61 62 64 60 64 65
  [97] 61 66 66 65 64 65 65 67 66 64 66 67 66 65 61 66 67 69 69 61 65 62 66 67
 [121] 62 67 64 60 66 64 69 65 65 65 62 65 65 63 61 66 63 71 68 66 68 61 66 64
 [145] 68 60 60 67 62 66 63 63 65 69 67 65 62 68 65 61 66 72 66 65 62 64 62 65
 [169] 64 63 62 63 61 58 59 66 63 63 65 63 63 66 66 61 63 64 63 63 61 61 68 65
 [193] 63 62 62 61 64 65 67 70 61 65 62 63 64 64 68 65 66 63 62 63 66 65 64 66
 [217] 63 63 63 68 63 65 65 65 67 62 66 65 68 63 59 63 61 65 64 64 66 63 66 64
 [241] 62 65 66 63 64 66 60 67 61 63 66 62 67 65 65 66 65 67 66 59 62 63 68 66
 [265] 64 71 65 63 67 64 68 71 63 60 59 60 61 64 62 64 61 65 66 64 66 65 62 60
 [289] 68 66 62 62 63 67 65 67 66 66 67 66 64 66 63 60 62 67 64 63 65 64 67 64
 [313] 62 64 59 63 67 68 65 61 67 65 63 64 66 59 65 63 63 67 64 62 64 62 63 64
 [337] 66 64 66 66 63 62 62 64 62 68 67 67 65 61 60 67 62 65 60 67 66 67 62 66
 [361] 67 65 66 68 64 66 62 59 64 67 67 64 66 62 60 62 63 65 65 62 64 69 64 61
 [385] 66 64 61 63 67 67 66 63 64 67 67 66 67 66 63 64 59 61 62 64 53 68 66 63
 [409] 66 66 62 64 67 65 61 65 67 67 63 65 66 66 63 62 64 67 67 66 64 61 66 65
 [433] 65 60 61 65 66 67 64 61 64 66 70 60 65 66 65 66 63 64 63 63 63 65 64 61
 [457] 63 65 65 63 64 64 60 67 64 59 63 63 66 64 62 64 67 64 65 63 64 59 64 62
 [481] 64 65 64 66 66 62 67 65 62 64 66 66 69 64 60 64 63 62 60 65 68 62 67 66
 [505] 59 65 66 60 65 61 64 64 65 63 66 59 60 62 66 67 65 63 63 65 65 70 64 66
 [529] 66 61 63 67 65 68 66 64 64 62 65 65 64 67 66 65 65 62 65 60 59 65 65 65
 [553] 67 71 66 63 68 64 61 62 69 66 63 63 66 62 64 64 64 68 67 65 61 69 63 62
 [577] 62 64 69 62 62 62 62 64 63 61 58 61 62 62 61 65 65 62 68 65 68 59 62 62
 [601] 61 65 64 66 64 62 64 67 64 63 64 64 63 65 65 63 63 67 66 67 64 64 65 63
 [625] 57 61 68 66 66 62 60 65 60 64 64 60 64 60 70 61 60 64 61 66 65 62 62 61
 [649] 62 60 65 67 65 63 63 68 68 66 64 64 66 61 63 68 62 66 66 62 63 58 65 71
 [673] 62 64 64 64 62 68 62 67 64 65 62 63 66 64 64 63 69 62 67 69 63 65 62 70
 [697] 66 62 59 62 61 66 60 66 63 62 60 64 58 61 64 66 62 64 68 62 62 68 62 64
 [721] 64 60 63 64 63 63 62 64 62 65 63 63 62 68 63 64 63 61 60 63 64 64 66 67
 [745] 68 62 68 67 65 64 66 68 66 62 63 64 64 65 65 58 61 64 67 63 69 66 64 65
 [769] 65 61 62 65 65 64 66 66 67 65 59 63 61 61 63 65 63 61 67 63 64 70 64 67
 [793] 61 64 65 62 61 60 64 67 62 67 64 65 64 65 62 64 66 63 66 62 66 66 66 66
 [817] 62 64 65 64 64 65 66 61 65 62 63 64 67 67 65 63 63 63 63 68 61 66 67 66
 [841] 66 67 67 60 67 65 68 64 61 62 61 61 65 66 64 61 59 66 65 64 63 62 63 67
 [865] 66 66 64 62 63 61 62 64 64 67 67 62 61 62 70 68 64 68 64 67 61 58 63 63
 [889] 66 67 64 60 67 65 65 69 65 64 61 65 59 64 68 66 64 67 63 64 65 66 66 64
 [913] 65 62 64 65 63 69 67 61 64 64 65 63 65 65 65 63 65 61 64 62 69 63 62 66
 [937] 65 61 63 62 60 64 60 65 68 64 62 68 64 66 66 63 68 67 61 61 62 63 66 60
 [961] 65 59 62 64 67 61 62 70 67 68 63 64 66 64 65 63 61 64 67 64 60 69 63 65
 [985] 64 65 65 64 67 68 63 63 66 65 65 67 65 60 63 66 69 61 64 63 63 65 66 66
[1009] 64 60 61 65 62 62 61 68 67 66 65 65 60 67 63 64 65 67 65 65 60 65 62 61
[1033] 64 61 65 67 62 64 66 61 64 65 67 59 61 61 64 68 66 68 62 63 65 67 70 63
[1057] 60 68 60 63 64 58 64 61 66 65 61 66 60 62 63 63 63 61 59 65 62 63 62 64
[1081] 61 58 63 63 64 65 67 63 62 65 66 61 61 64 68 61 66 66 61 61 63 65 67 67
[1105] 64 63 64 59 66 63 63 61 65 64 63 59 67 65 63 64 64 63 61 65 61 65 62 62
[1129] 63 66 61 62 65 65 67 64 67 63 64 63 70 58 63 61 64 61 66 54 66 66 65 68
[1153] 69 63 62 66 63 66 60 65 64 64 65 70 63 60 64 65 65 60 67 65 65 65
> data$as.character(group.variable)
Error: attempt to apply non-function
> data$group.variable
NULL
> data$as.character(group.variable)
Error: attempt to apply non-function
> data[1, ]
  bwt gestation parity age height weight smoke
1 120       284      0  27     62    100     0
> data.rowname
Error: object 'data.rowname' not found
> row.names(data)
Error: could not find function "row.name"
> row.names(data)
   [1] "1"    "2"    "3"    "4"    "5"    "6"    "7"    "8"    "9"    "10"  
  [11] "11"   "12"   "13"   "14"   "15"   "16"   "17"   "18"   "19"   "20"  
  [21] "21"   "22"   "23"   "24"   "25"   "26"   "27"   "28"   "29"   "30"  
  [31] "31"   "32"   "33"   "34"   "35"   "36"   "37"   "38"   "39"   "40"  
  [41] "41"   "42"   "43"   "44"   "45"   "46"   "47"   "48"   "49"   "50"  
  [51] "51"   "52"   "53"   "54"   "55"   "56"   "57"   "58"   "59"   "60"  
  [61] "61"   "62"   "63"   "64"   "65"   "66"   "67"   "68"   "69"   "70"  
  [71] "71"   "72"   "73"   "74"   "75"   "76"   "77"   "78"   "79"   "80"  
  [81] "81"   "82"   "83"   "84"   "85"   "86"   "87"   "88"   "89"   "90"  
  [91] "91"   "92"   "93"   "94"   "95"   "96"   "97"   "98"   "99"   "100" 
 [101] "101"  "102"  "103"  "104"  "105"  "106"  "107"  "108"  "109"  "110" 
 [111] "111"  "112"  "113"  "114"  "115"  "116"  "117"  "118"  "119"  "120" 
 [121] "121"  "122"  "123"  "124"  "125"  "126"  "127"  "128"  "129"  "130" 
 [131] "131"  "132"  "133"  "134"  "135"  "136"  "137"  "138"  "139"  "140" 
 [141] "141"  "142"  "143"  "144"  "145"  "146"  "147"  "148"  "149"  "150" 
 [151] "151"  "152"  "153"  "154"  "155"  "156"  "157"  "158"  "159"  "160" 
 [161] "161"  "162"  "163"  "164"  "165"  "166"  "167"  "168"  "169"  "170" 
 [171] "171"  "172"  "173"  "174"  "175"  "176"  "177"  "178"  "179"  "180" 
 [181] "181"  "182"  "183"  "184"  "185"  "186"  "187"  "188"  "189"  "190" 
 [191] "191"  "192"  "193"  "194"  "195"  "196"  "197"  "198"  "199"  "200" 
 [201] "201"  "202"  "203"  "204"  "205"  "206"  "207"  "208"  "209"  "210" 
 [211] "211"  "212"  "213"  "214"  "215"  "216"  "217"  "218"  "219"  "220" 
 [221] "221"  "222"  "223"  "224"  "225"  "226"  "227"  "228"  "229"  "230" 
 [231] "231"  "232"  "233"  "234"  "235"  "236"  "237"  "238"  "239"  "240" 
 [241] "241"  "242"  "243"  "244"  "245"  "246"  "247"  "248"  "249"  "250" 
 [251] "251"  "252"  "253"  "254"  "255"  "256"  "257"  "258"  "259"  "260" 
 [261] "261"  "262"  "263"  "264"  "265"  "266"  "267"  "268"  "269"  "270" 
 [271] "271"  "272"  "273"  "274"  "275"  "276"  "277"  "278"  "279"  "280" 
 [281] "281"  "282"  "283"  "284"  "285"  "286"  "287"  "288"  "289"  "290" 
 [291] "291"  "292"  "293"  "294"  "295"  "296"  "297"  "298"  "299"  "300" 
 [301] "301"  "302"  "303"  "304"  "305"  "306"  "307"  "308"  "309"  "310" 
 [311] "311"  "312"  "313"  "314"  "315"  "316"  "317"  "318"  "319"  "320" 
 [321] "321"  "322"  "323"  "324"  "325"  "326"  "327"  "328"  "329"  "330" 
 [331] "331"  "332"  "333"  "334"  "335"  "336"  "337"  "338"  "339"  "340" 
 [341] "341"  "342"  "343"  "344"  "345"  "346"  "347"  "348"  "349"  "350" 
 [351] "351"  "352"  "353"  "354"  "355"  "356"  "357"  "358"  "359"  "360" 
 [361] "361"  "362"  "363"  "364"  "365"  "366"  "367"  "368"  "369"  "370" 
 [371] "371"  "372"  "373"  "374"  "375"  "376"  "377"  "378"  "379"  "380" 
 [381] "381"  "382"  "383"  "384"  "385"  "386"  "387"  "388"  "389"  "390" 
 [391] "391"  "392"  "393"  "394"  "395"  "396"  "397"  "398"  "399"  "400" 
 [401] "401"  "402"  "403"  "404"  "405"  "406"  "407"  "408"  "409"  "410" 
 [411] "411"  "412"  "413"  "414"  "415"  "416"  "417"  "418"  "419"  "420" 
 [421] "421"  "422"  "423"  "424"  "425"  "426"  "427"  "428"  "429"  "430" 
 [431] "431"  "432"  "433"  "434"  "435"  "436"  "437"  "438"  "439"  "440" 
 [441] "441"  "442"  "443"  "444"  "445"  "446"  "447"  "448"  "449"  "450" 
 [451] "451"  "452"  "453"  "454"  "455"  "456"  "457"  "458"  "459"  "460" 
 [461] "461"  "462"  "463"  "464"  "465"  "466"  "467"  "468"  "469"  "470" 
 [471] "471"  "472"  "473"  "474"  "475"  "476"  "477"  "478"  "479"  "480" 
 [481] "481"  "482"  "483"  "484"  "485"  "486"  "487"  "488"  "489"  "490" 
 [491] "491"  "492"  "493"  "494"  "495"  "496"  "497"  "498"  "499"  "500" 
 [501] "501"  "502"  "503"  "504"  "505"  "506"  "507"  "508"  "509"  "510" 
 [511] "511"  "512"  "513"  "514"  "515"  "516"  "517"  "518"  "519"  "520" 
 [521] "521"  "522"  "523"  "524"  "525"  "526"  "527"  "528"  "529"  "530" 
 [531] "531"  "532"  "533"  "534"  "535"  "536"  "537"  "538"  "539"  "540" 
 [541] "541"  "542"  "543"  "544"  "545"  "546"  "547"  "548"  "549"  "550" 
 [551] "551"  "552"  "553"  "554"  "555"  "556"  "557"  "558"  "559"  "560" 
 [561] "561"  "562"  "563"  "564"  "565"  "566"  "567"  "568"  "569"  "570" 
 [571] "571"  "572"  "573"  "574"  "575"  "576"  "577"  "578"  "579"  "580" 
 [581] "581"  "582"  "583"  "584"  "585"  "586"  "587"  "588"  "589"  "590" 
 [591] "591"  "592"  "593"  "594"  "595"  "596"  "597"  "598"  "599"  "600" 
 [601] "601"  "602"  "603"  "604"  "605"  "606"  "607"  "608"  "609"  "610" 
 [611] "611"  "612"  "613"  "614"  "615"  "616"  "617"  "618"  "619"  "620" 
 [621] "621"  "622"  "623"  "624"  "625"  "626"  "627"  "628"  "629"  "630" 
 [631] "631"  "632"  "633"  "634"  "635"  "636"  "637"  "638"  "639"  "640" 
 [641] "641"  "642"  "643"  "644"  "645"  "646"  "647"  "648"  "649"  "650" 
 [651] "651"  "652"  "653"  "654"  "655"  "656"  "657"  "658"  "659"  "660" 
 [661] "661"  "662"  "663"  "664"  "665"  "666"  "667"  "668"  "669"  "670" 
 [671] "671"  "672"  "673"  "674"  "675"  "676"  "677"  "678"  "679"  "680" 
 [681] "681"  "682"  "683"  "684"  "685"  "686"  "687"  "688"  "689"  "690" 
 [691] "691"  "692"  "693"  "694"  "695"  "696"  "697"  "698"  "699"  "700" 
 [701] "701"  "702"  "703"  "704"  "705"  "706"  "707"  "708"  "709"  "710" 
 [711] "711"  "712"  "713"  "714"  "715"  "716"  "717"  "718"  "719"  "720" 
 [721] "721"  "722"  "723"  "724"  "725"  "726"  "727"  "728"  "729"  "730" 
 [731] "731"  "732"  "733"  "734"  "735"  "736"  "737"  "738"  "739"  "740" 
 [741] "741"  "742"  "743"  "744"  "745"  "746"  "747"  "748"  "749"  "750" 
 [751] "751"  "752"  "753"  "754"  "755"  "756"  "757"  "758"  "759"  "760" 
 [761] "761"  "762"  "763"  "764"  "765"  "766"  "767"  "768"  "769"  "770" 
 [771] "771"  "772"  "773"  "774"  "775"  "776"  "777"  "778"  "779"  "780" 
 [781] "781"  "782"  "783"  "784"  "785"  "786"  "787"  "788"  "789"  "790" 
 [791] "791"  "792"  "793"  "794"  "795"  "796"  "797"  "798"  "799"  "800" 
 [801] "801"  "802"  "803"  "804"  "805"  "806"  "807"  "808"  "809"  "810" 
 [811] "811"  "812"  "813"  "814"  "815"  "816"  "817"  "818"  "819"  "820" 
 [821] "821"  "822"  "823"  "824"  "825"  "826"  "827"  "828"  "829"  "830" 
 [831] "831"  "832"  "833"  "834"  "835"  "836"  "837"  "838"  "839"  "840" 
 [841] "841"  "842"  "843"  "844"  "845"  "846"  "847"  "848"  "849"  "850" 
 [851] "851"  "852"  "853"  "854"  "855"  "856"  "857"  "858"  "859"  "860" 
 [861] "861"  "862"  "863"  "864"  "865"  "866"  "867"  "868"  "869"  "870" 
 [871] "871"  "872"  "873"  "874"  "875"  "876"  "877"  "878"  "879"  "880" 
 [881] "881"  "882"  "883"  "884"  "885"  "886"  "887"  "888"  "889"  "890" 
 [891] "891"  "892"  "893"  "894"  "895"  "896"  "897"  "898"  "899"  "900" 
 [901] "901"  "902"  "903"  "904"  "905"  "906"  "907"  "908"  "909"  "910" 
 [911] "911"  "912"  "913"  "914"  "915"  "916"  "917"  "918"  "919"  "920" 
 [921] "921"  "922"  "923"  "924"  "925"  "926"  "927"  "928"  "929"  "930" 
 [931] "931"  "932"  "933"  "934"  "935"  "936"  "937"  "938"  "939"  "940" 
 [941] "941"  "942"  "943"  "944"  "945"  "946"  "947"  "948"  "949"  "950" 
 [951] "951"  "952"  "953"  "954"  "955"  "956"  "957"  "958"  "959"  "960" 
 [961] "961"  "962"  "963"  "964"  "965"  "966"  "967"  "968"  "969"  "970" 
 [971] "971"  "972"  "973"  "974"  "975"  "976"  "977"  "978"  "979"  "980" 
 [981] "981"  "982"  "983"  "984"  "985"  "986"  "987"  "988"  "989"  "990" 
 [991] "991"  "992"  "993"  "994"  "995"  "996"  "997"  "998"  "999"  "1000"
[1001] "1001" "1002" "1003" "1004" "1005" "1006" "1007" "1008" "1009" "1010"
[1011] "1011" "1012" "1013" "1014" "1015" "1016" "1017" "1018" "1019" "1020"
[1021] "1021" "1022" "1023" "1024" "1025" "1026" "1027" "1028" "1029" "1030"
[1031] "1031" "1032" "1033" "1034" "1035" "1036" "1037" "1038" "1039" "1040"
[1041] "1041" "1042" "1043" "1044" "1045" "1046" "1047" "1048" "1049" "1050"
[1051] "1051" "1052" "1053" "1054" "1055" "1056" "1057" "1058" "1059" "1060"
[1061] "1061" "1062" "1063" "1064" "1065" "1066" "1067" "1068" "1069" "1070"
[1071] "1071" "1072" "1073" "1074" "1075" "1076" "1077" "1078" "1079" "1080"
[1081] "1081" "1082" "1083" "1084" "1085" "1086" "1087" "1088" "1089" "1090"
[1091] "1091" "1092" "1093" "1094" "1095" "1096" "1097" "1098" "1099" "1100"
[1101] "1101" "1102" "1103" "1104" "1105" "1106" "1107" "1108" "1109" "1110"
[1111] "1111" "1112" "1113" "1114" "1115" "1116" "1117" "1118" "1119" "1120"
[1121] "1121" "1122" "1123" "1124" "1125" "1126" "1127" "1128" "1129" "1130"
[1131] "1131" "1132" "1133" "1134" "1135" "1136" "1137" "1138" "1139" "1140"
[1141] "1141" "1142" "1143" "1144" "1145" "1146" "1147" "1148" "1149" "1150"
[1151] "1151" "1152" "1153" "1154" "1155" "1156" "1157" "1158" "1159" "1160"
[1161] "1161" "1162" "1163" "1164" "1165" "1166" "1167" "1168" "1169" "1170"
[1171] "1171" "1172" "1173" "1174"
> col.names(data)
Error: could not find function "col.names"
> col.name(data)
Error: could not find function "col.name"
> data
     bwt gestation parity age height weight smoke
1    120       284      0  27     62    100     0
2    113       282      0  33     64    135     0
3    128       279      0  28     64    115     1
4    108       282      0  23     67    125     1
5    136       286      0  25     62     93     0
6    138       244      0  33     62    178     0
7    132       245      0  23     65    140     0
8    120       289      0  25     62    125     0
9    143       299      0  30     66    136     1
10   140       351      0  27     68    120     0
11   144       282      0  32     64    124     1
12   141       279      0  23     63    128     1
13   110       281      0  36     61     99     1
14   114       273      0  30     63    154     0
15   115       285      0  38     63    130     0
16    92       255      0  25     65    125     1
17   115       261      0  33     60    125     1
18   144       261      0  33     68    170     0
19   119       288      0  43     66    142     1
20   105       270      0  22     56     93     0
21   115       274      0  27     67    175     1
22   137       287      0  25     66    145     0
23   122       276      0  30     68    182     0
24   131       294      0  23     65    122     0
25   103       261      0  27     65    112     1
26   146       280      0  26     58    106     0
27   114       266      0  20     65    175     1
28   125       292      0  32     65    125     0
29   114       274      0  28     66    132     1
30   122       270      0  26     61    105     0
31    93       278      0  34     61    146     0
32   130       268      0  30     66    123     0
33   119       275      0  23     60    105     0
34   113       281      0  24     65    120     0
35   134       283      0  22     67    130     0
36   107       279      0  24     63    115     0
37   134       288      0  23     63     92     1
38   122       267      0  27     65    101     1
39   129       293      0  30     61    160     0
40   110       278      0  23     63    177     0
41   111       270      0  27     61    119     0
42    87       248      0  37     65    130     1
43   143       274      0  27     63    110     1
44   155       294      0  32     66    150     0
45   110       272      0  25     60     90     0
46   122       275      0  26     66    147     0
47   145       291      0  26     63    119     1
48   115       258      0  26     62    130     0
49   108       283      0  31     65    148     1
50   102       282      0  28     61    110     0
51   143       286      0  31     64    126     0
52   146       267      0  30     67    132     0
53   124       275      0  22     60    130     0
54   124       278      0  26     70    145     1
55   145       257      0  33     65    140     0
56   106       273      0  28     60    116     0
57    75       232      0  33     61    110     0
58   107       273      0  24     61     96     0
59   124       288      0  22     67    118     0
60   122       280      0  23     65    125     1
61   101       245      0  23     63    130     1
62   128       283      0  28     63    125     1
63   104       282      0  36     65    115     1
64    97       246      0  37     63    150     0
65   137       274      0  26     69    137     1
66   103       273      0  31     63    170     1
67   142       276      0  38     63    170     0
68   130       289      0  27     66    130     0
69   156       292      0  26     63    118     0
70   133       284      0  25     66    125     1
71   120       274      0  24     62    120     0
72    91       270      0  24     60    149     1
73   127       274      0  21     62    110     0
74   153       286      0  26     63    107     1
75   121       276      0  39     63    130     0
76   120       277      0  27     63    126     0
77    99       272      0  27     62    103     1
78   149       293      0  35     65    116     0
79   129       280      0  23     64    104     0
80   139       292      0  25     68    135     0
81   114       274      0  33     67    148     1
82   138       287      0  30     66    145     0
83   138       294      0  32     65    117     0
84   131       296      0  37     63    143     0
85   125       305      0  22     70    196     1
86   128       281      0  33     59    117     0
87   134       268      0  28     62    112     0
88   114       271      0  27     60    104     0
89    85       278      0  23     61    103     1
90   135       282      0  22     64    100     0
91    87       255      0  28     61    100     1
92   125       302      0  37     62    162     0
93   105       254      0  29     64    137     0
94   120       279      0  27     60    121     1
95   119       274      0  33     64    120     0
96   107       280      0  36     65    117     1
97   119       273      0  24     61    108     1
98   133       279      0  37     66    140     0
99   155       287      0  33     66    143     0
100  126       273      0  22     65    150     0
101  129       303      0  27     64    125     0
102  137       274      0  29     65    154     0
103  125       302      0  28     65    125     0
104   91       255      0  19     67    136     1
105   95       279      0  22     66    145     1
106  118       276      0  29     64    114     0
107  141       278      0  33     66    109     1
108  131       283      0  25     67    215     0
109  121       264      0  32     66    145     0
110  100       243      0  39     65    170     1
111  131       288      0  24     61    103     0
112  118       284      0  26     66    133     0
113  152       288      0  35     67    130     0
114  121       284      0  34     69    155     0
115  117       276      0  31     69    150     0
116  115       283      0  25     61    150     1
117  112       277      0  23     65    110     0
118   94       267      0  30     62    120     1
119  109       272      0  35     66    154     0
120  132       225      0  28     67    148     0
121  117       278      0  25     62    103     0
122  101       266      0  20     67    110     1
123  112       294      0  25     64    125     1
124  128       283      0  24     60    100     0
125  128       279      0  25     66    147     1
126  117       258      0  31     64    120     0
127  134       278      0  24     69    135     0
128  127       284      0  28     65    145     0
129   93       269      0  21     65    104     1
130  122       275      0  27     65    165     0
131  100       265      0  39     62    107     1
132  147       293      0  32     65    123     0
133  120       299      0  25     65    110     0
134  144       277      0  30     63    127     0
135  105       268      0  32     61    115     1
136  136       276      0  23     66    155     0
137  102       262      0  24     63    125     0
138  160       300      0  29     71    175     1
139  113       275      0  24     68    140     1
140  126       282      0  38     66    250     0
141  126       271      0  29     68    148     0
142  115       278      0  29     61    128     0
143  119       284      0  20     66    132     0
144  123       318      0  21     64    152     0
145  118       282      0  22     68    135     1
146  133       287      0  24     60    104     1
147  134       290      0  22     60    121     0
148  144       288      0  21     67    111     0
149  111       273      0  43     62    138     0
150  125       262      0  36     66    190     0
151  135       296      0  30     63    123     0
152  134       289      0  22     63    125     0
153  116       289      0  22     65    160     1
154  129       291      0  29     69    123     0
155  113       301      0  26     67    105     1
156  131       295      0  23     65    123     1
157  121       272      0  22     62    109     0
158  121       271      0  25     68    118     1
159  138       287      0  24     65    115     0
160  136       278      0  23     61    105     0
161  120       279      0  30     66    131     0
162  122       278      0  31     72    155     1
163  134       267      0  30     66    170     0
164  101       280      0  25     65    123     1
165  112       288      0  32     62    125     0
166  132       290      0  25     64    120     0
167  136       285      0  23     62    175     0
168  113       277      0  23     65    192     1
169   96       271      0  23     64    116     0
170  124       277      0  29     63    220     0
171  113       306      0  21     62    150     0
172  137       258      0  25     63    117     0
173  133       268      0  24     61     93     0
174  107       244      0  20     58     97     0
175   96       265      0  28     59    135     1
176  142       278      0  35     66    136     1
177  136       275      0  22     63    110     0
178   75       239      0  26     63    124     1
179  104       295      0  26     65    155     1
180  130       274      0  30     63    150     0
181   90       290      0  22     63    168     0
182  118       276      0  22     66    147     1
183  123       320      0  22     66    117     0
184  137       291      0  34     61    110     0
185  101       268      0  19     63    140     0
186  142       275      0  25     64    132     0
187   98       282      0  20     63     97     1
188  124       283      0  23     63    112     0
189  109       281      0  23     61    105     0
190  150       285      0  22     61    110     1
191  119       282      0  26     68    150     1
192  131       280      0  38     65    125     0
193  101       272      0  29     63    150     1
194  113       246      0  19     62    138     1
195  127       270      0  25     62    150     0
196   97       260      0  23     61     99     1
197  117       282      0  28     64    115     0
198  150       290      0  21     65    125     0
199   85       234      0  33     67    130     0
200  128       288      0  27     70    145     0
201  105       233      0  34     61    130     0
202  115       274      0  22     65    130     1
203  107       290      0  28     62    135     0
204  121       275      0  24     63    121     1
205  119       286      0  20     64    180     0
206  117       275      0  20     64    145     1
207  134       264      0  26     68    136     0
208  117       288      0  35     65    142     0
209  115       268      0  28     66    128     0
210  110       254      0  23     63    120     1
211  130       282      0  21     62    106     1
212  140       274      0  23     63    106     1
213   93       249      0  33     66    117     0
214  154       292      0  42     65    116     1
215  125       290      0  19     64    127     0
216   93       318      0  31     66    135     0
217  122       277      0  33     63    135     1
218  129       267      0  22     63    160     0
219  126       276      0  23     63    120     0
220   85       274      0  24     68    155     0
221  173       293      0  30     63    110     0
222  144       329      0  22     65    190     1
223  114       278      0  25     65    140     1
224  154       287      0  27     65    125     1
225  150       274      0  25     67    117     1
226  111       278      0  21     62    125     0
227  126       277      0  32     66    128     0
228  122       261      0  28     65    124     0
229  141       282      0  24     68    169     0
230  142       274      0  24     63    125     0
231   99       262      0  38     59    110     1
232  113       286      0  23     63    105     0
233  149       282      0  21     61    110     0
234  117       328      0  29     65    125     1
235  128       290      0  22     64    118     0
236  125       286      0  21     64    139     0
237  114       290      0  30     66    160     0
238  130       285      0  23     63    128     1
239  116       148      0  28     66    135     0
240   81       256      0  30     64    148     1
241  124       287      0  27     62    105     1
242  125       292      0  22     65    122     0
243  110       262      0  25     66    140     0
244  125       279      0  23     63    104     1
245  138       294      0  40     64    125     0
246  142       284      0  39     66    132     0
247  115       278      0  23     60    102     1
248  102       280      0  38     67    140     0
249  140       294      0  25     61    103     0
250  133       276      1  22     63    119     0
251  127       290      0  35     66    165     0
252  104       274      1  20     62    115     1
253  119       275      0  42     67    156     1
254  152       301      0  29     65    150     0
255  123       284      1  20     65    120     1
256  143       273      0  19     66    135     0
257  131       308      0  40     65    160     0
258  141       319      1  20     67    140     1
259  129       277      0  30     66    142     1
260  113       282      1  36     59    140     0
261  119       292      0  33     62    118     1
262  109       295      1  23     63    103     1
263  104       280      1  27     68    146     1
264  131       282      1  21     66    126     0
265  110       293      1  28     64    135     1
266  148       279      0  27     71    189     0
267  137       283      1  20     65    157     0
268  117       283      0  27     63    108     0
269  115       302      1  22     67    135     0
270   98       280      0  35     64    122     1
271  136       303      1  20     68    148     1
272  121       276      1  23     71    152     1
273  132       285      1  25     63    140     0
274   91       264      0  36     60    100     1
275  119       294      0  34     59    105     0
276   85       273      0  26     60    105     1
277  106       271      1  26     61    110     1
278  132       284      0  29     64    122     0
279   80       266      1  25     62    125     0
280  109       286      0  24     64    125     1
281  111       306      0  27     61    102     0
282  143       292      1  21     65    125     0
283  136       290      0  26     66    135     0
284  110       285      1  19     64    130     0
285   98       257      0  29     66    130     1
286  108       305      1  24     65    112     0
287  101       295      0  18     62    145     1
288   71       281      0  32     60    117     1
289  124       292      0  29     68    176     1
290  106       276      0  30     66    130     0
291  101       278      0  25     62    112     1
292  100       277      0  31     62    100     1
293  104       269      0  35     63    110     1
294  117       270      0  24     67    135     1
295  117       267      0  29     65    120     1
296  149       279      0  25     67    135     0
297  135       284      0  25     66    123     0
298  110       283      1  21     66    129     0
299  121       276      0  31     67    130     0
300  142       285      1  24     66    136     0
301  104       260      0  33     64    145     0
302  138       296      0  34     66    120     0
303  112       278      1  21     63    120     0
304  117       293      0  39     60    120     1
305  109       282      0  25     62    106     1
306  131       266      1  28     67    135     0
307  120       273      0  29     64    130     1
308  116       270      0  29     63    132     0
309  140       290      0  23     65    110     0
310  103       273      1  22     64    110     1
311  120       279      1  23     67    135     0
312  139       260      1  32     64    127     0
313  123       254      0  26     62    130     1
314  104       280      1  23     64    107     1
315  111       270      0  22     59    103     0
316  122       277      0  32     63    157     1
317  116       271      1  30     67    144     1
318  129       277      0  27     68    130     1
319  133       292      0  30     65    112     1
320  110       277      0  25     61    130     0
321  105       276      0  22     67    130     0
322   93       246      0  37     65    130     0
323  122       281      0  42     63    103     1
324  133       293      0  23     64    110     1
325  130       296      1  22     66    117     1
326  104       307      0  24     59    122     0
327  106       278      0  31     65    110     1
328  120       281      0  33     63    113     0
329  118       276      1  18     63    128     0
330  140       290      1  19     67    132     1
331  114       268      0  22     64    104     0
332  116       280      0  40     62    159     0
333  129       284      0  24     64    115     0
334  120       286      0  22     62    115     1
335  127       281      0  24     63    112     1
336   71       234      0  32     64    110     1
337   88       274      0  30     66    130     0
338  122       286      0  23     64    145     0
339  106       302      1  19     66    147     0
340  135       285      0  30     66    130     0
341  107       290      0  26     63    112     0
342  129       294      0  32     62    170     1
343  126       274      0  39     62    122     0
344  116       293      1  26     64    125     0
345  124       294      0  26     62    122     0
346  123       281      0  23     68    136     0
347  145       315      0  39     67    143     1
348  102       278      0  27     67    135     1
349  129       293      0  30     65    130     1
350   98       276      1  22     61    121     0
351  110       272      0  28     60    108     0
352  135       282      0  24     67    128     1
353  101       278      1  20     62    105     0
354   96       266      0  26     65    125     0
355  104       276      1  18     60    109     1
356  100       249      0  24     67    100     0
357  154       292      0  40     66    145     0
358  127       293      0  31     67    137     0
359  126       288      0  31     62    150     0
360  126       282      1  23     66    115     1
361  127       279      0  26     67    155     1
362   98       275      0  25     65    112     1
363  127       288      1  21     66    130     0
364  129       299      0  22     68    145     0
365  131       292      1  22     64    124     1
366  132       289      1  19     66    145     0
367  127       280      0  27     62    118     0
368   99       313      1  34     59    100     1
369  115       290      0  30     64    140     1
370  145       290      1  24     67    125     0
371  102       249      1  23     67    134     1
372  136       299      0  29     64    115     0
373  121       282      0  22     66    133     0
374  120       286      0  25     62    105     0
375  118       261      0  26     60    104     0
376  127       304      1  26     62    105     0
377  132       281      1  24     63    117     0
378  102       258      1  22     65    135     0
379  143       279      0  39     65    129     1
380  118       277      0  25     62    120     0
381  102       286      1  22     64    140     0
382  163       280      0  35     69    139     0
383  132       294      0  32     64    116     0
384  116       276      0  33     61    180     0
385  138       288      1  19     66    124     0
386  139       279      0  20     64    143     0
387  132       298      1  23     61    137     0
388   87       282      0  27     63    104     1
389  131       297      0  30     67    132     0
390  130       282      0  26     67    147     1
391  123       290      0  28     66    107     1
392  115       276      1  18     63    110     0
393  116       272      0  27     64    130     1
394  119       286      1  20     67    130     0
395  125       279      1  19     67    135     0
396  144       282      0  33     66    155     1
397  123       269      0  26     67    132     0
398  120       276      0  23     66    114     0
399  140       251      0  28     63    210     0
400  120       271      1  17     64    142     1
401  120       289      1  31     59    102     0
402  146       280      0  23     61    145     0
403  112       283      1  21     62    102     1
404  132       278      0  20     64    150     1
405  146       263      0  39     53    110     1
406  122       275      0  30     68    140     0
407  128       292      0  32     66    130     0
408  119       277      0  24     63    120     1
409  135       278      0  27     66    148     0
410  129       235      0  24     66    135     0
411  116       293      1  28     62    108     0
412  100       275      0  27     64    111     1
413  138       257      0  38     67    138     0
414  123       282      0  22     65    130     0
415  113       288      1  21     61    120     0
416  129       280      1  24     65    140     1
417  122       280      0  24     67    127     1
418  132       281      1  21     67    140     0
419  120       269      1  40     63    130     0
420  114       283      1  20     65    115     0
421  130       280      0  29     66    135     0
422  117       286      0  32     66    127     1
423  142       285      0  33     63    124     0
424  144       273      0  27     62    118     1
425  127       262      1  32     64    125     0
426  115       270      0  25     67    165     1
427   85       258      0  41     67    137     0
428   99       274      0  28     66    118     1
429  123       323      1  17     64    140     0
430  112       281      1  23     61    150     0
431   68       223      0  32     66    149     1
432  102       283      1  19     65    127     1
433  109       273      0  37     65    138     1
434  102       267      1  25     60     93     1
435   99       275      0  23     61    125     1
436   78       256      1  29     65    123     0
437  128       284      1  19     66    111     1
438  107       303      1  25     67    133     0
439  136       295      0  23     64    147     0
440  101       278      0  27     61     99     1
441  100       275      1  25     64    125     0
442  109       272      0  41     66    154     1
443  117       281      1  21     70    141     1
444   88       252      1  21     60    115     1
445   95       270      0  35     65    135     1
446  127       291      1  24     66    135     1
447  107       293      0  20     65    155     1
448  126       262      0  37     66    135     1
449   98       278      0  27     63    110     1
450   96       241      0  23     64    130     1
451  104       282      0  24     63    144     0
452  133       273      1  33     63    135     0
453   93       267      0  25     63    135     1
454  101       280      1  24     65    123     1
455  118       277      0  21     64    155     0
456  130       289      0  21     61    130     1
457  125       288      0  22     63    128     1
458  140       291      1  19     65    122     0
459  115       290      1  19     65    118     0
460  130       293      0  26     63    123     0
461  114       277      1  31     64    125     0
462  105       278      0  21     64    120     0
463  101       289      1  31     60    125     0
464  132       286      0  26     67    122     1
465  112       252      0  37     64    162     0
466   69       232      0  31     59    103     1
467  114       264      0  26     63    110     1
468  123       267      0  29     63    111     1
469  129       284      1  20     66    130     1
470  114       283      1  15     64    117     1
471  115       290      0  31     62     95     0
472   98       272      1  35     64    129     0
473  128       283      0  27     67    126     0
474  119       271      0  28     64    175     1
475  154       288      0  25     65    147     0
476  127       247      1  21     63    140     0
477  131       263      0  29     64    180     1
478  129       288      0  28     59    102     0
479  114       286      1  22     64    116     1
480  110       280      0  29     62    110     1
481  103       268      0  31     64    150     1
482  117       287      0  20     65    115     1
483  138       282      0  25     64    120     0
484  126       280      0  24     66    147     1
485  124       271      0  23     66    145     0
486  111       284      0  34     62    110     0
487  132       282      0  28     67    200     1
488  103       240      0  26     65    140     0
489  158       285      0  28     62    130     0
490  101       286      1  21     64    117     1
491  132       290      0  26     66    125     0
492  114       293      1  20     66    180     1
493   71       277      0  40     69    135     0
494  116       282      0  19     64    120     0
495  108       271      0  19     60    109     1
496  123       298      0  25     64    113     1
497  129       289      0  37     63    132     0
498  134       282      0  24     62    110     0
499  113       298      0  30     60    124     1
500  123       277      1  20     65    160     0
501  147       277      0  30     68    160     0
502  121       270      1  20     62    103     0
503  125       284      1  19     67    130     0
504  115       277      1  25     66    128     0
505  101       289      0  27     59     96     0
506   93       271      0  30     65    127     1
507  109       275      0  33     66    120     0
508  115       276      1  23     60    106     0
509  130       293      1  23     65    122     1
510  123       278      0  21     61     89     0
511  111       300      0  20     64    108     1
512   97       279      1  24     64    138     1
513  122       292      1  25     65    125     0
514  124       300      0  28     63     95     0
515  129       276      0  26     66    145     0
516  124       290      0  26     59    140     0
517  107       280      0  20     60    107     1
518  142       273      1  22     62    125     0
519  129       287      1  29     66    135     0
520  174       281      0  37     67    155     0
521  105       264      0  30     65    105     1
522  103       291      1  26     63    102     0
523  124       285      1  27     63    114     0
524  105       265      0  43     65    124     0
525  133       275      0  36     65    137     1
526  161       302      1  22     70    170     1
527  105       260      0  23     64    197     0
528  108       281      0  41     66    171     0
529  153       297      0  27     66    145     0
530  133       280      1  25     61    130     0
531  115       269      0  41     63    165     1
532  127       254      0  27     67    146     1
533  128       271      0  41     65    135     1
534  117       265      0  40     68    134     1
535  123       274      0  23     66    135     0
536  119       288      1  22     64    132     1
537  141       284      1  17     64    105     0
538   91       260      0  26     62    110     1
539  116       291      0  29     65    133     1
540  116       255      0  24     65    132     0
541  121       273      0  32     64    112     0
542  111       274      0  36     67    159     0
543  102       257      0  25     66    135     0
544  118       283      0  24     65    150     0
545  126       294      1  22     65    125     1
546   98       286      0  31     62    105     1
547  131       288      1  28     65    125     0
548  115       278      0  21     60    113     0
549  103       281      1  22     59     98     1
550  147       301      0  26     65    130     0
551  123       308      1  19     65    135     0
552  125       283      0  22     65    119     0
553  117       270      0  30     67    130     1
554   99       268      0  29     71    150     0
555  115       283      0  31     66    127     1
556  116       265      0  36     63    120     0
557  118       297      0  35     68    140     1
558  170       303      1  21     64    129     0
559  104       270      0  25     61    110     0
560  108       269      1  20     62    114     0
561  144       289      1  17     69    130     1
562   99       250      1  26     66    115     0
563   97       263      1  25     63    107     0
564   85       270      1  19     63    118     1
565  130       285      1  24     66    126     1
566  117       275      0  22     62    115     1
567  109       302      0  24     64    110     0
568  147       285      0  24     64    137     0
569  105       281      1  23     64    115     0
570  135       278      1  27     68    139     1
571  115       273      1  23     67    215     1
572  123       280      0  23     65    140     1
573  105       274      1  26     61    100     0
574  154       271      0  36     69    160     1
575  110       276      0  25     63    107     1
576  119       285      1  26     62    108     0
577  103       292      1  28     62    132     0
578  117       272      0  25     64    116     0
579  120       289      0  23     69    165     0
580  145       278      0  24     62    109     0
581  104       271      0  20     62     98     1
582  123       268      1  18     62    110     1
583  124       272      0  27     62    110     0
584  129       275      0  26     64    115     1
585   91       248      0  33     63    202     0
586  109       295      0  32     61    135     0
587  108       268      0  22     58    112     1
588   79       268      0  36     61    108     0
589  133       301      0  23     62    108     0
590  114       309      1  27     62    118     0
591  128       273      0  34     61    125     0
592  129       280      1  24     65    126     0
593   97       234      1  26     65    112     0
594  103       276      1  21     62    130     1
595  176       293      1  19     68    180     0
596  143       294      0  44     65    145     0
597  127       292      1  21     68    130     1
598  107       256      0  28     59     90     1
599  113       268      0  31     62    100     0
600  106       279      1  21     62    118     1
601  152       285      0  24     61    120     1
602  150       275      0  29     65    145     0
603  136       278      0  35     64    118     1
604  124       279      0  35     66    129     0
605  123       284      1  18     64    112     1
606  119       288      0  37     62    128     0
607  122       291      0  40     64    155     0
608  112       250      0  34     67    124     0
609   93       270      0  25     64    125     1
610  136       274      1  20     63    165     0
611  150       292      0  26     64    124     0
612   94       264      1  26     64    135     0
613  146       306      0  38     63    112     0
614  129       274      0  19     65    101     1
615  125       292      0  27     65    117     1
616  124       273      0  21     63    115     0
617  141       282      0  27     63    115     0
618   96       266      0  33     67    135     1
619  138       297      0  30     66    133     1
620  127       282      0  28     67    134     0
621  114       251      0  26     64    119     1
622  103       297      0  31     64    125     0
623  127       288      1  20     65    115     1
624  113       274      0  23     63    108     1
625   99       249      1  31     57     98     1
626   97       279      0  33     61    105     1
627  116       275      1  20     68    145     0
628  126       297      0  26     66    120     1
629  119       277      0  28     66    130     1
630  123       283      0  27     62    110     0
631  129       287      0  24     60    107     0
632  117       256      0  37     65    132     1
633  100       275      0  26     60    115     0
634  131       274      0  28     64    118     1
635  146       279      0  27     64    124     0
636   84       267      0  29     60     95     0
637  115       302      0  28     64    116     0
638  115       281      0  25     60     94     0
639  118       284      0  28     70    145     1
640   91       292      1  19     61    125     0
641  112       255      0  39     60    115     0
642  115       316      1  29     64    110     0
643  110       269      0  38     61    102     0
644  117       277      0  34     66    140     0
645  109       268      1  29     65    120     1
646   99       267      0  22     62     94     0
647  131       274      0  27     62    160     1
648  136       291      1  25     61    105     0
649  130       298      0  20     62    120     0
650  134       296      0  35     60    117     1
651  128       271      0  29     65    126     1
652  150       286      0  38     67    175     0
653   86       284      0  39     65    174     1
654  115       278      0  26     63    112     1
655   78       237      1  23     63    144     0
656  100       295      1  21     68    125     1
657  116       270      0  25     68    169     0
658  110       271      1  26     66    135     0
659  109       283      0  34     64    120     0
660  113       259      0  38     64    128     0
661  136       297      1  23     66    135     0
662  121       273      1  34     61    125     0
663  117       288      1  28     63    140     0
664  166       299      0  26     68    140     0
665   87       229      0  27     62    138     0
666  120       294      1  23     66    128     1
667   95       286      0  26     66    118     1
668  132       273      0  28     62    113     0
669   90       286      0  32     63    105     1
670  131       308      0  30     58    150     1
671  103       279      1  22     65    145     1
672  144       287      1  33     71    153     1
673  137       299      0  24     62    115     0
674  124       270      0  20     64    122     0
675  136       281      1  27     64    127     0
676  117       298      1  22     64    160     0
677  121       269      0  23     62    130     0
678  116       280      0  34     68    198     0
679  139       275      0  33     62    118     0
680  110       280      0  39     67    125     0
681   86       242      0  20     64    110     1
682  133       287      0  20     65    165     0
683   81       254      0  23     62    157     0
684  133       281      0  33     63    120     0
685  132       284      1  20     66    140     0
686  132       287      0  29     64    148     0
687  137       274      0  27     64    126     0
688   84       279      0  34     63    190     0
689  136       279      0  30     69    130     1
690   92       270      0  34     62    100     1
691  114       298      1  28     67    114     0
692  129       274      0  33     69    136     1
693  167       288      1  19     63    117     0
694  124       282      1  22     65    118     0
695  105       269      0  27     62    100     1
696  155       283      1  19     70    137     0
697  125       279      1  21     66    126     0
698  125       266      0  21     62    120     1
699  125       283      1  22     59     96     0
700  115       315      1  22     62    110     0
701  174       288      0  25     61    182     0
702  127       290      0  35     66    122     0
703  113       262      0  24     60    105     0
704  115       273      0  22     66    130     1
705  139       277      0  35     63    140     0
706  127       275      0  26     62    125     0
707  112       272      0  26     60     98     0
708  143       285      0  30     64    135     1
709  116       286      1  22     58    105     1
710  155       279      0  33     61    125     0
711  121       290      0  31     64    127     0
712  110       282      1  21     66    125     1
713   87       277      0  31     62    120     1
714  132       330      0  34     64    130     1
715  129       277      0  24     68    142     0
716  123       280      0  20     62    105     1
717   91       279      1  27     62    118     0
718  147       286      0  30     68    147     0
719  144       289      0  20     62    106     0
720  128       292      0  30     64    127     0
721  137       318      1  19     64    110     0
722  104       289      0  24     60    104     1
723  120       271      0  32     63    130     0
724  112       277      1  23     64    118     0
725  138       286      0  26     63    111     0
726   96       280      0  27     63    105     1
727  134       285      0  35     62    134     0
728  126       285      0  24     64    140     0
729  112       300      0  29     62    121     0
730  138       313      1  27     65    111     0
731  110       275      0  25     63    120     0
732   83       253      0  29     63    110     1
733  112       288      1  20     62    110     0
734  148       286      0  38     68    160     0
735  119       300      1  34     63    124     0
736   86       246      0  25     64    113     1
737  110       269      0  38     63    145     1
738  126       282      0  23     61    120     0
739  125       272      0  30     60     96     0
740  136       252      0  27     63    130     0
741  127       283      1  29     64    119     0
742   84       272      0  25     64    150     1
743  131       278      0  22     66    124     0
744  123       286      1  21     67    130     1
745   96       282      1  30     68    127     1
746  110       286      0  26     62    100     0
747  123       282      0  29     68    164     0
748  152       286      1  19     67    135     0
749  127       288      0  28     65    155     0
750  117       269      1  21     64    149     1
751  125       277      0  29     66    139     1
752  139       273      0  29     68    130     0
753  114       280      0  31     66    134     1
754   96       280      1  34     62    127     1
755  124       289      0  29     63    110     0
756  107       272      0  30     64    140     1
757  113       277      0  38     64    108     0
758   98       292      1  20     65    124     1
759  119       285      1  28     65    127     0
760  107       268      0  37     58    112     1
761  117       255      0  26     61    120     0
762  117       305      0  24     64    155     0
763  144       276      0  23     67    129     1
764  136       268      0  30     63    132     1
765  121       278      0  28     69    132     0
766  165       282      0  29     66    145     0
767  120       279      0  38     64    124     0
768  125       280      0  30     65    130     1
769  137       285      0  29     65    110     0
770  100       288      1  28     61    108     1
771  134       284      0  28     62    112     0
772   88       262      0  20     65    118     1
773  108       291      0  39     65    135     0
774  123       271      0  41     64    162     0
775  141       277      0  38     66    162     0
776  130       270      1  19     66    130     0
777  139       299      1  20     67    112     0
778  130       283      0  32     65    118     0
779  113       289      1  26     59     91     0
780   77       238      1  23     63    103     1
781   62       228      0  24     61    107     0
782   93       245      0  33     61    100     1
783  109       275      1  37     63    112     1
784  145       283      0  27     65    125     1
785   92       224      0  19     63    134     1
786  120       281      0  26     61    115     0
787  135       284      0  39     67    141     0
788  113       287      0  36     63    118     0
789  126       251      1  28     64    123     0
790  143       270      1  27     70    148     0
791  128       282      1  25     64    125     0
792   98       262      0  22     67    120     0
793  110       306      1  32     61    122     0
794  162       284      0  27     64    126     0
795  116       292      1  20     65    118     0
796  128       284      0  23     62    110     0
797  111       275      1  18     61    108     1
798  137       280      0  34     60    107     0
799  100       264      0  29     64    120     1
800  160       271      0  32     67    215     0
801  112       267      1  22     62    138     0
802  134       297      0  27     67    170     1
803  145       308      0  35     64    110     1
804  116       295      0  32     65    120     0
805  126       278      0  26     64    150     1
806  111       285      0  29     65    130     0
807  126       282      0  33     62    117     0
808  109       291      0  39     64    107     0
809  136       291      0  41     66    191     0
810  119       286      0  22     63    185     1
811  103       267      1  21     66    150     1
812  124       284      1  17     62    112     0
813  155       286      0  31     66    127     0
814  122       282      1  21     66    110     0
815  113       285      0  26     66    140     0
816  122       273      0  26     66    210     0
817  126       293      1  27     62    111     0
818  116       277      0  41     64    124     1
819  102       294      0  21     65    130     1
820  110       181      0  27     64    133     0
821  133       285      1  30     64    160     0
822  125       283      0  29     65    125     0
823  164       286      1  32     66    143     0
824  133       297      0  36     61    125     0
825  124       293      1  19     65    150     0
826  122       306      1  22     62    100     0
827  121       271      1  34     63    129     1
828  100       272      0  30     64    150     1
829   90       266      1  26     67    135     0
830  128       272      1  18     67    109     0
831   86       276      1  23     65    125     1
832  123       282      0  30     63    118     0
833   87       275      0  28     63    110     1
834  128       291      1  27     63    132     0
835  120       288      0  28     63    125     0
836  125       301      1  35     68    181     0
837  118       265      0  27     61    123     0
838  116       284      1  24     66    117     0
839  131       262      0  22     67    135     0
840  151       286      1  22     66    130     0
841   88       273      0  20     66    110     1
842  137       284      0  30     67    110     0
843  127       289      0  23     67    140     0
844   96       278      1  18     60    120     1
845  129       281      0  31     67    155     0
846  128       288      1  26     65    114     0
847   85       255      0  24     68    159     0
848  111       281      1  27     64    112     0
849  124       275      0  28     61    116     0
850  112       292      1  28     62    110     1
851  115       281      0  28     61    128     1
852   72       271      0  39     61    136     0
853  122       281      1  24     65    137     1
854  116       291      0  26     66    153     0
855  127       272      0  20     64    130     1
856   90       266      0  23     61     99     1
857   99       273      1  27     59    115     0
858  144       307      1  26     66    125     0
859  138       280      1  30     65    175     0
860   58       245      0  34     64    156     1
861  109       265      1  24     63    107     1
862  110       277      1  19     62    160     0
863  129       278      0  27     63    128     0
864  150       284      0  40     67    130     0
865  128       279      0  27     66    135     0
866  142       284      1  31     66    137     1
867  115       268      1  31     64    125     0
868  108       283      0  35     62    108     0
869  139       281      0  27     63    137     0
870  115       275      0  25     61    155     1
871  136       288      0  23     62    217     0
872  163       289      1  25     64    126     1
873  131       285      0  26     64    130     0
874   77       238      0  38     67    135     1
875  124       283      1  33     67    156     1
876  104       270      1  26     62    115     0
877  102       267      1  24     61    109     1
878   94       268      0  30     62    105     1
879  158       295      1  37     70    137     0
880  112       275      1  21     68    143     1
881  119       286      0  26     64    123     1
882   97       279      0  29     68    178     1
883   99       252      0  21     64    120     0
884  115       264      1  23     67    134     1
885  139       284      0  37     61    121     0
886  144       304      1  27     58    102     1
887   99       270      0  22     63    115     1
888  105       280      1  22     63    116     0
889   89       275      0  34     66    170     0
890  129       270      0  43     67    160     0
891  119       270      1  20     64    109     0
892  114       291      0  35     60    112     0
893  106       289      0  28     67    120     1
894  122       292      1  34     65    133     0
895  136       261      0  24     65    110     0
896  121       286      1  22     69    130     1
897  112       282      0  26     65    122     0
898  112       266      0  26     64    122     0
899  123       314      0  22     61    121     1
900  139       286      0  33     65    125     1
901  125       290      0  36     59    105     0
902  105       295      1  20     64    112     1
903  130       276      0  41     68    130     0
904  146       294      0  22     66    145     1
905  133       290      0  21     64    145     0
906  147       296      1  19     67    124     0
907  109       269      0  23     63    113     0
908  122       286      0  23     64    120     1
909  135       260      0  43     65    135     0
910  117       272      0  32     66    118     0
911  138       284      0  30     66    133     1
912  120       283      0  28     64    122     1
913  119       273      0  35     65    125     1
914  118       278      1  19     62    126     0
915  105       330      0  23     64    112     1
916  113       306      1  21     65    137     0
917  148       291      1  21     63    115     0
918  140       281      1  22     69    135     0
919  134       287      1  33     67    131     0
920  120       280      0  31     61    111     0
921  123       296      1  26     64    110     1
922  102       275      0  43     64    160     0
923   55       204      0  35     65    140     0
924  103       276      1  19     63    149     1
925  123       283      0  21     65    110     0
926  105       270      1  27     65    134     1
927  138       289      0  33     65    155     0
928  128       281      0  28     63    150     0
929  139       285      0  30     65    129     1
930  104       288      1  27     61    122     1
931  159       296      1  27     64    112     0
932  118       276      0  29     62    130     1
933   99       285      0  25     69    128     1
934  144       281      0  20     63    120     0
935  121       270      0  25     62    108     1
936  117       265      1  24     66     98     0
937  119       293      1  23     65    127     0
938  105       281      1  19     61    130     0
939  125       283      0  37     63    145     1
940  119       259      0  37     62    130     0
941  101       273      0  39     60    113     0
942  105       277      1  25     64    156     0
943  110       281      0  27     60    110     0
944  100       270      1  21     65    132     1
945   98       284      0  29     68    140     0
946  127       276      0  37     64    159     0
947  117       324      0  22     62    164     1
948  122       278      0  37     68    114     0
949  122       273      1  23     64    130     1
950  118       281      1  36     66    140     1
951  137       303      1  23     66    127     1
952  120       275      0  32     63    115     1
953  143       285      0  27     68    185     0
954  108       270      0  29     67    124     1
955  131       284      1  19     61    114     1
956  110       277      0  36     61    116     0
957  105       276      0  20     62    112     1
958  125       255      0  23     63    133     0
959   78       258      1  24     66    115     1
960  114       289      0  36     60    115     0
961  111       278      0  29     65    145     1
962  103       250      0  40     59    140     0
963  114       276      0  26     62    127     0
964   75       247      0  36     64    120     1
965  169       296      0  33     67    185     0
966   94       271      0  36     61    130     1
967  150       287      0  36     62    135     0
968  144       248      0  30     70    145     0
969  144       291      0  28     67    130     0
970  143       313      0  20     68    150     0
971  145       304      1  25     63    109     1
972  121       285      0  34     64    110     0
973  105       256      0  31     66    142     0
974  134       286      0  25     64    125     0
975  129       294      1  21     65    132     0
976  114       276      0  24     63    110     0
977   97       265      0  30     61    110     0
978  160       292      0  28     64    120     0
979   65       237      0  31     67    130     0
980  145       288      0  28     64    116     0
981   95       273      0  23     60     90     0
982  139       293      1  21     69    130     0
983  123       288      0  27     63    125     0
984  109       283      0  23     65    112     1
985  110       268      0  34     64    127     0
986  122       296      1  24     65    132     0
987  115       307      0  34     65    128     1
988  108       279      1  19     64    115     0
989  120       287      0  23     67    116     1
990  131       269      0  36     68    145     0
991  136       283      1  24     63    119     0
992  125       290      0  32     63    135     0
993   96       285      1  20     66    117     1
994  102       282      1  29     65    125     1
995  102       288      1  18     65    117     0
996  112       277      1  22     67    120     0
997  135       272      0  30     65    130     0
998   91       266      0  23     60    120     1
999  129       276      0  31     63    125     0
1000 155       290      0  26     66    129     1
1001 109       274      0  33     69    144     1
1002  80       262      1  31     61    100     1
1003 125       273      0  30     64    145     0
1004  94       284      0  24     63    104     1
1005 148       281      0  27     63    110     1
1006  73       277      0  29     65    145     0
1007 123       267      1  19     66    132     1
1008  65       232      0  24     66    125     1
1009 118       279      1  21     64    108     0
1010 102       283      0  39     60    119     0
1011 120       280      0  24     61    118     0
1012 108       270      1  21     65    130     1
1013 122       280      1  45     62    128     0
1014 103       268      0  32     62     97     1
1015 105       312      0  41     61    115     1
1016 126       273      1  25     68    135     0
1017 145       316      0  22     67    142     0
1018 139       293      0  34     66    131     0
1019 124       290      0  26     65    165     0
1020 121       282      0  30     65    122     0
1021 126       299      1  21     60    114     0
1022 119       286      1  33     67    137     0
1023 114       277      1  19     63    107     0
1024 118       272      0  23     64    113     0
1025 127       295      0  36     65    145     0
1026 117       290      1  22     67    110     0
1027 137       277      0  41     65    126     0
1028 133       292      0  29     65    135     0
1029 100       264      0  28     60    111     1
1030 107       273      1  26     65    135     0
1031 115       276      1  20     62    105     1
1032  91       292      1  26     61    113     1
1033 112       287      0  27     64    110     1
1034 125       289      1  31     61    120     0
1035 157       291      0  33     65    121     0
1036 108       256      1  26     67    130     0
1037 130       279      0  31     62    122     0
1038 135       289      0  25     64    127     0
1039 123       277      0  24     66    122     0
1040 100       281      0  24     61    115     0
1041 124       277      1  23     64    104     0
1042 174       284      0  39     65    163     0
1043 129       278      0  26     67    146     0
1044 119       275      0  27     59    113     1
1045 126       272      1  35     61    120     1
1046 128       267      0  37     61    142     0
1047 116       282      1  19     64    124     0
1048 100       285      0  18     68    127     1
1049  96       285      0  37     66    135     1
1050 131       279      1  20     68    122     1
1051 110       292      0  35     62    127     0
1052 108       278      0  28     63    125     1
1053 129       275      0  24     65    135     0
1054 141       285      0  23     67    150     0
1055 110       276      0  31     70    155     0
1056 118       273      0  21     63    120     0
1057 111       267      1  24     60    115     0
1058 160       297      0  20     68    136     0
1059 120       280      0  30     60    115     0
1060 121       281      0  29     63    108     0
1061 113       282      0  30     64    118     1
1062 117       270      0  23     58    115     0
1063 158       267      0  35     64    125     0
1064 128       277      0  39     61    120     0
1065 158       289      0  30     66    140     0
1066 133       289      0  22     65    123     1
1067 163       298      0  37     61     98     0
1068 128       282      1  19     66    118     0
1069 126       271      1  21     60    105     0
1070 127       283      0  42     62    154     1
1071 134       287      0  40     63    118     0
1072 140       274      0  41     63    122     0
1073 102       285      0  29     63    117     1
1074 100       252      0  24     61    150     0
1075 120       295      0  29     59    100     1
1076  98       279      1  18     65    115     1
1077 130       246      0  19     62    118     0
1078 104       280      0  41     63    118     1
1079 122       285      0  31     62    102     1
1080 137       276      1  25     64    127     0
1081 114       285      1  20     61    104     0
1082  63       236      1  24     58     99     0
1083  98       318      0  23     63    107     0
1084  99       268      0  32     63    124     1
1085  89       238      1  26     64    136     0
1086 117       283      0  22     65    142     1
1087 143       281      0  29     67    132     0
1088 106       279      0  29     63    125     1
1089  99       246      0  35     62    106     0
1090 156       300      0  27     65    120     1
1091  72       266      1  25     66    200     1
1092  75       266      0  37     61    113     1
1093  97       285      0  35     61    112     1
1094 106       264      0  41     64    114     0
1095  91       225      0  18     68    117     1
1096 117       269      1  28     61     99     0
1097 117       284      0  25     66    177     1
1098 112       291      0  23     66    145     0
1099 112       270      0  29     61    124     0
1100 141       293      0  28     61    125     0
1101 131       259      0  19     63    134     0
1102 130       290      0  19     65    123     1
1103 132       270      0  26     67    140     0
1104 114       265      0  23     67    130     1
1105 160       291      0  34     64    110     1
1106 106       283      0  24     63    119     0
1107  84       260      1  20     64    104     1
1108 112       268      1  25     59    103     0
1109 139       311      0  37     66    135     0
1110 104       267      0  30     63    180     0
1111 130       294      0  32     63    110     1
1112  71       254      0  19     61    145     1
1113  82       270      0  21     65    150     1
1114 119       280      1  21     64    128     0
1115 123       353      0  26     63    115     0
1116 115       278      0  27     59     95     0
1117 124       289      1  21     67    145     1
1118 138       292      0  25     65    130     1
1119  88       276      0  25     63    103     1
1120 128       241      1  17     64    126     0
1121  82       274      0  31     64    101     1
1122 100       274      0  24     63    113     0
1123 114       271      0  32     61    130     0
1124  97       269      0  20     65    137     1
1125 126       298      0  24     61    112     0
1126 122       275      1  20     65    127     0
1127 152       295      0  39     62    140     0
1128 116       274      0  21     62    110     1
1129 132       302      0  36     63    145     1
1130  84       260      1  37     66    140     0
1131 119       277      1  18     61     89     1
1132 106       312      0  24     62    135     1
1133 139       291      0  24     65    160     0
1134 103       273      0  36     65    158     1
1135 112       299      0  24     67    145     1
1136  96       276      0  33     64    127     1
1137 102       281      1  19     67    135     1
1138 120       300      0  34     63    150     1
1139 102       338      0  19     64    170     0
1140  97       255      1  22     63    107     1
1141 113       285      0  22     70    145     0
1142 130       297      0  32     58    130     0
1143  97       260      1  25     63    115     1
1144 116       273      0  31     61    120     0
1145 114       266      0  29     64    113     0
1146 127       242      0  17     61    135     1
1147  87       247      1  18     66    125     1
1148 141       281      0  29     54    156     1
1149 144       283      1  25     66    140     0
1150 116       273      0  33     66    130     1
1151  75       265      0  21     65    103     1
1152 138       286      1  28     68    120     0
1153  99       271      0  39     69    151     0
1154 118       293      0  21     63    103     0
1155  97       266      0  24     62    109     0
1156 146       319      0  28     66    145     0
1157  81       285      0  19     63    150     1
1158 110       321      0  28     66    180     0
1159 135       284      1  19     60     95     0
1160 114       290      1  21     65    120     1
1161 124       288      1  21     64    116     1
1162 115       262      1  23     64    136     1
1163 143       281      0  28     65    135     1
1164 113       287      1  29     70    145     1
1165 109       244      1  21     63    102     1
1166 103       278      0  30     60     87     1
1167 118       276      0  34     64    116     0
1168 127       290      0  27     65    121     0
1169 132       270      0  27     65    126     0
1170 113       275      1  27     60    100     0
1171 128       265      0  24     67    120     0
1172 130       291      0  30     65    150     1
1173 125       281      1  21     65    110     0
1174 117       297      0  38     65    129     0
> head(data, 4)
  bwt gestation parity age height weight smoke
1 120       284      0  27     62    100     0
2 113       282      0  33     64    135     0
3 128       279      0  28     64    115     1
4 108       282      0  23     67    125     1
> data$age
   [1] 27 33 28 23 25 33 23 25 30 27 32 23 36 30 38 25 33 33 43 22 27 25 30 23
  [25] 27 26 20 32 28 26 34 30 23 24 22 24 23 27 30 23 27 37 27 32 25 26 26 26
  [49] 31 28 31 30 22 26 33 28 33 24 22 23 23 28 36 37 26 31 38 27 26 25 24 24
  [73] 21 26 39 27 27 35 23 25 33 30 32 37 22 33 28 27 23 22 28 37 29 27 33 36
  [97] 24 37 33 22 27 29 28 19 22 29 33 25 32 39 24 26 35 34 31 25 23 30 35 28
 [121] 25 20 25 24 25 31 24 28 21 27 39 32 25 30 32 23 24 29 24 38 29 29 20 21
 [145] 22 24 22 21 43 36 30 22 22 29 26 23 22 25 24 23 30 31 30 25 32 25 23 23
 [169] 23 29 21 25 24 20 28 35 22 26 26 30 22 22 22 34 19 25 20 23 23 22 26 38
 [193] 29 19 25 23 28 21 33 27 34 22 28 24 20 20 26 35 28 23 21 23 33 42 19 31
 [217] 33 22 23 24 30 22 25 27 25 21 32 28 24 24 38 23 21 29 22 21 30 23 28 30
 [241] 27 22 25 23 40 39 23 38 25 22 35 20 42 29 20 19 40 20 30 36 33 23 27 21
 [265] 28 27 20 27 22 35 20 23 25 36 34 26 26 29 25 24 27 21 26 19 29 24 18 32
 [289] 29 30 25 31 35 24 29 25 25 21 31 24 33 34 21 39 25 28 29 29 23 22 23 32
 [313] 26 23 22 32 30 27 30 25 22 37 42 23 22 24 31 33 18 19 22 40 24 22 24 32
 [337] 30 23 19 30 26 32 39 26 26 23 39 27 30 22 28 24 20 26 18 24 40 31 31 23
 [361] 26 25 21 22 22 19 27 34 30 24 23 29 22 25 26 26 24 22 39 25 22 35 32 33
 [385] 19 20 23 27 30 26 28 18 27 20 19 33 26 23 28 17 31 23 21 20 39 30 32 24
 [409] 27 24 28 27 38 22 21 24 24 21 40 20 29 32 33 27 32 25 41 28 17 23 32 19
 [433] 37 25 23 29 19 25 23 27 25 41 21 21 35 24 20 37 27 23 24 33 25 24 21 21
 [457] 22 19 19 26 31 21 31 26 37 31 26 29 20 15 31 35 27 28 25 21 29 28 22 29
 [481] 31 20 25 24 23 34 28 26 28 21 26 20 40 19 19 25 37 24 30 20 30 20 19 25
 [505] 27 30 33 23 23 21 20 24 25 28 26 26 20 22 29 37 30 26 27 43 36 22 23 41
 [529] 27 25 41 27 41 40 23 22 17 26 29 24 32 36 25 24 22 31 28 21 22 26 19 22
 [553] 30 29 31 36 35 21 25 20 17 26 25 19 24 22 24 24 23 27 23 23 26 36 25 26
 [577] 28 25 23 24 20 18 27 26 33 32 22 36 23 27 34 24 26 21 19 44 21 28 31 21
 [601] 24 29 35 35 18 37 40 34 25 20 26 26 38 19 27 21 27 33 30 28 26 31 20 23
 [625] 31 33 20 26 28 27 24 37 26 28 27 29 28 25 28 19 39 29 38 34 29 22 27 25
 [649] 20 35 29 38 39 26 23 21 25 26 34 38 23 34 28 26 27 23 26 28 32 30 22 33
 [673] 24 20 27 22 23 34 33 39 20 20 23 33 20 29 27 34 30 34 28 33 19 22 27 19
 [697] 21 21 22 22 25 35 24 22 35 26 26 30 22 33 31 21 31 34 24 20 27 30 20 30
 [721] 19 24 32 23 26 27 35 24 29 27 25 29 20 38 34 25 38 23 30 27 29 25 22 21
 [745] 30 26 29 19 28 21 29 29 31 34 29 30 38 20 28 37 26 24 23 30 28 29 38 30
 [769] 29 28 28 20 39 41 38 19 20 32 26 23 24 33 37 27 19 26 39 36 28 27 25 22
 [793] 32 27 20 23 18 34 29 32 22 27 35 32 26 29 33 39 41 22 21 17 31 21 26 26
 [817] 27 41 21 27 30 29 32 36 19 22 34 30 26 18 23 30 28 27 28 35 27 24 22 22
 [841] 20 30 23 18 31 26 24 27 28 28 28 39 24 26 20 23 27 26 30 34 24 19 27 40
 [865] 27 31 31 35 27 25 23 25 26 38 33 26 24 30 37 21 26 29 21 23 37 27 22 22
 [889] 34 43 20 35 28 34 24 22 26 26 22 33 36 20 41 22 21 19 23 23 43 32 30 28
 [913] 35 19 23 21 21 22 33 31 26 43 35 19 21 27 33 28 30 27 27 29 25 20 25 24
 [937] 23 19 37 37 39 25 27 21 29 37 22 37 23 36 23 32 27 29 19 36 20 23 24 36
 [961] 29 40 26 36 33 36 36 30 28 20 25 34 31 25 21 24 30 28 31 28 23 21 27 23
 [985] 34 24 34 19 23 36 24 32 20 29 18 22 30 23 31 26 33 31 30 24 27 29 19 24
[1009] 21 39 24 21 45 32 41 25 22 34 26 30 21 33 19 23 36 22 41 29 28 26 20 26
[1033] 27 31 33 26 31 25 24 24 23 39 26 27 35 37 19 18 37 20 35 28 24 23 31 21
[1057] 24 20 30 29 30 23 35 39 30 22 37 19 21 42 40 41 29 24 29 18 19 41 31 25
[1081] 20 24 23 32 26 22 29 29 35 27 25 37 35 41 18 28 25 23 29 28 19 19 26 23
[1105] 34 24 20 25 37 30 32 19 21 21 26 27 21 25 25 17 31 24 32 20 24 20 39 21
[1129] 36 37 18 24 24 36 24 33 19 34 19 22 22 32 25 31 29 17 18 29 25 33 21 28
[1153] 39 21 24 28 19 28 19 21 21 23 28 29 21 30 34 27 27 27 24 30 21 38
> group.variable = "height"
> data$group.variable
NULL
> data$get(group.variable)
Error: attempt to apply non-function
> get(group.variable)
Error in get(group.variable) : object 'height' not found
>     var.data = data$group.variable
> var.data
NULL
> names(data)[2:6]
[1] "gestation" "parity"    "age"       "height"    "weight"   
> which(names(data)[2:6] == group.variable)
[1] 4
> data[, 4]
   [1] 27 33 28 23 25 33 23 25 30 27 32 23 36 30 38 25 33 33 43 22 27 25 30 23
  [25] 27 26 20 32 28 26 34 30 23 24 22 24 23 27 30 23 27 37 27 32 25 26 26 26
  [49] 31 28 31 30 22 26 33 28 33 24 22 23 23 28 36 37 26 31 38 27 26 25 24 24
  [73] 21 26 39 27 27 35 23 25 33 30 32 37 22 33 28 27 23 22 28 37 29 27 33 36
  [97] 24 37 33 22 27 29 28 19 22 29 33 25 32 39 24 26 35 34 31 25 23 30 35 28
 [121] 25 20 25 24 25 31 24 28 21 27 39 32 25 30 32 23 24 29 24 38 29 29 20 21
 [145] 22 24 22 21 43 36 30 22 22 29 26 23 22 25 24 23 30 31 30 25 32 25 23 23
 [169] 23 29 21 25 24 20 28 35 22 26 26 30 22 22 22 34 19 25 20 23 23 22 26 38
 [193] 29 19 25 23 28 21 33 27 34 22 28 24 20 20 26 35 28 23 21 23 33 42 19 31
 [217] 33 22 23 24 30 22 25 27 25 21 32 28 24 24 38 23 21 29 22 21 30 23 28 30
 [241] 27 22 25 23 40 39 23 38 25 22 35 20 42 29 20 19 40 20 30 36 33 23 27 21
 [265] 28 27 20 27 22 35 20 23 25 36 34 26 26 29 25 24 27 21 26 19 29 24 18 32
 [289] 29 30 25 31 35 24 29 25 25 21 31 24 33 34 21 39 25 28 29 29 23 22 23 32
 [313] 26 23 22 32 30 27 30 25 22 37 42 23 22 24 31 33 18 19 22 40 24 22 24 32
 [337] 30 23 19 30 26 32 39 26 26 23 39 27 30 22 28 24 20 26 18 24 40 31 31 23
 [361] 26 25 21 22 22 19 27 34 30 24 23 29 22 25 26 26 24 22 39 25 22 35 32 33
 [385] 19 20 23 27 30 26 28 18 27 20 19 33 26 23 28 17 31 23 21 20 39 30 32 24
 [409] 27 24 28 27 38 22 21 24 24 21 40 20 29 32 33 27 32 25 41 28 17 23 32 19
 [433] 37 25 23 29 19 25 23 27 25 41 21 21 35 24 20 37 27 23 24 33 25 24 21 21
 [457] 22 19 19 26 31 21 31 26 37 31 26 29 20 15 31 35 27 28 25 21 29 28 22 29
 [481] 31 20 25 24 23 34 28 26 28 21 26 20 40 19 19 25 37 24 30 20 30 20 19 25
 [505] 27 30 33 23 23 21 20 24 25 28 26 26 20 22 29 37 30 26 27 43 36 22 23 41
 [529] 27 25 41 27 41 40 23 22 17 26 29 24 32 36 25 24 22 31 28 21 22 26 19 22
 [553] 30 29 31 36 35 21 25 20 17 26 25 19 24 22 24 24 23 27 23 23 26 36 25 26
 [577] 28 25 23 24 20 18 27 26 33 32 22 36 23 27 34 24 26 21 19 44 21 28 31 21
 [601] 24 29 35 35 18 37 40 34 25 20 26 26 38 19 27 21 27 33 30 28 26 31 20 23
 [625] 31 33 20 26 28 27 24 37 26 28 27 29 28 25 28 19 39 29 38 34 29 22 27 25
 [649] 20 35 29 38 39 26 23 21 25 26 34 38 23 34 28 26 27 23 26 28 32 30 22 33
 [673] 24 20 27 22 23 34 33 39 20 20 23 33 20 29 27 34 30 34 28 33 19 22 27 19
 [697] 21 21 22 22 25 35 24 22 35 26 26 30 22 33 31 21 31 34 24 20 27 30 20 30
 [721] 19 24 32 23 26 27 35 24 29 27 25 29 20 38 34 25 38 23 30 27 29 25 22 21
 [745] 30 26 29 19 28 21 29 29 31 34 29 30 38 20 28 37 26 24 23 30 28 29 38 30
 [769] 29 28 28 20 39 41 38 19 20 32 26 23 24 33 37 27 19 26 39 36 28 27 25 22
 [793] 32 27 20 23 18 34 29 32 22 27 35 32 26 29 33 39 41 22 21 17 31 21 26 26
 [817] 27 41 21 27 30 29 32 36 19 22 34 30 26 18 23 30 28 27 28 35 27 24 22 22
 [841] 20 30 23 18 31 26 24 27 28 28 28 39 24 26 20 23 27 26 30 34 24 19 27 40
 [865] 27 31 31 35 27 25 23 25 26 38 33 26 24 30 37 21 26 29 21 23 37 27 22 22
 [889] 34 43 20 35 28 34 24 22 26 26 22 33 36 20 41 22 21 19 23 23 43 32 30 28
 [913] 35 19 23 21 21 22 33 31 26 43 35 19 21 27 33 28 30 27 27 29 25 20 25 24
 [937] 23 19 37 37 39 25 27 21 29 37 22 37 23 36 23 32 27 29 19 36 20 23 24 36
 [961] 29 40 26 36 33 36 36 30 28 20 25 34 31 25 21 24 30 28 31 28 23 21 27 23
 [985] 34 24 34 19 23 36 24 32 20 29 18 22 30 23 31 26 33 31 30 24 27 29 19 24
[1009] 21 39 24 21 45 32 41 25 22 34 26 30 21 33 19 23 36 22 41 29 28 26 20 26
[1033] 27 31 33 26 31 25 24 24 23 39 26 27 35 37 19 18 37 20 35 28 24 23 31 21
[1057] 24 20 30 29 30 23 35 39 30 22 37 19 21 42 40 41 29 24 29 18 19 41 31 25
[1081] 20 24 23 32 26 22 29 29 35 27 25 37 35 41 18 28 25 23 29 28 19 19 26 23
[1105] 34 24 20 25 37 30 32 19 21 21 26 27 21 25 25 17 31 24 32 20 24 20 39 21
[1129] 36 37 18 24 24 36 24 33 19 34 19 22 22 32 25 31 29 17 18 29 25 33 21 28
[1153] 39 21 24 28 19 28 19 21 21 23 28 29 21 30 34 27 27 27 24 30 21 38
> data$height
   [1] 62 64 64 67 62 62 65 62 66 68 64 63 61 63 63 65 60 68 66 56 67 66 68 65
  [25] 65 58 65 65 66 61 61 66 60 65 67 63 63 65 61 63 61 65 63 66 60 66 63 62
  [49] 65 61 64 67 60 70 65 60 61 61 67 65 63 63 65 63 69 63 63 66 63 66 62 60
  [73] 62 63 63 63 62 65 64 68 67 66 65 63 70 59 62 60 61 64 61 62 64 60 64 65
  [97] 61 66 66 65 64 65 65 67 66 64 66 67 66 65 61 66 67 69 69 61 65 62 66 67
 [121] 62 67 64 60 66 64 69 65 65 65 62 65 65 63 61 66 63 71 68 66 68 61 66 64
 [145] 68 60 60 67 62 66 63 63 65 69 67 65 62 68 65 61 66 72 66 65 62 64 62 65
 [169] 64 63 62 63 61 58 59 66 63 63 65 63 63 66 66 61 63 64 63 63 61 61 68 65
 [193] 63 62 62 61 64 65 67 70 61 65 62 63 64 64 68 65 66 63 62 63 66 65 64 66
 [217] 63 63 63 68 63 65 65 65 67 62 66 65 68 63 59 63 61 65 64 64 66 63 66 64
 [241] 62 65 66 63 64 66 60 67 61 63 66 62 67 65 65 66 65 67 66 59 62 63 68 66
 [265] 64 71 65 63 67 64 68 71 63 60 59 60 61 64 62 64 61 65 66 64 66 65 62 60
 [289] 68 66 62 62 63 67 65 67 66 66 67 66 64 66 63 60 62 67 64 63 65 64 67 64
 [313] 62 64 59 63 67 68 65 61 67 65 63 64 66 59 65 63 63 67 64 62 64 62 63 64
 [337] 66 64 66 66 63 62 62 64 62 68 67 67 65 61 60 67 62 65 60 67 66 67 62 66
 [361] 67 65 66 68 64 66 62 59 64 67 67 64 66 62 60 62 63 65 65 62 64 69 64 61
 [385] 66 64 61 63 67 67 66 63 64 67 67 66 67 66 63 64 59 61 62 64 53 68 66 63
 [409] 66 66 62 64 67 65 61 65 67 67 63 65 66 66 63 62 64 67 67 66 64 61 66 65
 [433] 65 60 61 65 66 67 64 61 64 66 70 60 65 66 65 66 63 64 63 63 63 65 64 61
 [457] 63 65 65 63 64 64 60 67 64 59 63 63 66 64 62 64 67 64 65 63 64 59 64 62
 [481] 64 65 64 66 66 62 67 65 62 64 66 66 69 64 60 64 63 62 60 65 68 62 67 66
 [505] 59 65 66 60 65 61 64 64 65 63 66 59 60 62 66 67 65 63 63 65 65 70 64 66
 [529] 66 61 63 67 65 68 66 64 64 62 65 65 64 67 66 65 65 62 65 60 59 65 65 65
 [553] 67 71 66 63 68 64 61 62 69 66 63 63 66 62 64 64 64 68 67 65 61 69 63 62
 [577] 62 64 69 62 62 62 62 64 63 61 58 61 62 62 61 65 65 62 68 65 68 59 62 62
 [601] 61 65 64 66 64 62 64 67 64 63 64 64 63 65 65 63 63 67 66 67 64 64 65 63
 [625] 57 61 68 66 66 62 60 65 60 64 64 60 64 60 70 61 60 64 61 66 65 62 62 61
 [649] 62 60 65 67 65 63 63 68 68 66 64 64 66 61 63 68 62 66 66 62 63 58 65 71
 [673] 62 64 64 64 62 68 62 67 64 65 62 63 66 64 64 63 69 62 67 69 63 65 62 70
 [697] 66 62 59 62 61 66 60 66 63 62 60 64 58 61 64 66 62 64 68 62 62 68 62 64
 [721] 64 60 63 64 63 63 62 64 62 65 63 63 62 68 63 64 63 61 60 63 64 64 66 67
 [745] 68 62 68 67 65 64 66 68 66 62 63 64 64 65 65 58 61 64 67 63 69 66 64 65
 [769] 65 61 62 65 65 64 66 66 67 65 59 63 61 61 63 65 63 61 67 63 64 70 64 67
 [793] 61 64 65 62 61 60 64 67 62 67 64 65 64 65 62 64 66 63 66 62 66 66 66 66
 [817] 62 64 65 64 64 65 66 61 65 62 63 64 67 67 65 63 63 63 63 68 61 66 67 66
 [841] 66 67 67 60 67 65 68 64 61 62 61 61 65 66 64 61 59 66 65 64 63 62 63 67
 [865] 66 66 64 62 63 61 62 64 64 67 67 62 61 62 70 68 64 68 64 67 61 58 63 63
 [889] 66 67 64 60 67 65 65 69 65 64 61 65 59 64 68 66 64 67 63 64 65 66 66 64
 [913] 65 62 64 65 63 69 67 61 64 64 65 63 65 65 65 63 65 61 64 62 69 63 62 66
 [937] 65 61 63 62 60 64 60 65 68 64 62 68 64 66 66 63 68 67 61 61 62 63 66 60
 [961] 65 59 62 64 67 61 62 70 67 68 63 64 66 64 65 63 61 64 67 64 60 69 63 65
 [985] 64 65 65 64 67 68 63 63 66 65 65 67 65 60 63 66 69 61 64 63 63 65 66 66
[1009] 64 60 61 65 62 62 61 68 67 66 65 65 60 67 63 64 65 67 65 65 60 65 62 61
[1033] 64 61 65 67 62 64 66 61 64 65 67 59 61 61 64 68 66 68 62 63 65 67 70 63
[1057] 60 68 60 63 64 58 64 61 66 65 61 66 60 62 63 63 63 61 59 65 62 63 62 64
[1081] 61 58 63 63 64 65 67 63 62 65 66 61 61 64 68 61 66 66 61 61 63 65 67 67
[1105] 64 63 64 59 66 63 63 61 65 64 63 59 67 65 63 64 64 63 61 65 61 65 62 62
[1129] 63 66 61 62 65 65 67 64 67 63 64 63 70 58 63 61 64 61 66 54 66 66 65 68
[1153] 69 63 62 66 63 66 60 65 64 64 65 70 63 60 64 65 65 60 67 65 65 65
> data[, 5]
   [1] 62 64 64 67 62 62 65 62 66 68 64 63 61 63 63 65 60 68 66 56 67 66 68 65
  [25] 65 58 65 65 66 61 61 66 60 65 67 63 63 65 61 63 61 65 63 66 60 66 63 62
  [49] 65 61 64 67 60 70 65 60 61 61 67 65 63 63 65 63 69 63 63 66 63 66 62 60
  [73] 62 63 63 63 62 65 64 68 67 66 65 63 70 59 62 60 61 64 61 62 64 60 64 65
  [97] 61 66 66 65 64 65 65 67 66 64 66 67 66 65 61 66 67 69 69 61 65 62 66 67
 [121] 62 67 64 60 66 64 69 65 65 65 62 65 65 63 61 66 63 71 68 66 68 61 66 64
 [145] 68 60 60 67 62 66 63 63 65 69 67 65 62 68 65 61 66 72 66 65 62 64 62 65
 [169] 64 63 62 63 61 58 59 66 63 63 65 63 63 66 66 61 63 64 63 63 61 61 68 65
 [193] 63 62 62 61 64 65 67 70 61 65 62 63 64 64 68 65 66 63 62 63 66 65 64 66
 [217] 63 63 63 68 63 65 65 65 67 62 66 65 68 63 59 63 61 65 64 64 66 63 66 64
 [241] 62 65 66 63 64 66 60 67 61 63 66 62 67 65 65 66 65 67 66 59 62 63 68 66
 [265] 64 71 65 63 67 64 68 71 63 60 59 60 61 64 62 64 61 65 66 64 66 65 62 60
 [289] 68 66 62 62 63 67 65 67 66 66 67 66 64 66 63 60 62 67 64 63 65 64 67 64
 [313] 62 64 59 63 67 68 65 61 67 65 63 64 66 59 65 63 63 67 64 62 64 62 63 64
 [337] 66 64 66 66 63 62 62 64 62 68 67 67 65 61 60 67 62 65 60 67 66 67 62 66
 [361] 67 65 66 68 64 66 62 59 64 67 67 64 66 62 60 62 63 65 65 62 64 69 64 61
 [385] 66 64 61 63 67 67 66 63 64 67 67 66 67 66 63 64 59 61 62 64 53 68 66 63
 [409] 66 66 62 64 67 65 61 65 67 67 63 65 66 66 63 62 64 67 67 66 64 61 66 65
 [433] 65 60 61 65 66 67 64 61 64 66 70 60 65 66 65 66 63 64 63 63 63 65 64 61
 [457] 63 65 65 63 64 64 60 67 64 59 63 63 66 64 62 64 67 64 65 63 64 59 64 62
 [481] 64 65 64 66 66 62 67 65 62 64 66 66 69 64 60 64 63 62 60 65 68 62 67 66
 [505] 59 65 66 60 65 61 64 64 65 63 66 59 60 62 66 67 65 63 63 65 65 70 64 66
 [529] 66 61 63 67 65 68 66 64 64 62 65 65 64 67 66 65 65 62 65 60 59 65 65 65
 [553] 67 71 66 63 68 64 61 62 69 66 63 63 66 62 64 64 64 68 67 65 61 69 63 62
 [577] 62 64 69 62 62 62 62 64 63 61 58 61 62 62 61 65 65 62 68 65 68 59 62 62
 [601] 61 65 64 66 64 62 64 67 64 63 64 64 63 65 65 63 63 67 66 67 64 64 65 63
 [625] 57 61 68 66 66 62 60 65 60 64 64 60 64 60 70 61 60 64 61 66 65 62 62 61
 [649] 62 60 65 67 65 63 63 68 68 66 64 64 66 61 63 68 62 66 66 62 63 58 65 71
 [673] 62 64 64 64 62 68 62 67 64 65 62 63 66 64 64 63 69 62 67 69 63 65 62 70
 [697] 66 62 59 62 61 66 60 66 63 62 60 64 58 61 64 66 62 64 68 62 62 68 62 64
 [721] 64 60 63 64 63 63 62 64 62 65 63 63 62 68 63 64 63 61 60 63 64 64 66 67
 [745] 68 62 68 67 65 64 66 68 66 62 63 64 64 65 65 58 61 64 67 63 69 66 64 65
 [769] 65 61 62 65 65 64 66 66 67 65 59 63 61 61 63 65 63 61 67 63 64 70 64 67
 [793] 61 64 65 62 61 60 64 67 62 67 64 65 64 65 62 64 66 63 66 62 66 66 66 66
 [817] 62 64 65 64 64 65 66 61 65 62 63 64 67 67 65 63 63 63 63 68 61 66 67 66
 [841] 66 67 67 60 67 65 68 64 61 62 61 61 65 66 64 61 59 66 65 64 63 62 63 67
 [865] 66 66 64 62 63 61 62 64 64 67 67 62 61 62 70 68 64 68 64 67 61 58 63 63
 [889] 66 67 64 60 67 65 65 69 65 64 61 65 59 64 68 66 64 67 63 64 65 66 66 64
 [913] 65 62 64 65 63 69 67 61 64 64 65 63 65 65 65 63 65 61 64 62 69 63 62 66
 [937] 65 61 63 62 60 64 60 65 68 64 62 68 64 66 66 63 68 67 61 61 62 63 66 60
 [961] 65 59 62 64 67 61 62 70 67 68 63 64 66 64 65 63 61 64 67 64 60 69 63 65
 [985] 64 65 65 64 67 68 63 63 66 65 65 67 65 60 63 66 69 61 64 63 63 65 66 66
[1009] 64 60 61 65 62 62 61 68 67 66 65 65 60 67 63 64 65 67 65 65 60 65 62 61
[1033] 64 61 65 67 62 64 66 61 64 65 67 59 61 61 64 68 66 68 62 63 65 67 70 63
[1057] 60 68 60 63 64 58 64 61 66 65 61 66 60 62 63 63 63 61 59 65 62 63 62 64
[1081] 61 58 63 63 64 65 67 63 62 65 66 61 61 64 68 61 66 66 61 61 63 65 67 67
[1105] 64 63 64 59 66 63 63 61 65 64 63 59 67 65 63 64 64 63 61 65 61 65 62 62
[1129] 63 66 61 62 65 65 67 64 67 63 64 63 70 58 63 61 64 61 66 54 66 66 65 68
[1153] 69 63 62 66 63 66 60 65 64 64 65 70 63 60 64 65 65 60 67 65 65 65
> which(names(data)[1:6] == group.variable)
[1] 5
> names(data)
[1] "bwt"       "gestation" "parity"    "age"       "height"    "weight"   
[7] "smoke"    
>     var.data = data[, which(names(data) == group.variable)]
> var.data
   [1] 62 64 64 67 62 62 65 62 66 68 64 63 61 63 63 65 60 68 66 56 67 66 68 65
  [25] 65 58 65 65 66 61 61 66 60 65 67 63 63 65 61 63 61 65 63 66 60 66 63 62
  [49] 65 61 64 67 60 70 65 60 61 61 67 65 63 63 65 63 69 63 63 66 63 66 62 60
  [73] 62 63 63 63 62 65 64 68 67 66 65 63 70 59 62 60 61 64 61 62 64 60 64 65
  [97] 61 66 66 65 64 65 65 67 66 64 66 67 66 65 61 66 67 69 69 61 65 62 66 67
 [121] 62 67 64 60 66 64 69 65 65 65 62 65 65 63 61 66 63 71 68 66 68 61 66 64
 [145] 68 60 60 67 62 66 63 63 65 69 67 65 62 68 65 61 66 72 66 65 62 64 62 65
 [169] 64 63 62 63 61 58 59 66 63 63 65 63 63 66 66 61 63 64 63 63 61 61 68 65
 [193] 63 62 62 61 64 65 67 70 61 65 62 63 64 64 68 65 66 63 62 63 66 65 64 66
 [217] 63 63 63 68 63 65 65 65 67 62 66 65 68 63 59 63 61 65 64 64 66 63 66 64
 [241] 62 65 66 63 64 66 60 67 61 63 66 62 67 65 65 66 65 67 66 59 62 63 68 66
 [265] 64 71 65 63 67 64 68 71 63 60 59 60 61 64 62 64 61 65 66 64 66 65 62 60
 [289] 68 66 62 62 63 67 65 67 66 66 67 66 64 66 63 60 62 67 64 63 65 64 67 64
 [313] 62 64 59 63 67 68 65 61 67 65 63 64 66 59 65 63 63 67 64 62 64 62 63 64
 [337] 66 64 66 66 63 62 62 64 62 68 67 67 65 61 60 67 62 65 60 67 66 67 62 66
 [361] 67 65 66 68 64 66 62 59 64 67 67 64 66 62 60 62 63 65 65 62 64 69 64 61
 [385] 66 64 61 63 67 67 66 63 64 67 67 66 67 66 63 64 59 61 62 64 53 68 66 63
 [409] 66 66 62 64 67 65 61 65 67 67 63 65 66 66 63 62 64 67 67 66 64 61 66 65
 [433] 65 60 61 65 66 67 64 61 64 66 70 60 65 66 65 66 63 64 63 63 63 65 64 61
 [457] 63 65 65 63 64 64 60 67 64 59 63 63 66 64 62 64 67 64 65 63 64 59 64 62
 [481] 64 65 64 66 66 62 67 65 62 64 66 66 69 64 60 64 63 62 60 65 68 62 67 66
 [505] 59 65 66 60 65 61 64 64 65 63 66 59 60 62 66 67 65 63 63 65 65 70 64 66
 [529] 66 61 63 67 65 68 66 64 64 62 65 65 64 67 66 65 65 62 65 60 59 65 65 65
 [553] 67 71 66 63 68 64 61 62 69 66 63 63 66 62 64 64 64 68 67 65 61 69 63 62
 [577] 62 64 69 62 62 62 62 64 63 61 58 61 62 62 61 65 65 62 68 65 68 59 62 62
 [601] 61 65 64 66 64 62 64 67 64 63 64 64 63 65 65 63 63 67 66 67 64 64 65 63
 [625] 57 61 68 66 66 62 60 65 60 64 64 60 64 60 70 61 60 64 61 66 65 62 62 61
 [649] 62 60 65 67 65 63 63 68 68 66 64 64 66 61 63 68 62 66 66 62 63 58 65 71
 [673] 62 64 64 64 62 68 62 67 64 65 62 63 66 64 64 63 69 62 67 69 63 65 62 70
 [697] 66 62 59 62 61 66 60 66 63 62 60 64 58 61 64 66 62 64 68 62 62 68 62 64
 [721] 64 60 63 64 63 63 62 64 62 65 63 63 62 68 63 64 63 61 60 63 64 64 66 67
 [745] 68 62 68 67 65 64 66 68 66 62 63 64 64 65 65 58 61 64 67 63 69 66 64 65
 [769] 65 61 62 65 65 64 66 66 67 65 59 63 61 61 63 65 63 61 67 63 64 70 64 67
 [793] 61 64 65 62 61 60 64 67 62 67 64 65 64 65 62 64 66 63 66 62 66 66 66 66
 [817] 62 64 65 64 64 65 66 61 65 62 63 64 67 67 65 63 63 63 63 68 61 66 67 66
 [841] 66 67 67 60 67 65 68 64 61 62 61 61 65 66 64 61 59 66 65 64 63 62 63 67
 [865] 66 66 64 62 63 61 62 64 64 67 67 62 61 62 70 68 64 68 64 67 61 58 63 63
 [889] 66 67 64 60 67 65 65 69 65 64 61 65 59 64 68 66 64 67 63 64 65 66 66 64
 [913] 65 62 64 65 63 69 67 61 64 64 65 63 65 65 65 63 65 61 64 62 69 63 62 66
 [937] 65 61 63 62 60 64 60 65 68 64 62 68 64 66 66 63 68 67 61 61 62 63 66 60
 [961] 65 59 62 64 67 61 62 70 67 68 63 64 66 64 65 63 61 64 67 64 60 69 63 65
 [985] 64 65 65 64 67 68 63 63 66 65 65 67 65 60 63 66 69 61 64 63 63 65 66 66
[1009] 64 60 61 65 62 62 61 68 67 66 65 65 60 67 63 64 65 67 65 65 60 65 62 61
[1033] 64 61 65 67 62 64 66 61 64 65 67 59 61 61 64 68 66 68 62 63 65 67 70 63
[1057] 60 68 60 63 64 58 64 61 66 65 61 66 60 62 63 63 63 61 59 65 62 63 62 64
[1081] 61 58 63 63 64 65 67 63 62 65 66 61 61 64 68 61 66 66 61 61 63 65 67 67
[1105] 64 63 64 59 66 63 63 61 65 64 63 59 67 65 63 64 64 63 61 65 61 65 62 62
[1129] 63 66 61 62 65 65 67 64 67 63 64 63 70 58 63 61 64 61 66 54 66 66 65 68
[1153] 69 63 62 66 63 66 60 65 64 64 65 70 63 60 64 65 65 60 67 65 65 65
> var.data == data$height
   [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
  [15] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
  [29] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
  [43] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
  [57] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
  [71] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
  [85] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
  [99] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [113] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [127] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [141] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [155] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [169] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [183] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [197] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [211] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [225] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [239] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [253] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [267] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [281] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [295] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [309] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [323] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [337] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [351] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [365] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [379] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [393] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [407] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [421] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [435] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [449] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [463] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [477] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [491] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [505] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [519] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [533] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [547] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [561] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [575] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [589] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [603] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [617] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [631] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [645] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [659] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [673] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [687] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [701] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [715] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [729] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [743] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [757] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [771] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [785] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [799] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [813] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [827] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [841] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [855] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [869] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [883] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [897] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [911] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [925] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [939] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [953] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [967] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [981] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [995] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1009] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1023] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1037] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1051] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1065] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1079] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1093] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1107] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1121] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1135] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1149] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1163] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
> var.data
   [1] 62 64 64 67 62 62 65 62 66 68 64 63 61 63 63 65 60 68 66 56 67 66 68 65
  [25] 65 58 65 65 66 61 61 66 60 65 67 63 63 65 61 63 61 65 63 66 60 66 63 62
  [49] 65 61 64 67 60 70 65 60 61 61 67 65 63 63 65 63 69 63 63 66 63 66 62 60
  [73] 62 63 63 63 62 65 64 68 67 66 65 63 70 59 62 60 61 64 61 62 64 60 64 65
  [97] 61 66 66 65 64 65 65 67 66 64 66 67 66 65 61 66 67 69 69 61 65 62 66 67
 [121] 62 67 64 60 66 64 69 65 65 65 62 65 65 63 61 66 63 71 68 66 68 61 66 64
 [145] 68 60 60 67 62 66 63 63 65 69 67 65 62 68 65 61 66 72 66 65 62 64 62 65
 [169] 64 63 62 63 61 58 59 66 63 63 65 63 63 66 66 61 63 64 63 63 61 61 68 65
 [193] 63 62 62 61 64 65 67 70 61 65 62 63 64 64 68 65 66 63 62 63 66 65 64 66
 [217] 63 63 63 68 63 65 65 65 67 62 66 65 68 63 59 63 61 65 64 64 66 63 66 64
 [241] 62 65 66 63 64 66 60 67 61 63 66 62 67 65 65 66 65 67 66 59 62 63 68 66
 [265] 64 71 65 63 67 64 68 71 63 60 59 60 61 64 62 64 61 65 66 64 66 65 62 60
 [289] 68 66 62 62 63 67 65 67 66 66 67 66 64 66 63 60 62 67 64 63 65 64 67 64
 [313] 62 64 59 63 67 68 65 61 67 65 63 64 66 59 65 63 63 67 64 62 64 62 63 64
 [337] 66 64 66 66 63 62 62 64 62 68 67 67 65 61 60 67 62 65 60 67 66 67 62 66
 [361] 67 65 66 68 64 66 62 59 64 67 67 64 66 62 60 62 63 65 65 62 64 69 64 61
 [385] 66 64 61 63 67 67 66 63 64 67 67 66 67 66 63 64 59 61 62 64 53 68 66 63
 [409] 66 66 62 64 67 65 61 65 67 67 63 65 66 66 63 62 64 67 67 66 64 61 66 65
 [433] 65 60 61 65 66 67 64 61 64 66 70 60 65 66 65 66 63 64 63 63 63 65 64 61
 [457] 63 65 65 63 64 64 60 67 64 59 63 63 66 64 62 64 67 64 65 63 64 59 64 62
 [481] 64 65 64 66 66 62 67 65 62 64 66 66 69 64 60 64 63 62 60 65 68 62 67 66
 [505] 59 65 66 60 65 61 64 64 65 63 66 59 60 62 66 67 65 63 63 65 65 70 64 66
 [529] 66 61 63 67 65 68 66 64 64 62 65 65 64 67 66 65 65 62 65 60 59 65 65 65
 [553] 67 71 66 63 68 64 61 62 69 66 63 63 66 62 64 64 64 68 67 65 61 69 63 62
 [577] 62 64 69 62 62 62 62 64 63 61 58 61 62 62 61 65 65 62 68 65 68 59 62 62
 [601] 61 65 64 66 64 62 64 67 64 63 64 64 63 65 65 63 63 67 66 67 64 64 65 63
 [625] 57 61 68 66 66 62 60 65 60 64 64 60 64 60 70 61 60 64 61 66 65 62 62 61
 [649] 62 60 65 67 65 63 63 68 68 66 64 64 66 61 63 68 62 66 66 62 63 58 65 71
 [673] 62 64 64 64 62 68 62 67 64 65 62 63 66 64 64 63 69 62 67 69 63 65 62 70
 [697] 66 62 59 62 61 66 60 66 63 62 60 64 58 61 64 66 62 64 68 62 62 68 62 64
 [721] 64 60 63 64 63 63 62 64 62 65 63 63 62 68 63 64 63 61 60 63 64 64 66 67
 [745] 68 62 68 67 65 64 66 68 66 62 63 64 64 65 65 58 61 64 67 63 69 66 64 65
 [769] 65 61 62 65 65 64 66 66 67 65 59 63 61 61 63 65 63 61 67 63 64 70 64 67
 [793] 61 64 65 62 61 60 64 67 62 67 64 65 64 65 62 64 66 63 66 62 66 66 66 66
 [817] 62 64 65 64 64 65 66 61 65 62 63 64 67 67 65 63 63 63 63 68 61 66 67 66
 [841] 66 67 67 60 67 65 68 64 61 62 61 61 65 66 64 61 59 66 65 64 63 62 63 67
 [865] 66 66 64 62 63 61 62 64 64 67 67 62 61 62 70 68 64 68 64 67 61 58 63 63
 [889] 66 67 64 60 67 65 65 69 65 64 61 65 59 64 68 66 64 67 63 64 65 66 66 64
 [913] 65 62 64 65 63 69 67 61 64 64 65 63 65 65 65 63 65 61 64 62 69 63 62 66
 [937] 65 61 63 62 60 64 60 65 68 64 62 68 64 66 66 63 68 67 61 61 62 63 66 60
 [961] 65 59 62 64 67 61 62 70 67 68 63 64 66 64 65 63 61 64 67 64 60 69 63 65
 [985] 64 65 65 64 67 68 63 63 66 65 65 67 65 60 63 66 69 61 64 63 63 65 66 66
[1009] 64 60 61 65 62 62 61 68 67 66 65 65 60 67 63 64 65 67 65 65 60 65 62 61
[1033] 64 61 65 67 62 64 66 61 64 65 67 59 61 61 64 68 66 68 62 63 65 67 70 63
[1057] 60 68 60 63 64 58 64 61 66 65 61 66 60 62 63 63 63 61 59 65 62 63 62 64
[1081] 61 58 63 63 64 65 67 63 62 65 66 61 61 64 68 61 66 66 61 61 63 65 67 67
[1105] 64 63 64 59 66 63 63 61 65 64 63 59 67 65 63 64 64 63 61 65 61 65 62 62
[1129] 63 66 61 62 65 65 67 64 67 63 64 63 70 58 63 61 64 61 66 54 66 66 65 68
[1153] 69 63 62 66 63 66 60 65 64 64 65 70 63 60 64 65 65 60 67 65 65 65
> var.data > 62
   [1] FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE
  [13] FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE
  [25]  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE
  [37]  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE
  [49]  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE
  [61]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
  [73] FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
  [85]  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE
  [97] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [109]  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE
 [121] FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE
 [133]  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE
 [145]  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [157] FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE
 [169]  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
 [181]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE
 [193]  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE
 [205]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
 [217]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE
 [229]  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [241] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE
 [253]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE
 [265]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
 [277] FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE
 [289]  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [301]  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [313] FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE
 [325]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE
 [337]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE
 [349]  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE
 [361]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [373]  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE
 [385]  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [397]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE
 [409]  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
 [421]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE
 [433]  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE
 [445]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [457]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE
 [469]  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE
 [481]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE
 [493]  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE
 [505] FALSE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
 [517] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [529]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE
 [541]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE  TRUE  TRUE
 [553]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
 [565]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE
 [577] FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE
 [589] FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE
 [601] FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [613]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [625] FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE
 [637]  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE
 [649] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [661]  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE
 [673] FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE
 [685]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE
 [697]  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE
 [709] FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE
 [721]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE
 [733] FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
 [745]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE
 [757]  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [769]  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE
 [781] FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [793] FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE
 [805]  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE
 [817] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE
 [829]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE
 [841]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
 [853]  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE
 [865]  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE
 [877] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE
 [889]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE
 [901] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [913]  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE
 [925]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE
 [937]  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE
 [949]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE
 [961]  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
 [973]  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE
 [985]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
 [997]  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[1009]  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
[1021] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE
[1033]  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE
[1045] FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
[1057] FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE
[1069] FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE  TRUE
[1081] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE
[1093] FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE
[1105]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE
[1117]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE FALSE FALSE
[1129]  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
[1141]  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE
[1153]  TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
[1165]  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE
> var.data = data[, which(names(data) == group.variable)]
>     lesser.group = data[var.data <= group.cutoff, ]
Error in `[.data.frame`(data, var.data <= group.cutoff, ) : 
  object 'group.cutoff' not found
>     greater.group = data[var.data > group.cutoff, ]
Error in `[.data.frame`(data, var.data > group.cutoff, ) : 
  object 'group.cutoff' not found
> group.cutoff = 64
> var.data == data$height
   [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
  [15] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
  [29] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
  [43] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
  [57] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
  [71] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
  [85] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
  [99] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [113] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [127] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [141] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [155] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [169] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [183] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [197] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [211] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [225] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [239] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [253] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [267] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [281] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [295] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [309] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [323] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [337] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [351] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [365] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [379] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [393] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [407] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [421] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [435] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [449] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [463] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [477] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [491] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [505] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [519] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [533] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [547] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [561] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [575] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [589] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [603] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [617] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [631] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [645] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [659] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [673] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [687] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [701] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [715] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [729] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [743] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [757] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [771] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [785] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [799] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [813] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [827] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [841] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [855] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [869] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [883] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [897] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [911] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [925] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [939] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [953] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [967] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [981] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
 [995] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1009] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1023] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1037] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1051] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1065] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1079] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1093] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1107] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1121] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1135] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1149] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
[1163] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE
> var.data = data[, which(names(data) == group.variable)]
>     lesser.group = data[var.data <= group.cutoff, ]
>     greater.group = data[var.data > group.cutoff, ]
> lesser.group
     bwt gestation parity age height weight smoke
1    120       284      0  27     62    100     0
2    113       282      0  33     64    135     0
3    128       279      0  28     64    115     1
5    136       286      0  25     62     93     0
6    138       244      0  33     62    178     0
8    120       289      0  25     62    125     0
11   144       282      0  32     64    124     1
12   141       279      0  23     63    128     1
13   110       281      0  36     61     99     1
14   114       273      0  30     63    154     0
15   115       285      0  38     63    130     0
17   115       261      0  33     60    125     1
20   105       270      0  22     56     93     0
26   146       280      0  26     58    106     0
30   122       270      0  26     61    105     0
31    93       278      0  34     61    146     0
33   119       275      0  23     60    105     0
36   107       279      0  24     63    115     0
37   134       288      0  23     63     92     1
39   129       293      0  30     61    160     0
40   110       278      0  23     63    177     0
41   111       270      0  27     61    119     0
43   143       274      0  27     63    110     1
45   110       272      0  25     60     90     0
47   145       291      0  26     63    119     1
48   115       258      0  26     62    130     0
50   102       282      0  28     61    110     0
51   143       286      0  31     64    126     0
53   124       275      0  22     60    130     0
56   106       273      0  28     60    116     0
57    75       232      0  33     61    110     0
58   107       273      0  24     61     96     0
61   101       245      0  23     63    130     1
62   128       283      0  28     63    125     1
64    97       246      0  37     63    150     0
66   103       273      0  31     63    170     1
67   142       276      0  38     63    170     0
69   156       292      0  26     63    118     0
71   120       274      0  24     62    120     0
72    91       270      0  24     60    149     1
73   127       274      0  21     62    110     0
74   153       286      0  26     63    107     1
75   121       276      0  39     63    130     0
76   120       277      0  27     63    126     0
77    99       272      0  27     62    103     1
79   129       280      0  23     64    104     0
84   131       296      0  37     63    143     0
86   128       281      0  33     59    117     0
87   134       268      0  28     62    112     0
88   114       271      0  27     60    104     0
89    85       278      0  23     61    103     1
90   135       282      0  22     64    100     0
91    87       255      0  28     61    100     1
92   125       302      0  37     62    162     0
93   105       254      0  29     64    137     0
94   120       279      0  27     60    121     1
95   119       274      0  33     64    120     0
97   119       273      0  24     61    108     1
101  129       303      0  27     64    125     0
106  118       276      0  29     64    114     0
111  131       288      0  24     61    103     0
116  115       283      0  25     61    150     1
118   94       267      0  30     62    120     1
121  117       278      0  25     62    103     0
123  112       294      0  25     64    125     1
124  128       283      0  24     60    100     0
126  117       258      0  31     64    120     0
131  100       265      0  39     62    107     1
134  144       277      0  30     63    127     0
135  105       268      0  32     61    115     1
137  102       262      0  24     63    125     0
142  115       278      0  29     61    128     0
144  123       318      0  21     64    152     0
146  133       287      0  24     60    104     1
147  134       290      0  22     60    121     0
149  111       273      0  43     62    138     0
151  135       296      0  30     63    123     0
152  134       289      0  22     63    125     0
157  121       272      0  22     62    109     0
160  136       278      0  23     61    105     0
165  112       288      0  32     62    125     0
166  132       290      0  25     64    120     0
167  136       285      0  23     62    175     0
169   96       271      0  23     64    116     0
170  124       277      0  29     63    220     0
171  113       306      0  21     62    150     0
172  137       258      0  25     63    117     0
173  133       268      0  24     61     93     0
174  107       244      0  20     58     97     0
175   96       265      0  28     59    135     1
177  136       275      0  22     63    110     0
178   75       239      0  26     63    124     1
180  130       274      0  30     63    150     0
181   90       290      0  22     63    168     0
184  137       291      0  34     61    110     0
185  101       268      0  19     63    140     0
186  142       275      0  25     64    132     0
187   98       282      0  20     63     97     1
188  124       283      0  23     63    112     0
189  109       281      0  23     61    105     0
190  150       285      0  22     61    110     1
193  101       272      0  29     63    150     1
194  113       246      0  19     62    138     1
195  127       270      0  25     62    150     0
196   97       260      0  23     61     99     1
197  117       282      0  28     64    115     0
201  105       233      0  34     61    130     0
203  107       290      0  28     62    135     0
204  121       275      0  24     63    121     1
205  119       286      0  20     64    180     0
206  117       275      0  20     64    145     1
210  110       254      0  23     63    120     1
211  130       282      0  21     62    106     1
212  140       274      0  23     63    106     1
215  125       290      0  19     64    127     0
217  122       277      0  33     63    135     1
218  129       267      0  22     63    160     0
219  126       276      0  23     63    120     0
221  173       293      0  30     63    110     0
226  111       278      0  21     62    125     0
230  142       274      0  24     63    125     0
231   99       262      0  38     59    110     1
232  113       286      0  23     63    105     0
233  149       282      0  21     61    110     0
235  128       290      0  22     64    118     0
236  125       286      0  21     64    139     0
238  130       285      0  23     63    128     1
240   81       256      0  30     64    148     1
241  124       287      0  27     62    105     1
244  125       279      0  23     63    104     1
245  138       294      0  40     64    125     0
247  115       278      0  23     60    102     1
249  140       294      0  25     61    103     0
250  133       276      1  22     63    119     0
252  104       274      1  20     62    115     1
260  113       282      1  36     59    140     0
261  119       292      0  33     62    118     1
262  109       295      1  23     63    103     1
265  110       293      1  28     64    135     1
268  117       283      0  27     63    108     0
270   98       280      0  35     64    122     1
273  132       285      1  25     63    140     0
274   91       264      0  36     60    100     1
275  119       294      0  34     59    105     0
276   85       273      0  26     60    105     1
277  106       271      1  26     61    110     1
278  132       284      0  29     64    122     0
279   80       266      1  25     62    125     0
280  109       286      0  24     64    125     1
281  111       306      0  27     61    102     0
284  110       285      1  19     64    130     0
287  101       295      0  18     62    145     1
288   71       281      0  32     60    117     1
291  101       278      0  25     62    112     1
292  100       277      0  31     62    100     1
293  104       269      0  35     63    110     1
301  104       260      0  33     64    145     0
303  112       278      1  21     63    120     0
304  117       293      0  39     60    120     1
305  109       282      0  25     62    106     1
307  120       273      0  29     64    130     1
308  116       270      0  29     63    132     0
310  103       273      1  22     64    110     1
312  139       260      1  32     64    127     0
313  123       254      0  26     62    130     1
314  104       280      1  23     64    107     1
315  111       270      0  22     59    103     0
316  122       277      0  32     63    157     1
320  110       277      0  25     61    130     0
323  122       281      0  42     63    103     1
324  133       293      0  23     64    110     1
326  104       307      0  24     59    122     0
328  120       281      0  33     63    113     0
329  118       276      1  18     63    128     0
331  114       268      0  22     64    104     0
332  116       280      0  40     62    159     0
333  129       284      0  24     64    115     0
334  120       286      0  22     62    115     1
335  127       281      0  24     63    112     1
336   71       234      0  32     64    110     1
338  122       286      0  23     64    145     0
341  107       290      0  26     63    112     0
342  129       294      0  32     62    170     1
343  126       274      0  39     62    122     0
344  116       293      1  26     64    125     0
345  124       294      0  26     62    122     0
350   98       276      1  22     61    121     0
351  110       272      0  28     60    108     0
353  101       278      1  20     62    105     0
355  104       276      1  18     60    109     1
359  126       288      0  31     62    150     0
365  131       292      1  22     64    124     1
367  127       280      0  27     62    118     0
368   99       313      1  34     59    100     1
369  115       290      0  30     64    140     1
372  136       299      0  29     64    115     0
374  120       286      0  25     62    105     0
375  118       261      0  26     60    104     0
376  127       304      1  26     62    105     0
377  132       281      1  24     63    117     0
380  118       277      0  25     62    120     0
381  102       286      1  22     64    140     0
383  132       294      0  32     64    116     0
384  116       276      0  33     61    180     0
386  139       279      0  20     64    143     0
387  132       298      1  23     61    137     0
388   87       282      0  27     63    104     1
392  115       276      1  18     63    110     0
393  116       272      0  27     64    130     1
399  140       251      0  28     63    210     0
400  120       271      1  17     64    142     1
401  120       289      1  31     59    102     0
402  146       280      0  23     61    145     0
403  112       283      1  21     62    102     1
404  132       278      0  20     64    150     1
405  146       263      0  39     53    110     1
408  119       277      0  24     63    120     1
411  116       293      1  28     62    108     0
412  100       275      0  27     64    111     1
415  113       288      1  21     61    120     0
419  120       269      1  40     63    130     0
423  142       285      0  33     63    124     0
424  144       273      0  27     62    118     1
425  127       262      1  32     64    125     0
429  123       323      1  17     64    140     0
430  112       281      1  23     61    150     0
434  102       267      1  25     60     93     1
435   99       275      0  23     61    125     1
439  136       295      0  23     64    147     0
440  101       278      0  27     61     99     1
441  100       275      1  25     64    125     0
444   88       252      1  21     60    115     1
449   98       278      0  27     63    110     1
450   96       241      0  23     64    130     1
451  104       282      0  24     63    144     0
452  133       273      1  33     63    135     0
453   93       267      0  25     63    135     1
455  118       277      0  21     64    155     0
456  130       289      0  21     61    130     1
457  125       288      0  22     63    128     1
460  130       293      0  26     63    123     0
461  114       277      1  31     64    125     0
462  105       278      0  21     64    120     0
463  101       289      1  31     60    125     0
465  112       252      0  37     64    162     0
466   69       232      0  31     59    103     1
467  114       264      0  26     63    110     1
468  123       267      0  29     63    111     1
470  114       283      1  15     64    117     1
471  115       290      0  31     62     95     0
472   98       272      1  35     64    129     0
474  119       271      0  28     64    175     1
476  127       247      1  21     63    140     0
477  131       263      0  29     64    180     1
478  129       288      0  28     59    102     0
479  114       286      1  22     64    116     1
480  110       280      0  29     62    110     1
481  103       268      0  31     64    150     1
483  138       282      0  25     64    120     0
486  111       284      0  34     62    110     0
489  158       285      0  28     62    130     0
490  101       286      1  21     64    117     1
494  116       282      0  19     64    120     0
495  108       271      0  19     60    109     1
496  123       298      0  25     64    113     1
497  129       289      0  37     63    132     0
498  134       282      0  24     62    110     0
499  113       298      0  30     60    124     1
502  121       270      1  20     62    103     0
505  101       289      0  27     59     96     0
508  115       276      1  23     60    106     0
510  123       278      0  21     61     89     0
511  111       300      0  20     64    108     1
512   97       279      1  24     64    138     1
514  124       300      0  28     63     95     0
516  124       290      0  26     59    140     0
517  107       280      0  20     60    107     1
518  142       273      1  22     62    125     0
522  103       291      1  26     63    102     0
523  124       285      1  27     63    114     0
527  105       260      0  23     64    197     0
530  133       280      1  25     61    130     0
531  115       269      0  41     63    165     1
536  119       288      1  22     64    132     1
537  141       284      1  17     64    105     0
538   91       260      0  26     62    110     1
541  121       273      0  32     64    112     0
546   98       286      0  31     62    105     1
548  115       278      0  21     60    113     0
549  103       281      1  22     59     98     1
556  116       265      0  36     63    120     0
558  170       303      1  21     64    129     0
559  104       270      0  25     61    110     0
560  108       269      1  20     62    114     0
563   97       263      1  25     63    107     0
564   85       270      1  19     63    118     1
566  117       275      0  22     62    115     1
567  109       302      0  24     64    110     0
568  147       285      0  24     64    137     0
569  105       281      1  23     64    115     0
573  105       274      1  26     61    100     0
575  110       276      0  25     63    107     1
576  119       285      1  26     62    108     0
577  103       292      1  28     62    132     0
578  117       272      0  25     64    116     0
580  145       278      0  24     62    109     0
581  104       271      0  20     62     98     1
582  123       268      1  18     62    110     1
583  124       272      0  27     62    110     0
584  129       275      0  26     64    115     1
585   91       248      0  33     63    202     0
586  109       295      0  32     61    135     0
587  108       268      0  22     58    112     1
588   79       268      0  36     61    108     0
589  133       301      0  23     62    108     0
590  114       309      1  27     62    118     0
591  128       273      0  34     61    125     0
594  103       276      1  21     62    130     1
598  107       256      0  28     59     90     1
599  113       268      0  31     62    100     0
600  106       279      1  21     62    118     1
601  152       285      0  24     61    120     1
603  136       278      0  35     64    118     1
605  123       284      1  18     64    112     1
606  119       288      0  37     62    128     0
607  122       291      0  40     64    155     0
609   93       270      0  25     64    125     1
610  136       274      1  20     63    165     0
611  150       292      0  26     64    124     0
612   94       264      1  26     64    135     0
613  146       306      0  38     63    112     0
616  124       273      0  21     63    115     0
617  141       282      0  27     63    115     0
621  114       251      0  26     64    119     1
622  103       297      0  31     64    125     0
624  113       274      0  23     63    108     1
625   99       249      1  31     57     98     1
626   97       279      0  33     61    105     1
630  123       283      0  27     62    110     0
631  129       287      0  24     60    107     0
633  100       275      0  26     60    115     0
634  131       274      0  28     64    118     1
635  146       279      0  27     64    124     0
636   84       267      0  29     60     95     0
637  115       302      0  28     64    116     0
638  115       281      0  25     60     94     0
640   91       292      1  19     61    125     0
641  112       255      0  39     60    115     0
642  115       316      1  29     64    110     0
643  110       269      0  38     61    102     0
646   99       267      0  22     62     94     0
647  131       274      0  27     62    160     1
648  136       291      1  25     61    105     0
649  130       298      0  20     62    120     0
650  134       296      0  35     60    117     1
654  115       278      0  26     63    112     1
655   78       237      1  23     63    144     0
659  109       283      0  34     64    120     0
660  113       259      0  38     64    128     0
662  121       273      1  34     61    125     0
663  117       288      1  28     63    140     0
665   87       229      0  27     62    138     0
668  132       273      0  28     62    113     0
669   90       286      0  32     63    105     1
670  131       308      0  30     58    150     1
673  137       299      0  24     62    115     0
674  124       270      0  20     64    122     0
675  136       281      1  27     64    127     0
676  117       298      1  22     64    160     0
677  121       269      0  23     62    130     0
679  139       275      0  33     62    118     0
681   86       242      0  20     64    110     1
683   81       254      0  23     62    157     0
684  133       281      0  33     63    120     0
686  132       287      0  29     64    148     0
687  137       274      0  27     64    126     0
688   84       279      0  34     63    190     0
690   92       270      0  34     62    100     1
693  167       288      1  19     63    117     0
695  105       269      0  27     62    100     1
698  125       266      0  21     62    120     1
699  125       283      1  22     59     96     0
700  115       315      1  22     62    110     0
701  174       288      0  25     61    182     0
703  113       262      0  24     60    105     0
705  139       277      0  35     63    140     0
706  127       275      0  26     62    125     0
707  112       272      0  26     60     98     0
708  143       285      0  30     64    135     1
709  116       286      1  22     58    105     1
710  155       279      0  33     61    125     0
711  121       290      0  31     64    127     0
713   87       277      0  31     62    120     1
714  132       330      0  34     64    130     1
716  123       280      0  20     62    105     1
717   91       279      1  27     62    118     0
719  144       289      0  20     62    106     0
720  128       292      0  30     64    127     0
721  137       318      1  19     64    110     0
722  104       289      0  24     60    104     1
723  120       271      0  32     63    130     0
724  112       277      1  23     64    118     0
725  138       286      0  26     63    111     0
726   96       280      0  27     63    105     1
727  134       285      0  35     62    134     0
728  126       285      0  24     64    140     0
729  112       300      0  29     62    121     0
731  110       275      0  25     63    120     0
732   83       253      0  29     63    110     1
733  112       288      1  20     62    110     0
735  119       300      1  34     63    124     0
736   86       246      0  25     64    113     1
737  110       269      0  38     63    145     1
738  126       282      0  23     61    120     0
739  125       272      0  30     60     96     0
740  136       252      0  27     63    130     0
741  127       283      1  29     64    119     0
742   84       272      0  25     64    150     1
746  110       286      0  26     62    100     0
750  117       269      1  21     64    149     1
754   96       280      1  34     62    127     1
755  124       289      0  29     63    110     0
756  107       272      0  30     64    140     1
757  113       277      0  38     64    108     0
760  107       268      0  37     58    112     1
761  117       255      0  26     61    120     0
762  117       305      0  24     64    155     0
764  136       268      0  30     63    132     1
767  120       279      0  38     64    124     0
770  100       288      1  28     61    108     1
771  134       284      0  28     62    112     0
774  123       271      0  41     64    162     0
779  113       289      1  26     59     91     0
780   77       238      1  23     63    103     1
781   62       228      0  24     61    107     0
782   93       245      0  33     61    100     1
783  109       275      1  37     63    112     1
785   92       224      0  19     63    134     1
786  120       281      0  26     61    115     0
788  113       287      0  36     63    118     0
789  126       251      1  28     64    123     0
791  128       282      1  25     64    125     0
793  110       306      1  32     61    122     0
794  162       284      0  27     64    126     0
796  128       284      0  23     62    110     0
797  111       275      1  18     61    108     1
798  137       280      0  34     60    107     0
799  100       264      0  29     64    120     1
801  112       267      1  22     62    138     0
803  145       308      0  35     64    110     1
805  126       278      0  26     64    150     1
807  126       282      0  33     62    117     0
808  109       291      0  39     64    107     0
810  119       286      0  22     63    185     1
812  124       284      1  17     62    112     0
817  126       293      1  27     62    111     0
818  116       277      0  41     64    124     1
820  110       181      0  27     64    133     0
821  133       285      1  30     64    160     0
824  133       297      0  36     61    125     0
826  122       306      1  22     62    100     0
827  121       271      1  34     63    129     1
828  100       272      0  30     64    150     1
832  123       282      0  30     63    118     0
833   87       275      0  28     63    110     1
834  128       291      1  27     63    132     0
835  120       288      0  28     63    125     0
837  118       265      0  27     61    123     0
844   96       278      1  18     60    120     1
848  111       281      1  27     64    112     0
849  124       275      0  28     61    116     0
850  112       292      1  28     62    110     1
851  115       281      0  28     61    128     1
852   72       271      0  39     61    136     0
855  127       272      0  20     64    130     1
856   90       266      0  23     61     99     1
857   99       273      1  27     59    115     0
860   58       245      0  34     64    156     1
861  109       265      1  24     63    107     1
862  110       277      1  19     62    160     0
863  129       278      0  27     63    128     0
867  115       268      1  31     64    125     0
868  108       283      0  35     62    108     0
869  139       281      0  27     63    137     0
870  115       275      0  25     61    155     1
871  136       288      0  23     62    217     0
872  163       289      1  25     64    126     1
873  131       285      0  26     64    130     0
876  104       270      1  26     62    115     0
877  102       267      1  24     61    109     1
878   94       268      0  30     62    105     1
881  119       286      0  26     64    123     1
883   99       252      0  21     64    120     0
885  139       284      0  37     61    121     0
886  144       304      1  27     58    102     1
887   99       270      0  22     63    115     1
888  105       280      1  22     63    116     0
891  119       270      1  20     64    109     0
892  114       291      0  35     60    112     0
898  112       266      0  26     64    122     0
899  123       314      0  22     61    121     1
901  125       290      0  36     59    105     0
902  105       295      1  20     64    112     1
905  133       290      0  21     64    145     0
907  109       269      0  23     63    113     0
908  122       286      0  23     64    120     1
912  120       283      0  28     64    122     1
914  118       278      1  19     62    126     0
915  105       330      0  23     64    112     1
917  148       291      1  21     63    115     0
920  120       280      0  31     61    111     0
921  123       296      1  26     64    110     1
922  102       275      0  43     64    160     0
924  103       276      1  19     63    149     1
928  128       281      0  28     63    150     0
930  104       288      1  27     61    122     1
931  159       296      1  27     64    112     0
932  118       276      0  29     62    130     1
934  144       281      0  20     63    120     0
935  121       270      0  25     62    108     1
938  105       281      1  19     61    130     0
939  125       283      0  37     63    145     1
940  119       259      0  37     62    130     0
941  101       273      0  39     60    113     0
942  105       277      1  25     64    156     0
943  110       281      0  27     60    110     0
946  127       276      0  37     64    159     0
947  117       324      0  22     62    164     1
949  122       273      1  23     64    130     1
952  120       275      0  32     63    115     1
955  131       284      1  19     61    114     1
956  110       277      0  36     61    116     0
957  105       276      0  20     62    112     1
958  125       255      0  23     63    133     0
960  114       289      0  36     60    115     0
962  103       250      0  40     59    140     0
963  114       276      0  26     62    127     0
964   75       247      0  36     64    120     1
966   94       271      0  36     61    130     1
967  150       287      0  36     62    135     0
971  145       304      1  25     63    109     1
972  121       285      0  34     64    110     0
974  134       286      0  25     64    125     0
976  114       276      0  24     63    110     0
977   97       265      0  30     61    110     0
978  160       292      0  28     64    120     0
980  145       288      0  28     64    116     0
981   95       273      0  23     60     90     0
983  123       288      0  27     63    125     0
985  110       268      0  34     64    127     0
988  108       279      1  19     64    115     0
991  136       283      1  24     63    119     0
992  125       290      0  32     63    135     0
998   91       266      0  23     60    120     1
999  129       276      0  31     63    125     0
1002  80       262      1  31     61    100     1
1003 125       273      0  30     64    145     0
1004  94       284      0  24     63    104     1
1005 148       281      0  27     63    110     1
1009 118       279      1  21     64    108     0
1010 102       283      0  39     60    119     0
1011 120       280      0  24     61    118     0
1013 122       280      1  45     62    128     0
1014 103       268      0  32     62     97     1
1015 105       312      0  41     61    115     1
1021 126       299      1  21     60    114     0
1023 114       277      1  19     63    107     0
1024 118       272      0  23     64    113     0
1029 100       264      0  28     60    111     1
1031 115       276      1  20     62    105     1
1032  91       292      1  26     61    113     1
1033 112       287      0  27     64    110     1
1034 125       289      1  31     61    120     0
1037 130       279      0  31     62    122     0
1038 135       289      0  25     64    127     0
1040 100       281      0  24     61    115     0
1041 124       277      1  23     64    104     0
1044 119       275      0  27     59    113     1
1045 126       272      1  35     61    120     1
1046 128       267      0  37     61    142     0
1047 116       282      1  19     64    124     0
1051 110       292      0  35     62    127     0
1052 108       278      0  28     63    125     1
1056 118       273      0  21     63    120     0
1057 111       267      1  24     60    115     0
1059 120       280      0  30     60    115     0
1060 121       281      0  29     63    108     0
1061 113       282      0  30     64    118     1
1062 117       270      0  23     58    115     0
1063 158       267      0  35     64    125     0
1064 128       277      0  39     61    120     0
1067 163       298      0  37     61     98     0
1069 126       271      1  21     60    105     0
1070 127       283      0  42     62    154     1
1071 134       287      0  40     63    118     0
1072 140       274      0  41     63    122     0
1073 102       285      0  29     63    117     1
1074 100       252      0  24     61    150     0
1075 120       295      0  29     59    100     1
1077 130       246      0  19     62    118     0
1078 104       280      0  41     63    118     1
1079 122       285      0  31     62    102     1
1080 137       276      1  25     64    127     0
1081 114       285      1  20     61    104     0
1082  63       236      1  24     58     99     0
1083  98       318      0  23     63    107     0
1084  99       268      0  32     63    124     1
1085  89       238      1  26     64    136     0
1088 106       279      0  29     63    125     1
1089  99       246      0  35     62    106     0
1092  75       266      0  37     61    113     1
1093  97       285      0  35     61    112     1
1094 106       264      0  41     64    114     0
1096 117       269      1  28     61     99     0
1099 112       270      0  29     61    124     0
1100 141       293      0  28     61    125     0
1101 131       259      0  19     63    134     0
1105 160       291      0  34     64    110     1
1106 106       283      0  24     63    119     0
1107  84       260      1  20     64    104     1
1108 112       268      1  25     59    103     0
1110 104       267      0  30     63    180     0
1111 130       294      0  32     63    110     1
1112  71       254      0  19     61    145     1
1114 119       280      1  21     64    128     0
1115 123       353      0  26     63    115     0
1116 115       278      0  27     59     95     0
1119  88       276      0  25     63    103     1
1120 128       241      1  17     64    126     0
1121  82       274      0  31     64    101     1
1122 100       274      0  24     63    113     0
1123 114       271      0  32     61    130     0
1125 126       298      0  24     61    112     0
1127 152       295      0  39     62    140     0
1128 116       274      0  21     62    110     1
1129 132       302      0  36     63    145     1
1131 119       277      1  18     61     89     1
1132 106       312      0  24     62    135     1
1136  96       276      0  33     64    127     1
1138 120       300      0  34     63    150     1
1139 102       338      0  19     64    170     0
1140  97       255      1  22     63    107     1
1142 130       297      0  32     58    130     0
1143  97       260      1  25     63    115     1
1144 116       273      0  31     61    120     0
1145 114       266      0  29     64    113     0
1146 127       242      0  17     61    135     1
1148 141       281      0  29     54    156     1
1154 118       293      0  21     63    103     0
1155  97       266      0  24     62    109     0
1157  81       285      0  19     63    150     1
1159 135       284      1  19     60     95     0
1161 124       288      1  21     64    116     1
1162 115       262      1  23     64    136     1
1165 109       244      1  21     63    102     1
1166 103       278      0  30     60     87     1
1167 118       276      0  34     64    116     0
1170 113       275      1  27     60    100     0
> greater.group
     bwt gestation parity age height weight smoke
4    108       282      0  23     67    125     1
7    132       245      0  23     65    140     0
9    143       299      0  30     66    136     1
10   140       351      0  27     68    120     0
16    92       255      0  25     65    125     1
18   144       261      0  33     68    170     0
19   119       288      0  43     66    142     1
21   115       274      0  27     67    175     1
22   137       287      0  25     66    145     0
23   122       276      0  30     68    182     0
24   131       294      0  23     65    122     0
25   103       261      0  27     65    112     1
27   114       266      0  20     65    175     1
28   125       292      0  32     65    125     0
29   114       274      0  28     66    132     1
32   130       268      0  30     66    123     0
34   113       281      0  24     65    120     0
35   134       283      0  22     67    130     0
38   122       267      0  27     65    101     1
42    87       248      0  37     65    130     1
44   155       294      0  32     66    150     0
46   122       275      0  26     66    147     0
49   108       283      0  31     65    148     1
52   146       267      0  30     67    132     0
54   124       278      0  26     70    145     1
55   145       257      0  33     65    140     0
59   124       288      0  22     67    118     0
60   122       280      0  23     65    125     1
63   104       282      0  36     65    115     1
65   137       274      0  26     69    137     1
68   130       289      0  27     66    130     0
70   133       284      0  25     66    125     1
78   149       293      0  35     65    116     0
80   139       292      0  25     68    135     0
81   114       274      0  33     67    148     1
82   138       287      0  30     66    145     0
83   138       294      0  32     65    117     0
85   125       305      0  22     70    196     1
96   107       280      0  36     65    117     1
98   133       279      0  37     66    140     0
99   155       287      0  33     66    143     0
100  126       273      0  22     65    150     0
102  137       274      0  29     65    154     0
103  125       302      0  28     65    125     0
104   91       255      0  19     67    136     1
105   95       279      0  22     66    145     1
107  141       278      0  33     66    109     1
108  131       283      0  25     67    215     0
109  121       264      0  32     66    145     0
110  100       243      0  39     65    170     1
112  118       284      0  26     66    133     0
113  152       288      0  35     67    130     0
114  121       284      0  34     69    155     0
115  117       276      0  31     69    150     0
117  112       277      0  23     65    110     0
119  109       272      0  35     66    154     0
120  132       225      0  28     67    148     0
122  101       266      0  20     67    110     1
125  128       279      0  25     66    147     1
127  134       278      0  24     69    135     0
128  127       284      0  28     65    145     0
129   93       269      0  21     65    104     1
130  122       275      0  27     65    165     0
132  147       293      0  32     65    123     0
133  120       299      0  25     65    110     0
136  136       276      0  23     66    155     0
138  160       300      0  29     71    175     1
139  113       275      0  24     68    140     1
140  126       282      0  38     66    250     0
141  126       271      0  29     68    148     0
143  119       284      0  20     66    132     0
145  118       282      0  22     68    135     1
148  144       288      0  21     67    111     0
150  125       262      0  36     66    190     0
153  116       289      0  22     65    160     1
154  129       291      0  29     69    123     0
155  113       301      0  26     67    105     1
156  131       295      0  23     65    123     1
158  121       271      0  25     68    118     1
159  138       287      0  24     65    115     0
161  120       279      0  30     66    131     0
162  122       278      0  31     72    155     1
163  134       267      0  30     66    170     0
164  101       280      0  25     65    123     1
168  113       277      0  23     65    192     1
176  142       278      0  35     66    136     1
179  104       295      0  26     65    155     1
182  118       276      0  22     66    147     1
183  123       320      0  22     66    117     0
191  119       282      0  26     68    150     1
192  131       280      0  38     65    125     0
198  150       290      0  21     65    125     0
199   85       234      0  33     67    130     0
200  128       288      0  27     70    145     0
202  115       274      0  22     65    130     1
207  134       264      0  26     68    136     0
208  117       288      0  35     65    142     0
209  115       268      0  28     66    128     0
213   93       249      0  33     66    117     0
214  154       292      0  42     65    116     1
216   93       318      0  31     66    135     0
220   85       274      0  24     68    155     0
222  144       329      0  22     65    190     1
223  114       278      0  25     65    140     1
224  154       287      0  27     65    125     1
225  150       274      0  25     67    117     1
227  126       277      0  32     66    128     0
228  122       261      0  28     65    124     0
229  141       282      0  24     68    169     0
234  117       328      0  29     65    125     1
237  114       290      0  30     66    160     0
239  116       148      0  28     66    135     0
242  125       292      0  22     65    122     0
243  110       262      0  25     66    140     0
246  142       284      0  39     66    132     0
248  102       280      0  38     67    140     0
251  127       290      0  35     66    165     0
253  119       275      0  42     67    156     1
254  152       301      0  29     65    150     0
255  123       284      1  20     65    120     1
256  143       273      0  19     66    135     0
257  131       308      0  40     65    160     0
258  141       319      1  20     67    140     1
259  129       277      0  30     66    142     1
263  104       280      1  27     68    146     1
264  131       282      1  21     66    126     0
266  148       279      0  27     71    189     0
267  137       283      1  20     65    157     0
269  115       302      1  22     67    135     0
271  136       303      1  20     68    148     1
272  121       276      1  23     71    152     1
282  143       292      1  21     65    125     0
283  136       290      0  26     66    135     0
285   98       257      0  29     66    130     1
286  108       305      1  24     65    112     0
289  124       292      0  29     68    176     1
290  106       276      0  30     66    130     0
294  117       270      0  24     67    135     1
295  117       267      0  29     65    120     1
296  149       279      0  25     67    135     0
297  135       284      0  25     66    123     0
298  110       283      1  21     66    129     0
299  121       276      0  31     67    130     0
300  142       285      1  24     66    136     0
302  138       296      0  34     66    120     0
306  131       266      1  28     67    135     0
309  140       290      0  23     65    110     0
311  120       279      1  23     67    135     0
317  116       271      1  30     67    144     1
318  129       277      0  27     68    130     1
319  133       292      0  30     65    112     1
321  105       276      0  22     67    130     0
322   93       246      0  37     65    130     0
325  130       296      1  22     66    117     1
327  106       278      0  31     65    110     1
330  140       290      1  19     67    132     1
337   88       274      0  30     66    130     0
339  106       302      1  19     66    147     0
340  135       285      0  30     66    130     0
346  123       281      0  23     68    136     0
347  145       315      0  39     67    143     1
348  102       278      0  27     67    135     1
349  129       293      0  30     65    130     1
352  135       282      0  24     67    128     1
354   96       266      0  26     65    125     0
356  100       249      0  24     67    100     0
357  154       292      0  40     66    145     0
358  127       293      0  31     67    137     0
360  126       282      1  23     66    115     1
361  127       279      0  26     67    155     1
362   98       275      0  25     65    112     1
363  127       288      1  21     66    130     0
364  129       299      0  22     68    145     0
366  132       289      1  19     66    145     0
370  145       290      1  24     67    125     0
371  102       249      1  23     67    134     1
373  121       282      0  22     66    133     0
378  102       258      1  22     65    135     0
379  143       279      0  39     65    129     1
382  163       280      0  35     69    139     0
385  138       288      1  19     66    124     0
389  131       297      0  30     67    132     0
390  130       282      0  26     67    147     1
391  123       290      0  28     66    107     1
394  119       286      1  20     67    130     0
395  125       279      1  19     67    135     0
396  144       282      0  33     66    155     1
397  123       269      0  26     67    132     0
398  120       276      0  23     66    114     0
406  122       275      0  30     68    140     0
407  128       292      0  32     66    130     0
409  135       278      0  27     66    148     0
410  129       235      0  24     66    135     0
413  138       257      0  38     67    138     0
414  123       282      0  22     65    130     0
416  129       280      1  24     65    140     1
417  122       280      0  24     67    127     1
418  132       281      1  21     67    140     0
420  114       283      1  20     65    115     0
421  130       280      0  29     66    135     0
422  117       286      0  32     66    127     1
426  115       270      0  25     67    165     1
427   85       258      0  41     67    137     0
428   99       274      0  28     66    118     1
431   68       223      0  32     66    149     1
432  102       283      1  19     65    127     1
433  109       273      0  37     65    138     1
436   78       256      1  29     65    123     0
437  128       284      1  19     66    111     1
438  107       303      1  25     67    133     0
442  109       272      0  41     66    154     1
443  117       281      1  21     70    141     1
445   95       270      0  35     65    135     1
446  127       291      1  24     66    135     1
447  107       293      0  20     65    155     1
448  126       262      0  37     66    135     1
454  101       280      1  24     65    123     1
458  140       291      1  19     65    122     0
459  115       290      1  19     65    118     0
464  132       286      0  26     67    122     1
469  129       284      1  20     66    130     1
473  128       283      0  27     67    126     0
475  154       288      0  25     65    147     0
482  117       287      0  20     65    115     1
484  126       280      0  24     66    147     1
485  124       271      0  23     66    145     0
487  132       282      0  28     67    200     1
488  103       240      0  26     65    140     0
491  132       290      0  26     66    125     0
492  114       293      1  20     66    180     1
493   71       277      0  40     69    135     0
500  123       277      1  20     65    160     0
501  147       277      0  30     68    160     0
503  125       284      1  19     67    130     0
504  115       277      1  25     66    128     0
506   93       271      0  30     65    127     1
507  109       275      0  33     66    120     0
509  130       293      1  23     65    122     1
513  122       292      1  25     65    125     0
515  129       276      0  26     66    145     0
519  129       287      1  29     66    135     0
520  174       281      0  37     67    155     0
521  105       264      0  30     65    105     1
524  105       265      0  43     65    124     0
525  133       275      0  36     65    137     1
526  161       302      1  22     70    170     1
528  108       281      0  41     66    171     0
529  153       297      0  27     66    145     0
532  127       254      0  27     67    146     1
533  128       271      0  41     65    135     1
534  117       265      0  40     68    134     1
535  123       274      0  23     66    135     0
539  116       291      0  29     65    133     1
540  116       255      0  24     65    132     0
542  111       274      0  36     67    159     0
543  102       257      0  25     66    135     0
544  118       283      0  24     65    150     0
545  126       294      1  22     65    125     1
547  131       288      1  28     65    125     0
550  147       301      0  26     65    130     0
551  123       308      1  19     65    135     0
552  125       283      0  22     65    119     0
553  117       270      0  30     67    130     1
554   99       268      0  29     71    150     0
555  115       283      0  31     66    127     1
557  118       297      0  35     68    140     1
561  144       289      1  17     69    130     1
562   99       250      1  26     66    115     0
565  130       285      1  24     66    126     1
570  135       278      1  27     68    139     1
571  115       273      1  23     67    215     1
572  123       280      0  23     65    140     1
574  154       271      0  36     69    160     1
579  120       289      0  23     69    165     0
592  129       280      1  24     65    126     0
593   97       234      1  26     65    112     0
595  176       293      1  19     68    180     0
596  143       294      0  44     65    145     0
597  127       292      1  21     68    130     1
602  150       275      0  29     65    145     0
604  124       279      0  35     66    129     0
608  112       250      0  34     67    124     0
614  129       274      0  19     65    101     1
615  125       292      0  27     65    117     1
618   96       266      0  33     67    135     1
619  138       297      0  30     66    133     1
620  127       282      0  28     67    134     0
623  127       288      1  20     65    115     1
627  116       275      1  20     68    145     0
628  126       297      0  26     66    120     1
629  119       277      0  28     66    130     1
632  117       256      0  37     65    132     1
639  118       284      0  28     70    145     1
644  117       277      0  34     66    140     0
645  109       268      1  29     65    120     1
651  128       271      0  29     65    126     1
652  150       286      0  38     67    175     0
653   86       284      0  39     65    174     1
656  100       295      1  21     68    125     1
657  116       270      0  25     68    169     0
658  110       271      1  26     66    135     0
661  136       297      1  23     66    135     0
664  166       299      0  26     68    140     0
666  120       294      1  23     66    128     1
667   95       286      0  26     66    118     1
671  103       279      1  22     65    145     1
672  144       287      1  33     71    153     1
678  116       280      0  34     68    198     0
680  110       280      0  39     67    125     0
682  133       287      0  20     65    165     0
685  132       284      1  20     66    140     0
689  136       279      0  30     69    130     1
691  114       298      1  28     67    114     0
692  129       274      0  33     69    136     1
694  124       282      1  22     65    118     0
696  155       283      1  19     70    137     0
697  125       279      1  21     66    126     0
702  127       290      0  35     66    122     0
704  115       273      0  22     66    130     1
712  110       282      1  21     66    125     1
715  129       277      0  24     68    142     0
718  147       286      0  30     68    147     0
730  138       313      1  27     65    111     0
734  148       286      0  38     68    160     0
743  131       278      0  22     66    124     0
744  123       286      1  21     67    130     1
745   96       282      1  30     68    127     1
747  123       282      0  29     68    164     0
748  152       286      1  19     67    135     0
749  127       288      0  28     65    155     0
751  125       277      0  29     66    139     1
752  139       273      0  29     68    130     0
753  114       280      0  31     66    134     1
758   98       292      1  20     65    124     1
759  119       285      1  28     65    127     0
763  144       276      0  23     67    129     1
765  121       278      0  28     69    132     0
766  165       282      0  29     66    145     0
768  125       280      0  30     65    130     1
769  137       285      0  29     65    110     0
772   88       262      0  20     65    118     1
773  108       291      0  39     65    135     0
775  141       277      0  38     66    162     0
776  130       270      1  19     66    130     0
777  139       299      1  20     67    112     0
778  130       283      0  32     65    118     0
784  145       283      0  27     65    125     1
787  135       284      0  39     67    141     0
790  143       270      1  27     70    148     0
792   98       262      0  22     67    120     0
795  116       292      1  20     65    118     0
800  160       271      0  32     67    215     0
802  134       297      0  27     67    170     1
804  116       295      0  32     65    120     0
806  111       285      0  29     65    130     0
809  136       291      0  41     66    191     0
811  103       267      1  21     66    150     1
813  155       286      0  31     66    127     0
814  122       282      1  21     66    110     0
815  113       285      0  26     66    140     0
816  122       273      0  26     66    210     0
819  102       294      0  21     65    130     1
822  125       283      0  29     65    125     0
823  164       286      1  32     66    143     0
825  124       293      1  19     65    150     0
829   90       266      1  26     67    135     0
830  128       272      1  18     67    109     0
831   86       276      1  23     65    125     1
836  125       301      1  35     68    181     0
838  116       284      1  24     66    117     0
839  131       262      0  22     67    135     0
840  151       286      1  22     66    130     0
841   88       273      0  20     66    110     1
842  137       284      0  30     67    110     0
843  127       289      0  23     67    140     0
845  129       281      0  31     67    155     0
846  128       288      1  26     65    114     0
847   85       255      0  24     68    159     0
853  122       281      1  24     65    137     1
854  116       291      0  26     66    153     0
858  144       307      1  26     66    125     0
859  138       280      1  30     65    175     0
864  150       284      0  40     67    130     0
865  128       279      0  27     66    135     0
866  142       284      1  31     66    137     1
874   77       238      0  38     67    135     1
875  124       283      1  33     67    156     1
879  158       295      1  37     70    137     0
880  112       275      1  21     68    143     1
882   97       279      0  29     68    178     1
884  115       264      1  23     67    134     1
889   89       275      0  34     66    170     0
890  129       270      0  43     67    160     0
893  106       289      0  28     67    120     1
894  122       292      1  34     65    133     0
895  136       261      0  24     65    110     0
896  121       286      1  22     69    130     1
897  112       282      0  26     65    122     0
900  139       286      0  33     65    125     1
903  130       276      0  41     68    130     0
904  146       294      0  22     66    145     1
906  147       296      1  19     67    124     0
909  135       260      0  43     65    135     0
910  117       272      0  32     66    118     0
911  138       284      0  30     66    133     1
913  119       273      0  35     65    125     1
916  113       306      1  21     65    137     0
918  140       281      1  22     69    135     0
919  134       287      1  33     67    131     0
923   55       204      0  35     65    140     0
925  123       283      0  21     65    110     0
926  105       270      1  27     65    134     1
927  138       289      0  33     65    155     0
929  139       285      0  30     65    129     1
933   99       285      0  25     69    128     1
936  117       265      1  24     66     98     0
937  119       293      1  23     65    127     0
944  100       270      1  21     65    132     1
945   98       284      0  29     68    140     0
948  122       278      0  37     68    114     0
950  118       281      1  36     66    140     1
951  137       303      1  23     66    127     1
953  143       285      0  27     68    185     0
954  108       270      0  29     67    124     1
959   78       258      1  24     66    115     1
961  111       278      0  29     65    145     1
965  169       296      0  33     67    185     0
968  144       248      0  30     70    145     0
969  144       291      0  28     67    130     0
970  143       313      0  20     68    150     0
973  105       256      0  31     66    142     0
975  129       294      1  21     65    132     0
979   65       237      0  31     67    130     0
982  139       293      1  21     69    130     0
984  109       283      0  23     65    112     1
986  122       296      1  24     65    132     0
987  115       307      0  34     65    128     1
989  120       287      0  23     67    116     1
990  131       269      0  36     68    145     0
993   96       285      1  20     66    117     1
994  102       282      1  29     65    125     1
995  102       288      1  18     65    117     0
996  112       277      1  22     67    120     0
997  135       272      0  30     65    130     0
1000 155       290      0  26     66    129     1
1001 109       274      0  33     69    144     1
1006  73       277      0  29     65    145     0
1007 123       267      1  19     66    132     1
1008  65       232      0  24     66    125     1
1012 108       270      1  21     65    130     1
1016 126       273      1  25     68    135     0
1017 145       316      0  22     67    142     0
1018 139       293      0  34     66    131     0
1019 124       290      0  26     65    165     0
1020 121       282      0  30     65    122     0
1022 119       286      1  33     67    137     0
1025 127       295      0  36     65    145     0
1026 117       290      1  22     67    110     0
1027 137       277      0  41     65    126     0
1028 133       292      0  29     65    135     0
1030 107       273      1  26     65    135     0
1035 157       291      0  33     65    121     0
1036 108       256      1  26     67    130     0
1039 123       277      0  24     66    122     0
1042 174       284      0  39     65    163     0
1043 129       278      0  26     67    146     0
1048 100       285      0  18     68    127     1
1049  96       285      0  37     66    135     1
1050 131       279      1  20     68    122     1
1053 129       275      0  24     65    135     0
1054 141       285      0  23     67    150     0
1055 110       276      0  31     70    155     0
1058 160       297      0  20     68    136     0
1065 158       289      0  30     66    140     0
1066 133       289      0  22     65    123     1
1068 128       282      1  19     66    118     0
1076  98       279      1  18     65    115     1
1086 117       283      0  22     65    142     1
1087 143       281      0  29     67    132     0
1090 156       300      0  27     65    120     1
1091  72       266      1  25     66    200     1
1095  91       225      0  18     68    117     1
1097 117       284      0  25     66    177     1
1098 112       291      0  23     66    145     0
1102 130       290      0  19     65    123     1
1103 132       270      0  26     67    140     0
1104 114       265      0  23     67    130     1
1109 139       311      0  37     66    135     0
1113  82       270      0  21     65    150     1
1117 124       289      1  21     67    145     1
1118 138       292      0  25     65    130     1
1124  97       269      0  20     65    137     1
1126 122       275      1  20     65    127     0
1130  84       260      1  37     66    140     0
1133 139       291      0  24     65    160     0
1134 103       273      0  36     65    158     1
1135 112       299      0  24     67    145     1
1137 102       281      1  19     67    135     1
1141 113       285      0  22     70    145     0
1147  87       247      1  18     66    125     1
1149 144       283      1  25     66    140     0
1150 116       273      0  33     66    130     1
1151  75       265      0  21     65    103     1
1152 138       286      1  28     68    120     0
1153  99       271      0  39     69    151     0
1156 146       319      0  28     66    145     0
1158 110       321      0  28     66    180     0
1160 114       290      1  21     65    120     1
1163 143       281      0  28     65    135     1
1164 113       287      1  29     70    145     1
1168 127       290      0  27     65    121     0
1169 132       270      0  27     65    126     0
1171 128       265      0  24     67    120     0
1172 130       291      0  30     65    150     1
1173 125       281      1  21     65    110     0
1174 117       297      0  38     65    129     0
> dim(lesser.group)
[1] 658   7
> dim(greater.group)
[1] 516   7
> dim(data)
[1] 1174    7
> var.data
   [1] 62 64 64 67 62 62 65 62 66 68 64 63 61 63 63 65 60 68 66 56 67 66 68 65
  [25] 65 58 65 65 66 61 61 66 60 65 67 63 63 65 61 63 61 65 63 66 60 66 63 62
  [49] 65 61 64 67 60 70 65 60 61 61 67 65 63 63 65 63 69 63 63 66 63 66 62 60
  [73] 62 63 63 63 62 65 64 68 67 66 65 63 70 59 62 60 61 64 61 62 64 60 64 65
  [97] 61 66 66 65 64 65 65 67 66 64 66 67 66 65 61 66 67 69 69 61 65 62 66 67
 [121] 62 67 64 60 66 64 69 65 65 65 62 65 65 63 61 66 63 71 68 66 68 61 66 64
 [145] 68 60 60 67 62 66 63 63 65 69 67 65 62 68 65 61 66 72 66 65 62 64 62 65
 [169] 64 63 62 63 61 58 59 66 63 63 65 63 63 66 66 61 63 64 63 63 61 61 68 65
 [193] 63 62 62 61 64 65 67 70 61 65 62 63 64 64 68 65 66 63 62 63 66 65 64 66
 [217] 63 63 63 68 63 65 65 65 67 62 66 65 68 63 59 63 61 65 64 64 66 63 66 64
 [241] 62 65 66 63 64 66 60 67 61 63 66 62 67 65 65 66 65 67 66 59 62 63 68 66
 [265] 64 71 65 63 67 64 68 71 63 60 59 60 61 64 62 64 61 65 66 64 66 65 62 60
 [289] 68 66 62 62 63 67 65 67 66 66 67 66 64 66 63 60 62 67 64 63 65 64 67 64
 [313] 62 64 59 63 67 68 65 61 67 65 63 64 66 59 65 63 63 67 64 62 64 62 63 64
 [337] 66 64 66 66 63 62 62 64 62 68 67 67 65 61 60 67 62 65 60 67 66 67 62 66
 [361] 67 65 66 68 64 66 62 59 64 67 67 64 66 62 60 62 63 65 65 62 64 69 64 61
 [385] 66 64 61 63 67 67 66 63 64 67 67 66 67 66 63 64 59 61 62 64 53 68 66 63
 [409] 66 66 62 64 67 65 61 65 67 67 63 65 66 66 63 62 64 67 67 66 64 61 66 65
 [433] 65 60 61 65 66 67 64 61 64 66 70 60 65 66 65 66 63 64 63 63 63 65 64 61
 [457] 63 65 65 63 64 64 60 67 64 59 63 63 66 64 62 64 67 64 65 63 64 59 64 62
 [481] 64 65 64 66 66 62 67 65 62 64 66 66 69 64 60 64 63 62 60 65 68 62 67 66
 [505] 59 65 66 60 65 61 64 64 65 63 66 59 60 62 66 67 65 63 63 65 65 70 64 66
 [529] 66 61 63 67 65 68 66 64 64 62 65 65 64 67 66 65 65 62 65 60 59 65 65 65
 [553] 67 71 66 63 68 64 61 62 69 66 63 63 66 62 64 64 64 68 67 65 61 69 63 62
 [577] 62 64 69 62 62 62 62 64 63 61 58 61 62 62 61 65 65 62 68 65 68 59 62 62
 [601] 61 65 64 66 64 62 64 67 64 63 64 64 63 65 65 63 63 67 66 67 64 64 65 63
 [625] 57 61 68 66 66 62 60 65 60 64 64 60 64 60 70 61 60 64 61 66 65 62 62 61
 [649] 62 60 65 67 65 63 63 68 68 66 64 64 66 61 63 68 62 66 66 62 63 58 65 71
 [673] 62 64 64 64 62 68 62 67 64 65 62 63 66 64 64 63 69 62 67 69 63 65 62 70
 [697] 66 62 59 62 61 66 60 66 63 62 60 64 58 61 64 66 62 64 68 62 62 68 62 64
 [721] 64 60 63 64 63 63 62 64 62 65 63 63 62 68 63 64 63 61 60 63 64 64 66 67
 [745] 68 62 68 67 65 64 66 68 66 62 63 64 64 65 65 58 61 64 67 63 69 66 64 65
 [769] 65 61 62 65 65 64 66 66 67 65 59 63 61 61 63 65 63 61 67 63 64 70 64 67
 [793] 61 64 65 62 61 60 64 67 62 67 64 65 64 65 62 64 66 63 66 62 66 66 66 66
 [817] 62 64 65 64 64 65 66 61 65 62 63 64 67 67 65 63 63 63 63 68 61 66 67 66
 [841] 66 67 67 60 67 65 68 64 61 62 61 61 65 66 64 61 59 66 65 64 63 62 63 67
 [865] 66 66 64 62 63 61 62 64 64 67 67 62 61 62 70 68 64 68 64 67 61 58 63 63
 [889] 66 67 64 60 67 65 65 69 65 64 61 65 59 64 68 66 64 67 63 64 65 66 66 64
 [913] 65 62 64 65 63 69 67 61 64 64 65 63 65 65 65 63 65 61 64 62 69 63 62 66
 [937] 65 61 63 62 60 64 60 65 68 64 62 68 64 66 66 63 68 67 61 61 62 63 66 60
 [961] 65 59 62 64 67 61 62 70 67 68 63 64 66 64 65 63 61 64 67 64 60 69 63 65
 [985] 64 65 65 64 67 68 63 63 66 65 65 67 65 60 63 66 69 61 64 63 63 65 66 66
[1009] 64 60 61 65 62 62 61 68 67 66 65 65 60 67 63 64 65 67 65 65 60 65 62 61
[1033] 64 61 65 67 62 64 66 61 64 65 67 59 61 61 64 68 66 68 62 63 65 67 70 63
[1057] 60 68 60 63 64 58 64 61 66 65 61 66 60 62 63 63 63 61 59 65 62 63 62 64
[1081] 61 58 63 63 64 65 67 63 62 65 66 61 61 64 68 61 66 66 61 61 63 65 67 67
[1105] 64 63 64 59 66 63 63 61 65 64 63 59 67 65 63 64 64 63 61 65 61 65 62 62
[1129] 63 66 61 62 65 65 67 64 67 63 64 63 70 58 63 61 64 61 66 54 66 66 65 68
[1153] 69 63 62 66 63 66 60 65 64 64 65 70 63 60 64 65 65 60 67 65 65 65
> library(RUnit)
> errMsg <- function(err) print(err)
> babies.data <- read.csv('babies.csv')
> load('lab3-tests.rda')
> head(greater.group, 2)
  bwt gestation parity age height weight smoke
4 108       282      0  23     67    125     1
7 132       245      0  23     65    140     0
> ?ttest
> ?t.test
> t.test(lesser.group, alternative="less")
Error in t.test.default(lesser.group, alternative="less") : 
  not enough 'y' observations
> 
> t.test(lesser.group, alternative="less")

	One Sample t-test

data:  lesser.group
t = 64.1772, df = 4605, p-value = 1
alternative hypothesis: true mean is less than 0
95 percent confidence interval:
     -Inf 88.92585
sample estimates:
mean of x 
 86.70321 

> stratified.test.t1
[1] -6.954539e+00  5.813585e-12 -5.661148e+00  1.330137e-08
>     lesser.bwt = lesser.group$bwt
>     greater.bwt = greater.group$bwt
> lesser.bwt
  [1] 120 113 128 136 138 120 144 141 110 114 115 115 105 146 122  93 119 107
 [19] 134 129 110 111 143 110 145 115 102 143 124 106  75 107 101 128  97 103
 [37] 142 156 120  91 127 153 121 120  99 129 131 128 134 114  85 135  87 125
 [55] 105 120 119 119 129 118 131 115  94 117 112 128 117 100 144 105 102 115
 [73] 123 133 134 111 135 134 121 136 112 132 136  96 124 113 137 133 107  96
 [91] 136  75 130  90 137 101 142  98 124 109 150 101 113 127  97 117 105 107
[109] 121 119 117 110 130 140 125 122 129 126 173 111 142  99 113 149 128 125
[127] 130  81 124 125 138 115 140 133 104 113 119 109 110 117  98 132  91 119
[145]  85 106 132  80 109 111 110 101  71 101 100 104 104 112 117 109 120 116
[163] 103 139 123 104 111 122 110 122 133 104 120 118 114 116 129 120 127  71
[181] 122 107 129 126 116 124  98 110 101 104 126 131 127  99 115 136 120 118
[199] 127 132 118 102 132 116 139 132  87 115 116 140 120 120 146 112 132 146
[217] 119 116 100 113 120 142 144 127 123 112 102  99 136 101 100  88  98  96
[235] 104 133  93 118 130 125 130 114 105 101 112  69 114 123 114 115  98 119
[253] 127 131 129 114 110 103 138 111 158 101 116 108 123 129 134 113 121 101
[271] 115 123 111  97 124 124 107 142 103 124 105 133 115 119 141  91 121  98
[289] 115 103 116 170 104 108  97  85 117 109 147 105 105 110 119 103 117 145
[307] 104 123 124 129  91 109 108  79 133 114 128 103 107 113 106 152 136 123
[325] 119 122  93 136 150  94 146 124 141 114 103 113  99  97 123 129 100 131
[343] 146  84 115 115  91 112 115 110  99 131 136 130 134 115  78 109 113 121
[361] 117  87 132  90 131 137 124 136 117 121 139  86  81 133 132 137  84  92
[379] 167 105 125 125 115 174 113 139 127 112 143 116 155 121  87 132 123  91
[397] 144 128 137 104 120 112 138  96 134 126 112 110  83 112 119  86 110 126
[415] 125 136 127  84 110 117  96 124 107 113 107 117 117 136 120 100 134 123
[433] 113  77  62  93 109  92 120 113 126 128 110 162 128 111 137 100 112 145
[451] 126 126 109 119 124 126 116 110 133 133 122 121 100 123  87 128 120 118
[469]  96 111 124 112 115  72 127  90  99  58 109 110 129 115 108 139 115 136
[487] 163 131 104 102  94 119  99 139 144  99 105 119 114 112 123 125 105 133
[505] 109 122 120 118 105 148 120 123 102 103 128 104 159 118 144 121 105 125
[523] 119 101 105 110 127 117 122 120 131 110 105 125 114 103 114  75  94 150
[541] 145 121 134 114  97 160 145  95 123 110 108 136 125  91 129  80 125  94
[559] 148 118 102 120 122 103 105 126 114 118 100 115  91 112 125 130 135 100
[577] 124 119 126 128 116 110 108 118 111 120 121 113 117 158 128 163 126 127
[595] 134 140 102 100 120 130 104 122 137 114  63  98  99  89 106  99  75  97
[613] 106 117 112 141 131 160 106  84 112 104 130  71 119 123 115  88 128  82
[631] 100 114 126 152 116 132 119 106  96 120 102  97 130  97 116 114 127 141
[649] 118  97  81 135 124 115 109 103 118 113
> lesser.data
Error: object 'lesser.data' not found
> lesser.group
     bwt gestation parity age height weight smoke
1    120       284      0  27     62    100     0
2    113       282      0  33     64    135     0
3    128       279      0  28     64    115     1
5    136       286      0  25     62     93     0
6    138       244      0  33     62    178     0
8    120       289      0  25     62    125     0
11   144       282      0  32     64    124     1
12   141       279      0  23     63    128     1
13   110       281      0  36     61     99     1
14   114       273      0  30     63    154     0
15   115       285      0  38     63    130     0
17   115       261      0  33     60    125     1
20   105       270      0  22     56     93     0
26   146       280      0  26     58    106     0
30   122       270      0  26     61    105     0
31    93       278      0  34     61    146     0
33   119       275      0  23     60    105     0
36   107       279      0  24     63    115     0
37   134       288      0  23     63     92     1
39   129       293      0  30     61    160     0
40   110       278      0  23     63    177     0
41   111       270      0  27     61    119     0
43   143       274      0  27     63    110     1
45   110       272      0  25     60     90     0
47   145       291      0  26     63    119     1
48   115       258      0  26     62    130     0
50   102       282      0  28     61    110     0
51   143       286      0  31     64    126     0
53   124       275      0  22     60    130     0
56   106       273      0  28     60    116     0
57    75       232      0  33     61    110     0
58   107       273      0  24     61     96     0
61   101       245      0  23     63    130     1
62   128       283      0  28     63    125     1
64    97       246      0  37     63    150     0
66   103       273      0  31     63    170     1
67   142       276      0  38     63    170     0
69   156       292      0  26     63    118     0
71   120       274      0  24     62    120     0
72    91       270      0  24     60    149     1
73   127       274      0  21     62    110     0
74   153       286      0  26     63    107     1
75   121       276      0  39     63    130     0
76   120       277      0  27     63    126     0
77    99       272      0  27     62    103     1
79   129       280      0  23     64    104     0
84   131       296      0  37     63    143     0
86   128       281      0  33     59    117     0
87   134       268      0  28     62    112     0
88   114       271      0  27     60    104     0
89    85       278      0  23     61    103     1
90   135       282      0  22     64    100     0
91    87       255      0  28     61    100     1
92   125       302      0  37     62    162     0
93   105       254      0  29     64    137     0
94   120       279      0  27     60    121     1
95   119       274      0  33     64    120     0
97   119       273      0  24     61    108     1
101  129       303      0  27     64    125     0
106  118       276      0  29     64    114     0
111  131       288      0  24     61    103     0
116  115       283      0  25     61    150     1
118   94       267      0  30     62    120     1
121  117       278      0  25     62    103     0
123  112       294      0  25     64    125     1
124  128       283      0  24     60    100     0
126  117       258      0  31     64    120     0
131  100       265      0  39     62    107     1
134  144       277      0  30     63    127     0
135  105       268      0  32     61    115     1
137  102       262      0  24     63    125     0
142  115       278      0  29     61    128     0
144  123       318      0  21     64    152     0
146  133       287      0  24     60    104     1
147  134       290      0  22     60    121     0
149  111       273      0  43     62    138     0
151  135       296      0  30     63    123     0
152  134       289      0  22     63    125     0
157  121       272      0  22     62    109     0
160  136       278      0  23     61    105     0
165  112       288      0  32     62    125     0
166  132       290      0  25     64    120     0
167  136       285      0  23     62    175     0
169   96       271      0  23     64    116     0
170  124       277      0  29     63    220     0
171  113       306      0  21     62    150     0
172  137       258      0  25     63    117     0
173  133       268      0  24     61     93     0
174  107       244      0  20     58     97     0
175   96       265      0  28     59    135     1
177  136       275      0  22     63    110     0
178   75       239      0  26     63    124     1
180  130       274      0  30     63    150     0
181   90       290      0  22     63    168     0
184  137       291      0  34     61    110     0
185  101       268      0  19     63    140     0
186  142       275      0  25     64    132     0
187   98       282      0  20     63     97     1
188  124       283      0  23     63    112     0
189  109       281      0  23     61    105     0
190  150       285      0  22     61    110     1
193  101       272      0  29     63    150     1
194  113       246      0  19     62    138     1
195  127       270      0  25     62    150     0
196   97       260      0  23     61     99     1
197  117       282      0  28     64    115     0
201  105       233      0  34     61    130     0
203  107       290      0  28     62    135     0
204  121       275      0  24     63    121     1
205  119       286      0  20     64    180     0
206  117       275      0  20     64    145     1
210  110       254      0  23     63    120     1
211  130       282      0  21     62    106     1
212  140       274      0  23     63    106     1
215  125       290      0  19     64    127     0
217  122       277      0  33     63    135     1
218  129       267      0  22     63    160     0
219  126       276      0  23     63    120     0
221  173       293      0  30     63    110     0
226  111       278      0  21     62    125     0
230  142       274      0  24     63    125     0
231   99       262      0  38     59    110     1
232  113       286      0  23     63    105     0
233  149       282      0  21     61    110     0
235  128       290      0  22     64    118     0
236  125       286      0  21     64    139     0
238  130       285      0  23     63    128     1
240   81       256      0  30     64    148     1
241  124       287      0  27     62    105     1
244  125       279      0  23     63    104     1
245  138       294      0  40     64    125     0
247  115       278      0  23     60    102     1
249  140       294      0  25     61    103     0
250  133       276      1  22     63    119     0
252  104       274      1  20     62    115     1
260  113       282      1  36     59    140     0
261  119       292      0  33     62    118     1
262  109       295      1  23     63    103     1
265  110       293      1  28     64    135     1
268  117       283      0  27     63    108     0
270   98       280      0  35     64    122     1
273  132       285      1  25     63    140     0
274   91       264      0  36     60    100     1
275  119       294      0  34     59    105     0
276   85       273      0  26     60    105     1
277  106       271      1  26     61    110     1
278  132       284      0  29     64    122     0
279   80       266      1  25     62    125     0
280  109       286      0  24     64    125     1
281  111       306      0  27     61    102     0
284  110       285      1  19     64    130     0
287  101       295      0  18     62    145     1
288   71       281      0  32     60    117     1
291  101       278      0  25     62    112     1
292  100       277      0  31     62    100     1
293  104       269      0  35     63    110     1
301  104       260      0  33     64    145     0
303  112       278      1  21     63    120     0
304  117       293      0  39     60    120     1
305  109       282      0  25     62    106     1
307  120       273      0  29     64    130     1
308  116       270      0  29     63    132     0
310  103       273      1  22     64    110     1
312  139       260      1  32     64    127     0
313  123       254      0  26     62    130     1
314  104       280      1  23     64    107     1
315  111       270      0  22     59    103     0
316  122       277      0  32     63    157     1
320  110       277      0  25     61    130     0
323  122       281      0  42     63    103     1
324  133       293      0  23     64    110     1
326  104       307      0  24     59    122     0
328  120       281      0  33     63    113     0
329  118       276      1  18     63    128     0
331  114       268      0  22     64    104     0
332  116       280      0  40     62    159     0
333  129       284      0  24     64    115     0
334  120       286      0  22     62    115     1
335  127       281      0  24     63    112     1
336   71       234      0  32     64    110     1
338  122       286      0  23     64    145     0
341  107       290      0  26     63    112     0
342  129       294      0  32     62    170     1
343  126       274      0  39     62    122     0
344  116       293      1  26     64    125     0
345  124       294      0  26     62    122     0
350   98       276      1  22     61    121     0
351  110       272      0  28     60    108     0
353  101       278      1  20     62    105     0
355  104       276      1  18     60    109     1
359  126       288      0  31     62    150     0
365  131       292      1  22     64    124     1
367  127       280      0  27     62    118     0
368   99       313      1  34     59    100     1
369  115       290      0  30     64    140     1
372  136       299      0  29     64    115     0
374  120       286      0  25     62    105     0
375  118       261      0  26     60    104     0
376  127       304      1  26     62    105     0
377  132       281      1  24     63    117     0
380  118       277      0  25     62    120     0
381  102       286      1  22     64    140     0
383  132       294      0  32     64    116     0
384  116       276      0  33     61    180     0
386  139       279      0  20     64    143     0
387  132       298      1  23     61    137     0
388   87       282      0  27     63    104     1
392  115       276      1  18     63    110     0
393  116       272      0  27     64    130     1
399  140       251      0  28     63    210     0
400  120       271      1  17     64    142     1
401  120       289      1  31     59    102     0
402  146       280      0  23     61    145     0
403  112       283      1  21     62    102     1
404  132       278      0  20     64    150     1
405  146       263      0  39     53    110     1
408  119       277      0  24     63    120     1
411  116       293      1  28     62    108     0
412  100       275      0  27     64    111     1
415  113       288      1  21     61    120     0
419  120       269      1  40     63    130     0
423  142       285      0  33     63    124     0
424  144       273      0  27     62    118     1
425  127       262      1  32     64    125     0
429  123       323      1  17     64    140     0
430  112       281      1  23     61    150     0
434  102       267      1  25     60     93     1
435   99       275      0  23     61    125     1
439  136       295      0  23     64    147     0
440  101       278      0  27     61     99     1
441  100       275      1  25     64    125     0
444   88       252      1  21     60    115     1
449   98       278      0  27     63    110     1
450   96       241      0  23     64    130     1
451  104       282      0  24     63    144     0
452  133       273      1  33     63    135     0
453   93       267      0  25     63    135     1
455  118       277      0  21     64    155     0
456  130       289      0  21     61    130     1
457  125       288      0  22     63    128     1
460  130       293      0  26     63    123     0
461  114       277      1  31     64    125     0
462  105       278      0  21     64    120     0
463  101       289      1  31     60    125     0
465  112       252      0  37     64    162     0
466   69       232      0  31     59    103     1
467  114       264      0  26     63    110     1
468  123       267      0  29     63    111     1
470  114       283      1  15     64    117     1
471  115       290      0  31     62     95     0
472   98       272      1  35     64    129     0
474  119       271      0  28     64    175     1
476  127       247      1  21     63    140     0
477  131       263      0  29     64    180     1
478  129       288      0  28     59    102     0
479  114       286      1  22     64    116     1
480  110       280      0  29     62    110     1
481  103       268      0  31     64    150     1
483  138       282      0  25     64    120     0
486  111       284      0  34     62    110     0
489  158       285      0  28     62    130     0
490  101       286      1  21     64    117     1
494  116       282      0  19     64    120     0
495  108       271      0  19     60    109     1
496  123       298      0  25     64    113     1
497  129       289      0  37     63    132     0
498  134       282      0  24     62    110     0
499  113       298      0  30     60    124     1
502  121       270      1  20     62    103     0
505  101       289      0  27     59     96     0
508  115       276      1  23     60    106     0
510  123       278      0  21     61     89     0
511  111       300      0  20     64    108     1
512   97       279      1  24     64    138     1
514  124       300      0  28     63     95     0
516  124       290      0  26     59    140     0
517  107       280      0  20     60    107     1
518  142       273      1  22     62    125     0
522  103       291      1  26     63    102     0
523  124       285      1  27     63    114     0
527  105       260      0  23     64    197     0
530  133       280      1  25     61    130     0
531  115       269      0  41     63    165     1
536  119       288      1  22     64    132     1
537  141       284      1  17     64    105     0
538   91       260      0  26     62    110     1
541  121       273      0  32     64    112     0
546   98       286      0  31     62    105     1
548  115       278      0  21     60    113     0
549  103       281      1  22     59     98     1
556  116       265      0  36     63    120     0
558  170       303      1  21     64    129     0
559  104       270      0  25     61    110     0
560  108       269      1  20     62    114     0
563   97       263      1  25     63    107     0
564   85       270      1  19     63    118     1
566  117       275      0  22     62    115     1
567  109       302      0  24     64    110     0
568  147       285      0  24     64    137     0
569  105       281      1  23     64    115     0
573  105       274      1  26     61    100     0
575  110       276      0  25     63    107     1
576  119       285      1  26     62    108     0
577  103       292      1  28     62    132     0
578  117       272      0  25     64    116     0
580  145       278      0  24     62    109     0
581  104       271      0  20     62     98     1
582  123       268      1  18     62    110     1
583  124       272      0  27     62    110     0
584  129       275      0  26     64    115     1
585   91       248      0  33     63    202     0
586  109       295      0  32     61    135     0
587  108       268      0  22     58    112     1
588   79       268      0  36     61    108     0
589  133       301      0  23     62    108     0
590  114       309      1  27     62    118     0
591  128       273      0  34     61    125     0
594  103       276      1  21     62    130     1
598  107       256      0  28     59     90     1
599  113       268      0  31     62    100     0
600  106       279      1  21     62    118     1
601  152       285      0  24     61    120     1
603  136       278      0  35     64    118     1
605  123       284      1  18     64    112     1
606  119       288      0  37     62    128     0
607  122       291      0  40     64    155     0
609   93       270      0  25     64    125     1
610  136       274      1  20     63    165     0
611  150       292      0  26     64    124     0
612   94       264      1  26     64    135     0
613  146       306      0  38     63    112     0
616  124       273      0  21     63    115     0
617  141       282      0  27     63    115     0
621  114       251      0  26     64    119     1
622  103       297      0  31     64    125     0
624  113       274      0  23     63    108     1
625   99       249      1  31     57     98     1
626   97       279      0  33     61    105     1
630  123       283      0  27     62    110     0
631  129       287      0  24     60    107     0
633  100       275      0  26     60    115     0
634  131       274      0  28     64    118     1
635  146       279      0  27     64    124     0
636   84       267      0  29     60     95     0
637  115       302      0  28     64    116     0
638  115       281      0  25     60     94     0
640   91       292      1  19     61    125     0
641  112       255      0  39     60    115     0
642  115       316      1  29     64    110     0
643  110       269      0  38     61    102     0
646   99       267      0  22     62     94     0
647  131       274      0  27     62    160     1
648  136       291      1  25     61    105     0
649  130       298      0  20     62    120     0
650  134       296      0  35     60    117     1
654  115       278      0  26     63    112     1
655   78       237      1  23     63    144     0
659  109       283      0  34     64    120     0
660  113       259      0  38     64    128     0
662  121       273      1  34     61    125     0
663  117       288      1  28     63    140     0
665   87       229      0  27     62    138     0
668  132       273      0  28     62    113     0
669   90       286      0  32     63    105     1
670  131       308      0  30     58    150     1
673  137       299      0  24     62    115     0
674  124       270      0  20     64    122     0
675  136       281      1  27     64    127     0
676  117       298      1  22     64    160     0
677  121       269      0  23     62    130     0
679  139       275      0  33     62    118     0
681   86       242      0  20     64    110     1
683   81       254      0  23     62    157     0
684  133       281      0  33     63    120     0
686  132       287      0  29     64    148     0
687  137       274      0  27     64    126     0
688   84       279      0  34     63    190     0
690   92       270      0  34     62    100     1
693  167       288      1  19     63    117     0
695  105       269      0  27     62    100     1
698  125       266      0  21     62    120     1
699  125       283      1  22     59     96     0
700  115       315      1  22     62    110     0
701  174       288      0  25     61    182     0
703  113       262      0  24     60    105     0
705  139       277      0  35     63    140     0
706  127       275      0  26     62    125     0
707  112       272      0  26     60     98     0
708  143       285      0  30     64    135     1
709  116       286      1  22     58    105     1
710  155       279      0  33     61    125     0
711  121       290      0  31     64    127     0
713   87       277      0  31     62    120     1
714  132       330      0  34     64    130     1
716  123       280      0  20     62    105     1
717   91       279      1  27     62    118     0
719  144       289      0  20     62    106     0
720  128       292      0  30     64    127     0
721  137       318      1  19     64    110     0
722  104       289      0  24     60    104     1
723  120       271      0  32     63    130     0
724  112       277      1  23     64    118     0
725  138       286      0  26     63    111     0
726   96       280      0  27     63    105     1
727  134       285      0  35     62    134     0
728  126       285      0  24     64    140     0
729  112       300      0  29     62    121     0
731  110       275      0  25     63    120     0
732   83       253      0  29     63    110     1
733  112       288      1  20     62    110     0
735  119       300      1  34     63    124     0
736   86       246      0  25     64    113     1
737  110       269      0  38     63    145     1
738  126       282      0  23     61    120     0
739  125       272      0  30     60     96     0
740  136       252      0  27     63    130     0
741  127       283      1  29     64    119     0
742   84       272      0  25     64    150     1
746  110       286      0  26     62    100     0
750  117       269      1  21     64    149     1
754   96       280      1  34     62    127     1
755  124       289      0  29     63    110     0
756  107       272      0  30     64    140     1
757  113       277      0  38     64    108     0
760  107       268      0  37     58    112     1
761  117       255      0  26     61    120     0
762  117       305      0  24     64    155     0
764  136       268      0  30     63    132     1
767  120       279      0  38     64    124     0
770  100       288      1  28     61    108     1
771  134       284      0  28     62    112     0
774  123       271      0  41     64    162     0
779  113       289      1  26     59     91     0
780   77       238      1  23     63    103     1
781   62       228      0  24     61    107     0
782   93       245      0  33     61    100     1
783  109       275      1  37     63    112     1
785   92       224      0  19     63    134     1
786  120       281      0  26     61    115     0
788  113       287      0  36     63    118     0
789  126       251      1  28     64    123     0
791  128       282      1  25     64    125     0
793  110       306      1  32     61    122     0
794  162       284      0  27     64    126     0
796  128       284      0  23     62    110     0
797  111       275      1  18     61    108     1
798  137       280      0  34     60    107     0
799  100       264      0  29     64    120     1
801  112       267      1  22     62    138     0
803  145       308      0  35     64    110     1
805  126       278      0  26     64    150     1
807  126       282      0  33     62    117     0
808  109       291      0  39     64    107     0
810  119       286      0  22     63    185     1
812  124       284      1  17     62    112     0
817  126       293      1  27     62    111     0
818  116       277      0  41     64    124     1
820  110       181      0  27     64    133     0
821  133       285      1  30     64    160     0
824  133       297      0  36     61    125     0
826  122       306      1  22     62    100     0
827  121       271      1  34     63    129     1
828  100       272      0  30     64    150     1
832  123       282      0  30     63    118     0
833   87       275      0  28     63    110     1
834  128       291      1  27     63    132     0
835  120       288      0  28     63    125     0
837  118       265      0  27     61    123     0
844   96       278      1  18     60    120     1
848  111       281      1  27     64    112     0
849  124       275      0  28     61    116     0
850  112       292      1  28     62    110     1
851  115       281      0  28     61    128     1
852   72       271      0  39     61    136     0
855  127       272      0  20     64    130     1
856   90       266      0  23     61     99     1
857   99       273      1  27     59    115     0
860   58       245      0  34     64    156     1
861  109       265      1  24     63    107     1
862  110       277      1  19     62    160     0
863  129       278      0  27     63    128     0
867  115       268      1  31     64    125     0
868  108       283      0  35     62    108     0
869  139       281      0  27     63    137     0
870  115       275      0  25     61    155     1
871  136       288      0  23     62    217     0
872  163       289      1  25     64    126     1
873  131       285      0  26     64    130     0
876  104       270      1  26     62    115     0
877  102       267      1  24     61    109     1
878   94       268      0  30     62    105     1
881  119       286      0  26     64    123     1
883   99       252      0  21     64    120     0
885  139       284      0  37     61    121     0
886  144       304      1  27     58    102     1
887   99       270      0  22     63    115     1
888  105       280      1  22     63    116     0
891  119       270      1  20     64    109     0
892  114       291      0  35     60    112     0
898  112       266      0  26     64    122     0
899  123       314      0  22     61    121     1
901  125       290      0  36     59    105     0
902  105       295      1  20     64    112     1
905  133       290      0  21     64    145     0
907  109       269      0  23     63    113     0
908  122       286      0  23     64    120     1
912  120       283      0  28     64    122     1
914  118       278      1  19     62    126     0
915  105       330      0  23     64    112     1
917  148       291      1  21     63    115     0
920  120       280      0  31     61    111     0
921  123       296      1  26     64    110     1
922  102       275      0  43     64    160     0
924  103       276      1  19     63    149     1
928  128       281      0  28     63    150     0
930  104       288      1  27     61    122     1
931  159       296      1  27     64    112     0
932  118       276      0  29     62    130     1
934  144       281      0  20     63    120     0
935  121       270      0  25     62    108     1
938  105       281      1  19     61    130     0
939  125       283      0  37     63    145     1
940  119       259      0  37     62    130     0
941  101       273      0  39     60    113     0
942  105       277      1  25     64    156     0
943  110       281      0  27     60    110     0
946  127       276      0  37     64    159     0
947  117       324      0  22     62    164     1
949  122       273      1  23     64    130     1
952  120       275      0  32     63    115     1
955  131       284      1  19     61    114     1
956  110       277      0  36     61    116     0
957  105       276      0  20     62    112     1
958  125       255      0  23     63    133     0
960  114       289      0  36     60    115     0
962  103       250      0  40     59    140     0
963  114       276      0  26     62    127     0
964   75       247      0  36     64    120     1
966   94       271      0  36     61    130     1
967  150       287      0  36     62    135     0
971  145       304      1  25     63    109     1
972  121       285      0  34     64    110     0
974  134       286      0  25     64    125     0
976  114       276      0  24     63    110     0
977   97       265      0  30     61    110     0
978  160       292      0  28     64    120     0
980  145       288      0  28     64    116     0
981   95       273      0  23     60     90     0
983  123       288      0  27     63    125     0
985  110       268      0  34     64    127     0
988  108       279      1  19     64    115     0
991  136       283      1  24     63    119     0
992  125       290      0  32     63    135     0
998   91       266      0  23     60    120     1
999  129       276      0  31     63    125     0
1002  80       262      1  31     61    100     1
1003 125       273      0  30     64    145     0
1004  94       284      0  24     63    104     1
1005 148       281      0  27     63    110     1
1009 118       279      1  21     64    108     0
1010 102       283      0  39     60    119     0
1011 120       280      0  24     61    118     0
1013 122       280      1  45     62    128     0
1014 103       268      0  32     62     97     1
1015 105       312      0  41     61    115     1
1021 126       299      1  21     60    114     0
1023 114       277      1  19     63    107     0
1024 118       272      0  23     64    113     0
1029 100       264      0  28     60    111     1
1031 115       276      1  20     62    105     1
1032  91       292      1  26     61    113     1
1033 112       287      0  27     64    110     1
1034 125       289      1  31     61    120     0
1037 130       279      0  31     62    122     0
1038 135       289      0  25     64    127     0
1040 100       281      0  24     61    115     0
1041 124       277      1  23     64    104     0
1044 119       275      0  27     59    113     1
1045 126       272      1  35     61    120     1
1046 128       267      0  37     61    142     0
1047 116       282      1  19     64    124     0
1051 110       292      0  35     62    127     0
1052 108       278      0  28     63    125     1
1056 118       273      0  21     63    120     0
1057 111       267      1  24     60    115     0
1059 120       280      0  30     60    115     0
1060 121       281      0  29     63    108     0
1061 113       282      0  30     64    118     1
1062 117       270      0  23     58    115     0
1063 158       267      0  35     64    125     0
1064 128       277      0  39     61    120     0
1067 163       298      0  37     61     98     0
1069 126       271      1  21     60    105     0
1070 127       283      0  42     62    154     1
1071 134       287      0  40     63    118     0
1072 140       274      0  41     63    122     0
1073 102       285      0  29     63    117     1
1074 100       252      0  24     61    150     0
1075 120       295      0  29     59    100     1
1077 130       246      0  19     62    118     0
1078 104       280      0  41     63    118     1
1079 122       285      0  31     62    102     1
1080 137       276      1  25     64    127     0
1081 114       285      1  20     61    104     0
1082  63       236      1  24     58     99     0
1083  98       318      0  23     63    107     0
1084  99       268      0  32     63    124     1
1085  89       238      1  26     64    136     0
1088 106       279      0  29     63    125     1
1089  99       246      0  35     62    106     0
1092  75       266      0  37     61    113     1
1093  97       285      0  35     61    112     1
1094 106       264      0  41     64    114     0
1096 117       269      1  28     61     99     0
1099 112       270      0  29     61    124     0
1100 141       293      0  28     61    125     0
1101 131       259      0  19     63    134     0
1105 160       291      0  34     64    110     1
1106 106       283      0  24     63    119     0
1107  84       260      1  20     64    104     1
1108 112       268      1  25     59    103     0
1110 104       267      0  30     63    180     0
1111 130       294      0  32     63    110     1
1112  71       254      0  19     61    145     1
1114 119       280      1  21     64    128     0
1115 123       353      0  26     63    115     0
1116 115       278      0  27     59     95     0
1119  88       276      0  25     63    103     1
1120 128       241      1  17     64    126     0
1121  82       274      0  31     64    101     1
1122 100       274      0  24     63    113     0
1123 114       271      0  32     61    130     0
1125 126       298      0  24     61    112     0
1127 152       295      0  39     62    140     0
1128 116       274      0  21     62    110     1
1129 132       302      0  36     63    145     1
1131 119       277      1  18     61     89     1
1132 106       312      0  24     62    135     1
1136  96       276      0  33     64    127     1
1138 120       300      0  34     63    150     1
1139 102       338      0  19     64    170     0
1140  97       255      1  22     63    107     1
1142 130       297      0  32     58    130     0
1143  97       260      1  25     63    115     1
1144 116       273      0  31     61    120     0
1145 114       266      0  29     64    113     0
1146 127       242      0  17     61    135     1
1148 141       281      0  29     54    156     1
1154 118       293      0  21     63    103     0
1155  97       266      0  24     62    109     0
1157  81       285      0  19     63    150     1
1159 135       284      1  19     60     95     0
1161 124       288      1  21     64    116     1
1162 115       262      1  23     64    136     1
1165 109       244      1  21     63    102     1
1166 103       278      0  30     60     87     1
1167 118       276      0  34     64    116     0
1170 113       275      1  27     60    100     0
> greater.bwt
  [1] 108 132 143 140  92 144 119 115 137 122 131 103 114 125 114 130 113 134
 [19] 122  87 155 122 108 146 124 145 124 122 104 137 130 133 149 139 114 138
 [37] 138 125 107 133 155 126 137 125  91  95 141 131 121 100 118 152 121 117
 [55] 112 109 132 101 128 134 127  93 122 147 120 136 160 113 126 126 119 118
 [73] 144 125 116 129 113 131 121 138 120 122 134 101 113 142 104 118 123 119
 [91] 131 150  85 128 115 134 117 115  93 154  93  85 144 114 154 150 126 122
[109] 141 117 114 116 125 110 142 102 127 119 152 123 143 131 141 129 104 131
[127] 148 137 115 136 121 143 136  98 108 124 106 117 117 149 135 110 121 142
[145] 138 131 140 120 116 129 133 105  93 130 106 140  88 106 135 123 145 102
[163] 129 135  96 100 154 127 126 127  98 127 129 132 145 102 121 102 143 163
[181] 138 131 130 123 119 125 144 123 120 122 128 135 129 138 123 129 122 132
[199] 114 130 117 115  85  99  68 102 109  78 128 107 109 117  95 127 107 126
[217] 101 140 115 132 129 128 154 117 126 124 132 103 132 114  71 123 147 125
[235] 115  93 109 130 122 129 129 174 105 105 133 161 108 153 127 128 117 123
[253] 116 116 111 102 118 126 131 147 123 125 117  99 115 118 144  99 130 135
[271] 115 123 154 120 129  97 176 143 127 150 124 112 129 125  96 138 127 127
[289] 116 126 119 117 118 117 109 128 150  86 100 116 110 136 166 120  95 103
[307] 144 116 110 133 132 136 114 129 124 155 125 127 115 110 129 147 138 148
[325] 131 123  96 123 152 127 125 139 114  98 119 144 121 165 125 137  88 108
[343] 141 130 139 130 145 135 143  98 116 160 134 116 111 136 103 155 122 113
[361] 122 102 125 164 124  90 128  86 125 116 131 151  88 137 127 129 128  85
[379] 122 116 144 138 150 128 142  77 124 158 112  97 115  89 129 106 122 136
[397] 121 112 139 130 146 147 135 117 138 119 113 140 134  55 123 105 138 139
[415]  99 117 119 100  98 122 118 137 143 108  78 111 169 144 144 143 105 129
[433]  65 139 109 122 115 120 131  96 102 102 112 135 155 109  73 123  65 108
[451] 126 145 139 124 121 119 127 117 137 133 107 157 108 123 174 129 100  96
[469] 131 129 141 110 160 158 133 128  98 117 143 156  72  91 117 112 130 132
[487] 114 139  82 124 138  97 122  84 139 103 112 102 113  87 144 116  75 138
[505]  99 146 110 114 143 113 127 132 128 130 125 117
> t.test(lesser.bwt, alternative="less")

	One Sample t-test

data:  lesser.bwt
t = 170.4702, df = 657, p-value = 1
alternative hypothesis: true mean is less than 0
95 percent confidence interval:
     -Inf 117.8896
sample estimates:
mean of x 
 116.7614 

> t.test(lesser.bwt, alternative="less")

	One Sample t-test

data:  lesser.bwt
t = 170.4702, df = 657, p-value = 1
alternative hypothesis: true mean is less than 0
95 percent confidence interval:
     -Inf 117.8896
sample estimates:
mean of x 
 116.7614 

> ?t.test
> head(lesser.group, 4)
  bwt gestation parity age height weight smoke
1 120       284      0  27     62    100     0
2 113       282      0  33     64    135     0
3 128       279      0  28     64    115     1
5 136       286      0  25     62     93     0
>     lesser.smoker.bwt = lesser.group[lesser.group$smoke == 0,]$bwt
Error in `[.data.frame`(lesser.group, lesser.group$smoke == 0) : 
  undefined columns selected
>     lesser.smoker.bwt = lesser.group[lesser.group$smoke == 0,]$bwt
> lesser.smoker.bwt
  [1] 120 113 136 138 120 114 115 105 146 122  93 119 107 129 110 111 110 115
 [19] 102 143 124 106  75 107  97 142 156 120 127 121 120 129 131 128 134 114
 [37] 135 125 105 119 129 118 131 117 128 117 144 102 115 123 134 111 135 134
 [55] 121 136 112 132 136  96 124 113 137 133 107 136 130  90 137 101 142 124
 [73] 109 127 117 105 107 119 125 129 126 173 111 142 113 149 128 125 138 140
 [91] 133 113 117 132 119 132  80 111 110 104 112 116 139 111 110 104 120 118
[109] 114 116 129 122 107 126 116 124  98 110 101 126 127 136 120 118 127 132
[127] 118 102 132 116 139 132 115 140 120 146 116 113 120 142 127 123 112 136
[145] 100 104 133 118 130 114 105 101 112 115  98 127 129 138 111 158 116 129
[163] 134 121 101 115 123 124 124 142 103 124 105 133 141 121 115 116 170 104
[181] 108  97 109 147 105 105 119 103 117 145 124  91 109  79 133 114 128 113
[199] 119 122 136 150  94 146 124 141 103 123 129 100 146  84 115 115  91 112
[217] 115 110  99 136 130  78 109 113 121 117  87 132 137 124 136 117 121 139
[235]  81 133 132 137  84 167 125 115 174 113 139 127 112 155 121  91 144 128
[253] 137 120 112 138 134 126 112 110 112 119 126 125 136 127 110 124 113 117
[271] 117 120 134 123 113  62 120 113 126 128 110 162 128 137 112 126 109 124
[289] 126 110 133 133 122 123 128 120 118 111 124  72  99 110 129 115 108 139
[307] 136 131 104  99 139 105 119 114 112 125 133 109 118 148 120 102 128 159
[325] 144 105 119 101 105 110 127 110 125 114 103 114 150 121 134 114  97 160
[343] 145  95 123 110 108 136 125 129 125 118 102 120 122 126 114 118 125 130
[361] 135 100 124 128 116 110 118 111 120 121 117 158 128 163 126 134 140 100
[379] 130 137 114  63  98  89  99 106 117 112 141 131 106 112 104 119 123 115
[397] 128 100 114 126 152 102 130 116 114 118  97 135 118 113
> greater.smoker.bwt = lesser.group[lesser.group$smoke == 1, ]$bwt
> greater.smoker.bwt
  [1] 128 144 141 110 115 134 143 145 101 128 103  91 153  99  85  87 120 119
 [19] 115  94 112 100 105 133  96  75  98 150 101 113  97 121 117 110 130 140
 [37] 122  99 130  81 124 125 115 104 119 109 110  98  91  85 106 109 101  71
 [55] 101 100 104 117 109 120 103 123 104 122 122 133 120 127  71 129 104 131
 [73]  99 115  87 116 120 112 132 146 119 100 144 102  99 101  88  98  96  93
 [91] 130 125  69 114 123 114 119 131 114 110 103 101 108 123 113 111  97 107
[109] 115 119  91  98 103  85 117 110 104 123 129 108 103 107 106 152 136 123
[127]  93 114 113  99  97 131 131 134 115  90 131  86  92 105 125 143 116  87
[145] 132 123 104  96  83  86 110  84 117  96 107 107 136 100  77  93 109  92
[163] 111 100 145 126 119 116 121 100  87  96 112 115 127  90  58 109 115 163
[181] 102  94 119 144  99 123 105 122 120 105 123 103 104 118 121 125 117 122
[199] 120 131 105  75  94 145  91  80  94 148 103 105 100 115  91 112 119 126
[217] 108 113 127 102 120 104 122  99 106  75  97 160  84 130  71  88  82 116
[235] 132 119 106  96 120  97  97 127 141  81 124 115 109 103
> length(lesser.smoker.bwt)
[1] 410
> length(greater.smoker.bwt)
[1] 248
> lesser.nonsmoker.bwt = greater.smoker.bwt
> lesser.nonsmoker.bwt
  [1] 128 144 141 110 115 134 143 145 101 128 103  91 153  99  85  87 120 119
 [19] 115  94 112 100 105 133  96  75  98 150 101 113  97 121 117 110 130 140
 [37] 122  99 130  81 124 125 115 104 119 109 110  98  91  85 106 109 101  71
 [55] 101 100 104 117 109 120 103 123 104 122 122 133 120 127  71 129 104 131
 [73]  99 115  87 116 120 112 132 146 119 100 144 102  99 101  88  98  96  93
 [91] 130 125  69 114 123 114 119 131 114 110 103 101 108 123 113 111  97 107
[109] 115 119  91  98 103  85 117 110 104 123 129 108 103 107 106 152 136 123
[127]  93 114 113  99  97 131 131 134 115  90 131  86  92 105 125 143 116  87
[145] 132 123 104  96  83  86 110  84 117  96 107 107 136 100  77  93 109  92
[163] 111 100 145 126 119 116 121 100  87  96 112 115 127  90  58 109 115 163
[181] 102  94 119 144  99 123 105 122 120 105 123 103 104 118 121 125 117 122
[199] 120 131 105  75  94 145  91  80  94 148 103 105 100 115  91 112 119 126
[217] 108 113 127 102 120 104 122  99 106  75  97 160  84 130  71  88  82 116
[235] 132 119 106  96 120  97  97 127 141  81 124 115 109 103
> lesser.smoker.bwt = lesser.group[lesser.group$smoke == 1, ]$bwt
>     lesser.nonsmoker.bwt = lesser.group[lesser.group$smoke == 0, ]$bwt
>     greater.smoker.bwt = greater.group[greater.group$smoke == 1, ]$bwt
>     greater.nonsmoker.bwt = greater.group[greater.group$smoke == 0, ]$bwt
> greater.smoker.bwt
  [1] 108 143  92 119 115 103 114 114 122  87 108 124 122 104 137 133 114 125
 [19] 107  91  95 141 100 101 128  93 160 113 118 116 113 131 121 122 101 113
 [37] 142 104 118 119 115 154 144 114 154 150 117 119 123 141 129 104 136 121
 [55]  98 124 117 117 116 129 133 130 106 140 145 102 129 135 126 127  98 102
 [73] 143 130 123 144 129 122 117 115  99  68 102 109 128 109 117  95 127 107
 [91] 126 101 132 129 117 126 132 114  93 130 105 133 161 127 128 117 116 126
[109] 117 115 118 144 130 135 115 123 154 127 129 125  96 138 127 126 119 117
[127] 118 109 128  86 100 120  95 103 144 136 129 115 110 123  96 125 114  98
[145] 144 125  88 145 134 103 102  86  88 122 142  77 124 112  97 115 106 121
[163] 139 146 138 119 105 139  99 100 118 137 108  78 111 109 115 120  96 102
[181] 155 109 123  65 108 100  96 131 133  98 117 156  72  91 117 130 114  82
[199] 124 138  97 103 112 102  87 116  75 114 143 113 130
> greater.nonsmoker.bwt
  [1] 132 140 144 137 122 131 125 130 113 134 155 122 146 145 124 130 149 139
 [19] 138 138 133 155 126 137 125 131 121 118 152 121 117 112 109 132 134 127
 [37] 122 147 120 136 126 126 119 144 125 129 138 120 134 123 131 150  85 128
 [55] 134 117 115  93  93  85 126 122 141 114 116 125 110 142 102 127 152 143
 [73] 131 131 148 137 115 143 136 108 106 149 135 110 121 142 138 131 140 120
 [91] 105  93  88 106 135 123  96 100 154 127 127 129 132 145 121 102 163 138
[109] 131 119 125 123 120 122 128 135 129 138 123 132 114 130  85  78 107 140
[127] 115 128 154 124 103 132  71 123 147 125 115 109 122 129 129 174 105 108
[145] 153 123 116 111 102 118 131 147 123 125  99  99 120 129  97 176 143 150
[163] 124 112 127 116 117 150 116 110 136 166 116 110 133 132 114 124 155 125
[181] 127 129 147 138 148 131 123 152 127 139 119 121 165 137 108 141 130 139
[199] 130 135 143  98 116 160 116 111 136 155 122 113 122 125 164 124  90 128
[217] 125 116 131 151 137 127 129 128  85 116 144 138 150 128 158  89 129 122
[235] 136 112 130 147 135 117 113 140 134  55 123 138 117 119  98 122 143 169
[253] 144 144 143 105 129  65 139 122 131 102 112 135  73 126 145 139 124 121
[271] 119 127 117 137 133 107 157 108 123 174 129 129 141 110 160 158 128 143
[289] 112 132 139 122  84 139 113 144 138  99 146 110 127 132 128 125 117
> x = t.test(lesser.smoker.bwt, lesser.nonsmoker.bwt, alternative="less")

	Welch Two Sample t-test

data:  lesser.smoker.bwt and lesser.nonsmoker.bwt
t = -6.9545, df = 479.902, p-value = 5.814e-12
alternative hypothesis: true difference in means is less than 0
95 percent confidence interval:
      -Inf -7.415669
sample estimates:
mean of x mean of y 
 110.7056  120.4244 

> stratified.test.t1
[1] -6.954539e+00  5.813585e-12 -5.661148e+00  1.330137e-08
> x = t.test(lesser.smoker.bwt, lesser.nonsmoker.bwt, alternative="less")
> x

	Welch Two Sample t-test

data:  lesser.smoker.bwt and lesser.nonsmoker.bwt
t = -6.9545, df = 479.902, p-value = 5.814e-12
alternative hypothesis: true difference in means is less than 0
95 percent confidence interval:
      -Inf -7.415669
sample estimates:
mean of x mean of y 
 110.7056  120.4244 

> x.t
Error: object 'x.t' not found
> x$t
NULL
> class(x)
[1] "htest"
> ?htest
> ?t.test
> x$statistic
        t 
-6.954539 
> x$p-value
Error: object 'value' not found
> x$p.value
[1] 5.813585e-12
> stratified.test.t1
[1] -6.954539e+00  5.813585e-12 -5.661148e+00  1.330137e-08
> t.test(lesser.smoker.bwt, lesser.nonsmoker.bwt, alternative="less")

	Welch Two Sample t-test

data:  lesser.nonsmoker.bwt and lesser.smoker.bwt
t = 6.9545, df = 479.902, p-value = 1
alternative hypothesis: true difference in means is less than 0
95 percent confidence interval:
     -Inf 12.02182
sample estimates:
mean of x mean of y 
 120.4244  110.7056 

> t.test(lesser.smoker.bwt, lesser.nonsmoker.bwt, alternative="less")

	Welch Two Sample t-test

data:  lesser.smoker.bwt and lesser.nonsmoker.bwt
t = -6.9545, df = 479.902, p-value = 5.814e-12
alternative hypothesis: true difference in means is less than 0
95 percent confidence interval:
      -Inf -7.415669
sample estimates:
mean of x mean of y 
 110.7056  120.4244 

> 
+ . + + . + 
> stratifiedTest <- function(data, group.variable, group.cutoff, test.alternative) {
+ 
+     stopifnot(group.variable %in% names(data)[2:6]) 
+ 
+     var.data = data[, which(names(data) == group.variable)]
+     lesser.group = data[var.data <= group.cutoff, ]
+     greater.group = data[var.data >  .... [TRUNCATED] 
> output.t1 <- stratifiedTest(babies.data, "height", 64, test.alternative="less")
> tryCatch(checkEquals(stratified.test.t1, unname(unlist(output.t1))),
+          error=function(err) errMsg(err))
[1] TRUE
> output.t2 <- stratifiedTest(babies.data, "gestation", 280, test.alternative="less")
> tryCatch(checkEquals(stratified.test.t2, unname(unlist(output.t2))),
+          error=function(err) errMsg(err))
[1] TRUE
> ?hist
> output.t1
$lesser
$lesser$t.stat
        t 
-6.954539 

$lesser$p.val
[1] 5.813585e-12


$greater
$greater$t.stat
        t 
-5.661148 

$greater$p.val
[1] 1.330137e-08


> hist(lesser.group$bwt, density=TRUE)
Error in hist.default(lesser.group, density = TRUE) : 'x' must be numeric
> hist(lesser.group$bwt, probability = TRUE, density=TRUE)
> hist(lesser.group$bwt, density=TRUE)
> d = density(lesser.group$bwt)
> d

Call:
	density.default(x = lesser.group$bwt)

Data: lesser.group$bwt (658 obs.);	Bandwidth 'bw' = 4.219

       x                y            
 Min.   : 45.34   Min.   :1.710e-06  
 1st Qu.: 80.67   1st Qu.:5.669e-04  
 Median :116.00   Median :2.706e-03  
 Mean   :116.00   Mean   :7.069e-03  
 3rd Qu.:151.33   3rd Qu.:1.349e-02  
 Max.   :186.66   Max.   :2.438e-02  
> plot(d)
> lesser.smoker.density = density(lesser.smoker.bwt)
>     lesser.nonsmoker.density = density(lesser.nonsmoker.bwt)
>     greater.smoker.density = density(greater.smoker.bwt)
>     greater.nonsmoker.density(density(greater.nonsmoker.bwt)
+ )
Error: could not find function "greater.nonsmoker.density"
> lesser.smoker.density = density(lesser.smoker.bwt)
>     lesser.nonsmoker.density = density(lesser.nonsmoker.bwt)
>     greater.smoker.density = density(greater.smoker.bwt)
>     greater.nonsmoker.density = density(greater.nonsmoker.bwt)
> lesser.smoker.density

Call:
	density.default(x = lesser.smoker.bwt)

Data: lesser.smoker.bwt (248 obs.);	Bandwidth 'bw' = 5.128

       x                y            
 Min.   : 42.62   Min.   :3.542e-06  
 1st Qu.: 76.56   1st Qu.:6.028e-04  
 Median :110.50   Median :4.199e-03  
 Mean   :110.50   Mean   :7.358e-03  
 3rd Qu.:144.44   3rd Qu.:1.428e-02  
 Max.   :178.38   Max.   :2.132e-02  
> ?density
> ?plot
> plot(lesser.smoker.density, lesser.nonsmoker.density)
> plot(lesser.smoker.density)
> lines(lesser.nonsmoker.density, col="red")
Warning message:
In plot.xy(xy.coords(x, y), type = type, ...) :
  "color" is not a graphical parameter
> lines(lesser.nonsmoker.density, col="red")
> plot(greater.nonsmoker.density)
> ?attach
> par(mfrow=c(1, 2))
Warning message:
In par(mfro = c(1, 2)) : "mfro" is not a graphical parameter
> par(mfrow=c(1, 2))
> plot(lesser.nonsmoker.density)
>     lines(lesser.smoker.density, col="red")
>     plot(greater.nonsmoker.density)
>     lines(greater.smoker.density, col="red")
> 